ROUTINE ASCN.Msg.RecMap.LFO5.Msg16.Record.1 [Type=INT,Generated]
 ;ASCN.Msg.RecMap.LFO5.Msg16.Record.1
 ;Generated for class ASCN.Msg.RecMap.LFO5.Msg16.Record.  Do NOT edit. 08/13/2020 09:37:53AM
 ;;614E6363;ASCN.Msg.RecMap.LFO5.Msg16.Record
 ;
SQLUPPER(v,l) { quit $zu(28,v,7,$g(l,32767)) }
ALPHAUP(v,r) { quit $zu(28,v,6) }
STRING(v,l) { quit $zu(28,v,9,$g(l,32767)) }
SQLSTRING(v,l) { quit $zu(28,v,8,$g(l,32767)) }
UPPER(v) { quit $zu(28,v,5) }
MVR(v) { quit $zu(28,v,2) }
TRUNCATE(v,l) { quit $e(v,1,$g(l,3641144)) }
%BindExport(dev,Seen,RegisterOref,AllowedDepth,AllowedCapacity) public {
   i $d(Seen(+$this)) q 1
   Set Seen(+$this)=$this
   s sc = 1
 s proporef=..%ParentBatch
   d:RegisterOref InitObjVar^%SYS.BINDSRV($this)
   i dev'="" s t=$io u dev i $zobjexport($this_"",3)+$zobjexport($this."%%OID",3)+$zobjexport($this,3)!1 u t
 If AllowedDepth>0 Set AllowedDepth = AllowedDepth - 1
 If AllowedCapacity>0 Set AllowedCapacity = AllowedCapacity - 1/1
 s proporef=..%ParentBatch
       i proporef'="" s sc=1 i AllowedDepth'=0,AllowedCapacity'=0 s sc=proporef.%BindExport(dev,.Seen,RegisterOref,AllowedDepth,AllowedCapacity) q:('sc) sc
   Quit sc }
%BuildIndices(pIndexList="",pAutoPurge=1,pLockFlag=0,pJournalFlag=1,pStartID="",pEndID="",pIgnoreIndexList="") public {
	if ($listlength(pIndexList)=1)&&($listget(pIndexList,1)="") { return 1 }
	Set class=$classname(),tBuildFlags=1,tBuildFlags(class)=$c(0)
	Set tPtr=0,tStatus=1,pJournalFlag=''pJournalFlag
	While $listnext(pIndexList,tPtr,tIndex) {
		continue:tIndex=""
		If '$d(^oddCOM(class,"i",tIndex)) {
			Set tStatus=$select(+tStatus:$$Error^%apiOBJ(5066,class_"::"_tIndex),1:$$AppendStatus^%occSystem(tStatus,$$Error^%apiOBJ(5066,class_"::"_tIndex)))
		}
	}
	If ('tStatus) RETURN tStatus
	if ((pIndexList="")||($listfind(pIndexList,"%ParentBatchIdx"))),'$listfind(pIgnoreIndexList,"%ParentBatchIdx") { set $Extract(tBuildFlags(class),1)=$c(1) }
	Quit ..%BuildIndexInternal(.pLockFlag,.pAutoPurge,.pStartID,.pEndID,.pIndexList,.tBuildFlags,"^ASCN.Msg.RecMap.LFO9944.RecordD",0,.pJournalFlag,0) }
%BuildIndicesSegment(pStartID,pEndID,pIndexHandle=0,pLockFlag=1,pFirstRange=0,pJob="") public {
	New %tIndexBuffer
	Try {
		set tStatus=1,tLocked=0
		If pLockFlag'=2,$Ascii(pIndexHandle($classname()),1),$SortBegin(^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx")),$increment(^IRIS.TempIndexBuild(pJob,1)) { Do $system.Event.Create($name(^IRIS.TempIndexBuild(pJob,1))) }
		Set tPrefetch=$prefetchon(^ASCN.Msg.RecMap.LFO9944.RecordD)
		If 'pFirstRange||('$data(^ASCN.Msg.RecMap.LFO9944.RecordD(pStartID))) { Set tID=$order(^ASCN.Msg.RecMap.LFO9944.RecordD(pStartID)) } Else { Set tID=pStartID }
		While tID'="",(pEndID="")||(tID']]pEndID) {
			If pLockFlag=2 {
				Set tSC = ..%LockId(tID,1)
				If ('tSC) {
					Set tStatus=$select(+tStatus:tSC,1:$$AppendStatus^%occSystem(tStatus,tSC))
					Set tID=$order(^ASCN.Msg.RecMap.LFO9944.RecordD(tID))
					Continue
				}
			}
			If pLockFlag'=2||($data(^ASCN.Msg.RecMap.LFO9944.RecordD(tID))) {
				Set tSC=..%FileIndices(tID,.pIndexHandle)
				If ('tSC) { Set tStatus=$select(+tStatus:tSC,1:$$AppendStatus^%occSystem(tStatus,tSC)) }
			}
			Do:pLockFlag=2 ..%UnlockId(tID,1,1)
			set tID=$order(^ASCN.Msg.RecMap.LFO9944.RecordD(tID))
		}
	}
	Catch tException {
		Set tSC=tException.AsStatus(),tStatus=$select(+tStatus:tSC,1:$$AppendStatus^%occSystem(tStatus,tSC))
	}
	If pLockFlag'=2,$Ascii(pIndexHandle($classname()),1) {
		If $increment(^IRIS.TempIndexBuild(pJob,1),-1)=0 { Do $system.Event.Delete($name(^IRIS.TempIndexBuild(pJob,1))) } Else { Try { Do $system.Event.Wait($name(^IRIS.TempIndexBuild(pJob,1))) } Catch {} }
		If $SortEnd(^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx")) {}
	}
	Set:$Get(tPrefetch) tPrefetch=$prefetchoff(^ASCN.Msg.RecMap.LFO9944.RecordD)
	Quit tStatus }
%CheckConstraints(pID,pConstraintList="",pCheckDisabled=0,pErrorInfo) [ SQLCODE,pID,tCol1 ] public { New SQLCODE,tCol1 
	set tStatus = ..%OnDetermineClass($select(pID="":"",1:$listbuild(pID_"")),.tMSTC) if ('tStatus) { set pErrorInfo = $Listbuild(pID) quit tStatus } if tMSTC '= $classname() { quit $classmethod(tMSTC,"%CheckConstraints",pID,pConstraintList) }
	set tStatus = 1, pErrorInfo = ""
	 ;---&sql(select %ParentBatch INTO :tCol1 FROM ASCN_Msg_RecMap_LFO5_Msg16.Record WHERE %ID = :pID)
 	 ;--- ** SQL PUBLIC Variables: SQLCODE, pID, tCol1
	try { d $classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEVKAzPkGiBJYMvyWe9pM4Ibcm0M","%New") } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEVKAzPkGiBJYMvyWe9pM4Ibcm0M")||($ze["<ZSQLU>") { d %0dsqlA } else { throw } }
	if 'SQLCODE {
		if ((pConstraintList="")||($lf(pConstraintList,"%ParentBatch"))) && (('..%ParentBatchCheck(tCol1))) { set tStatus = $select(+tStatus:$$Error^%apiOBJ(5824,$classname()_".%ParentBatch("_$zu(144,1,tCol1)_")"),1:$$AppendStatus^%occSystem(tStatus,$$Error^%apiOBJ(5824,$classname()_".%ParentBatch("_$zu(144,1,tCol1)_")"))) }
		set pErrorInfo = $Listbuild(pID,tCol1)
	} elseif SQLCODE < 0 { set tStatus = $$Error^%apiOBJ(5540,SQLCODE,$Get(%msg)) }
	quit tStatus }
 q
%0dsqlA	n %xxsql
	s %xxsql("S",1)="SELECT %ParentBatch INTO :tCol1 FROM ASCN_Msg_RecMap_LFO5_Msg16 . Record WHERE %ID = :pID"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("M","ALLOCGVEC")=$c(1),%xxsql("M","CACHENAMES")="",%xxsql("M","DEBUG")=$c(1),%xxsql("M","FORKNETDMN")=$c(1)
	s %xxsql("M","HASHLOCK")=$c(1),%xxsql("M","NETNEWHASH")=$c(1),%xxsql("M","USEDIRCACHE")=$c(1),%xxsql("M","USEGCNT")=2,%xxsql("M","USEGOFF")=$c(1)
	s %xxsql("M","USELOST")=$c(1),%xxsql("M","ZVERSION")=$c(1),%xxsql("I","%callout")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")=""
	s %xxsql("I","%xmlMap")="",%xxsql("I","Ensemble")="",%xxsql("NS")="DEMONSTRATION"
	d BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","ASCN.Msg.RecMap.LFO5.Msg16",0,"",),,"ASCN.Msg.RecMap.LFO5.Msg16.Record.CLS")
	q
%CheckConstraintsForExtent(pConstraintList="",pCheckDisabled=0,pErrorLog) [ SQLCODE,tID ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE,tID 
	kill pErrorLog set tStatusAll = 1, pErrorLog = 0 if '$listvalid(pConstraintList) { set pConstraintList = $listfromstring(pConstraintList) }
	 ;---&sql(declare ext cursor for select %ID into :tID FROM ASCN_Msg_RecMap_LFO5_Msg16.Record)
 	 ;--- ** SQL PUBLIC Variables: SQLCODE, tID
	 
	 ;---&sql(open ext)
	try { if $g(%ext0279)'="" { s SQLCODE=-101 } else { s %ext0279=$classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEdSvnGpK4uCQkH8xo9SuusH1fFY","%New") if '$isobject(%ext0279) s %ext0279=$$%0dsqlC() } } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEdSvnGpK4uCQkH8xo9SuusH1fFY")||($ze["<ZSQLU>") { s %ext0279=$$%0dsqlC() } else { throw } }
	if SQLCODE '< 0 {
		for {
			 ;---&sql(fetch ext)
 			 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
			if $isobject($g(%ext0279))'=1 { s SQLCODE=-102 } else { do %ext0279.FET() if SQLCODE=0 { } }
			if SQLCODE { if SQLCODE=100 { quit } elseif SQLCODE<0 { set tStatusAll = $select(+tStatusAll:$$Error^%apiOBJ(5521,SQLCODE,$Get(%msg)),1:$$AppendStatus^%occSystem(tStatusAll,$$Error^%apiOBJ(5521,SQLCODE,$Get(%msg)))) quit } }
			set tStatus = ..%CheckConstraints(tID,pConstraintList,pCheckDisabled,.tErrorInfo)
			if ('tStatus) { set tStatusAll = $select(+tStatusAll:tStatus,1:$$AppendStatus^%occSystem(tStatusAll,tStatus)) set:pErrorLog<1000 pErrorLog = pErrorLog + 1, pErrorLog(pErrorLog) = tErrorInfo _ $Listbuild(tStatus) }
		}
		 ;---&sql(close ext)
		if '$isobject($get(%ext0279)) { set SQLCODE=-102 } else { set SQLCODE=0 kill %ext0279 }
	}
	quit tStatusAll }
 q
%0dsqlC()	n %xxsql
	s %xxsql("S",1)="DECLARE ext CURSOR FOR SELECT %ID INTO :tID FROM ASCN_Msg_RecMap_LFO5_Msg16 . Record"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("M","ALLOCGVEC")=$c(1),%xxsql("M","CACHENAMES")="",%xxsql("M","DEBUG")=$c(1),%xxsql("M","FORKNETDMN")=$c(1)
	s %xxsql("M","HASHLOCK")=$c(1),%xxsql("M","NETNEWHASH")=$c(1),%xxsql("M","USEDIRCACHE")=$c(1),%xxsql("M","USEGCNT")=2,%xxsql("M","USEGOFF")=$c(1)
	s %xxsql("M","USELOST")=$c(1),%xxsql("M","ZVERSION")=$c(1),%xxsql("I","%callout")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")=""
	s %xxsql("I","%xmlMap")="",%xxsql("I","Ensemble")="",%xxsql("NS")="DEMONSTRATION"
	return $$BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","ASCN.Msg.RecMap.LFO5.Msg16",0,"",),",0,ext,","ASCN.Msg.RecMap.LFO5.Msg16.Record.CLS",1)
%ComposeOid(id) public {
	set tCLASSNAME = $listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),1)
	if tCLASSNAME="" { quit $select(id="":"",1:$listbuild(id_"","ASCN.Msg.RecMap.LFO5.Msg16.Record")) }
	set tClass=$piece(tCLASSNAME,$extract(tCLASSNAME),*-1)
	set:tClass'["." tClass="User."_tClass
	quit $select(id="":"",1:$listbuild(id_"",tClass)) }
%DeleteData(id,concurrency) public {
	Quit:id="" $$Error^%apiOBJ(5812)
	set $Ztrap="DeleteDataERR" set lockok=0,sc=""
	If concurrency {
		Lock +(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E"):$zu(115,4)
		Set lockok=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0))
		Set:lockok=2&&($tlevel) %0CacheLock($classname(),"E")=1
		If 'lockok {
			Quit $$Error^%apiOBJ(5803,$classname())
		}
	}
	If ($Data(^ASCN.Msg.RecMap.LFO9944.RecordD(id))) {
		Set bsv0N1=^ASCN.Msg.RecMap.LFO9944.RecordD(id)
		If $data(^oddEXTR($classname())) {
			Set fc=""
			For {
				Set fc=$order(^rINDEXEXT("F",$classname(),"%1","f",fc))
				Quit:fc=""
				Set fk=""
				For {
					Set fk=$order(^rINDEXEXT("F",$classname(),"%1","f",fc,fk))
					Quit:fk=""
					Set sc=$classmethod(fc,fk_"Delete",id)
					If ('sc) { Goto DeleteDataEXIT }
				}
			}
			Set fc=""
			For {
				Set fc=$order(^rINDEXEXT("F",$classname(),"IDKEY","f",fc))
				Quit:fc=""
				Set fk=""
				For {
					Set fk=$order(^rINDEXEXT("F",$classname(),"IDKEY","f",fc,fk))
					Quit:fk=""
					Set sc=$classmethod(fc,fk_"Delete",id)
					If ('sc) { Goto DeleteDataEXIT }
				}
			}
		}
		Set bsv0N2=$listget(bsv0N1,103)
		Kill ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",$s(bsv0N2'="":bsv0N2,1:-1E14),id)
		Kill ^ASCN.Msg.RecMap.LFO9944.RecordD(id)
		Set sc=1
	}
	Else { Set sc=$$Error^%apiOBJ(5810,$classname(),id) }
DeleteDataEXIT
	If concurrency,lockok {
		Lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E")
	}
DeleteDataRET	Set $Ztrap = ""
	QUIT sc
DeleteDataERR	Set $Ztrap = "DeleteDataRET"
	Set sc = $$Error^%apiOBJ(5002,$ZE)
	Goto DeleteDataEXIT }
%Exists(oid="") public {
	Quit ..%ExistsId($listget(oid)) }
%ExistsId(id) public {
	Try { set tExists = $s(id="":0,$d(^ASCN.Msg.RecMap.LFO9944.RecordD(id)):1,1:0) } catch tException { set tExists = 0 if '(tException.%IsA("%Exception.SystemException")) { throw tException } elseif tException.Name'="<SUBSCRIPT>" { ZT $ZE } } quit tExists }
%FileIndices(id,pIndexHandle=0) public {
	Set $ZTrap="CatchError",sc=1
	Set bsv0N2=$Get(^ASCN.Msg.RecMap.LFO9944.RecordD(id))
	Set bsv0N3=$listget(bsv0N2,1)
	If bsv0N3'="" {
		Set bsv0N1=$piece(bsv0N3,$extract(bsv0N3),*-1)
		Set:bsv0N1'["." bsv0N1="User."_bsv0N1
		If bsv0N1'="" {
			Quit $classmethod(bsv0N1,"%FileIndices",id,.pIndexHandle)
		}
	}
	If ('pIndexHandle)||($Ascii($Get(pIndexHandle("ASCN.Msg.RecMap.LFO5.Msg16.Record")),1)=1) {
		Set bsv0N4=$listget(bsv0N2,103)
		Set bsv0N5=$s(bsv0N4'="":bsv0N4,1:-1E14)
		Set ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",bsv0N5,id)=$listget(bsv0N2,1)
	}
	QUIT 1
CatchError	s $ZTrap="" i $ZE'="" { s sc = $$Error^%apiOBJ(5002,$ZE) } q sc }
%ForceId() public {
	If (..%Id() = "") Do ..%IdSet($increment(^ASCN.Msg.RecMap.LFO9944.RecordD))
	Quit ..%Id() }
%InsertBatch(objects,concurrency=0,useTransactions=0) public {
	try {
		set numerrs=0,errs="",cnt=0,ptr=0
		while $listnext(objects,ptr,data) {
			set cnt=cnt+1
			set zzc9v1=$listget(data,103)
			set lock=0
			if (useTransactions) tstart
			set id=$i(^ASCN.Msg.RecMap.LFO9944.RecordD)
			if (zzc9v1'="")&&('##class(ASCN.Msg.RecMap.LFO5.Batch.Msg16).%ExistsId(zzc9v1)) { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5824,"ASCN.Msg.RecMap.LFO5.Msg16.Record.%ParentBatch("_$zu(144,1,zzc9v1)_")")) }
			try {
				set tInnerException = ""
				;
				if concurrency { lock +(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E"):$zu(115,4) set lock=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:lock=2&&($tlevel) %0CacheLock($classname(),"E")=1 if 'lock { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				set ^ASCN.Msg.RecMap.LFO9944.RecordD(id)=data
				set ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",$s(zzc9v1'="":zzc9v1,1:-1E14),id)=$listget(data,1)
				if (useTransactions) { tcommit }
			}
			catch tInnerException {
				set newerr=$lb(cnt,tInnerException.AsStatus())
				if '($length(errs)+$length(newerr)>32767) { set numerrs=numerrs+1, errs=errs_newerr }
				if (useTransactions) && ($Tlevel) trollback
			}
			if lock lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E")
		}
	}
	catch tException {
		set newerr=$lb($g(cnt),tException.AsStatus())
		if '($length(errs)+$length(newerr)>32767) { set numerrs=numerrs+1, errs=errs_newerr }
	}
	QUIT ($lb(numerrs))_errs }
%KillExtentData(killstreams=0)
	If killstreams Kill ^ASCN.Msg.RecMap.LFO9944.RecordS
	Kill ^ASCN.Msg.RecMap.LFO9944.RecordD
	Quit 1
%LoadData(id) public {
	New %s1
	set $ZTrap="CatchError",locked=0,userze=$ze,$ze=""
	If i%%Concurrency=4 {
		Lock +(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E"):$zu(115,4)
		if '$t do init s i%%Concurrency=0 s:$ze="" $ze=userze return $$Error^%apiOBJ(5803,$classname())
	} ElseIf i%%Concurrency>1 {
		Lock +(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"SE"):$zu(115,4)
		if '$t do init s i%%Concurrency=0 s:$ze="" $ze=userze return $$Error^%apiOBJ(5804,$classname())
		set locked = 1
	}
	If $d(^ASCN.Msg.RecMap.LFO9944.RecordD(id),%s1)#2 {
		If i%%Concurrency=2 { Lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"SIE") }
		S i%MsgID=$lg(%s1,2),i%%Source=$lg(%s1,3),i%Field3=$lg(%s1,4),i%Field4=$lg(%s1,5),i%Ministry=$lg(%s1,6),i%FirstName=$lg(%s1,7),i%MiddleInitial=$lg(%s1,8),i%LastName=$lg(%s1,9),i%Field9=$lg(%s1,10)
		Set iscpos=$l($li(%s1,1,10))+1,isctmp=$li($e(%s1,iscpos,*),1,10),i%Field10=$lg(isctmp),i%StreetAddress1=$lg(isctmp,2),i%StreetAddress2=$lg(isctmp,3),i%Field13=$lg(isctmp,4),i%Field14=$lg(isctmp,5),i%City=$lg(isctmp,6),i%State=$lg(isctmp,7),i%Zipcode=$lg(isctmp,8),i%Field18=$lg(isctmp,9),i%Field19=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field20=$lg(isctmp),i%Field21=$lg(isctmp,2),i%Field22=$lg(isctmp,3),i%Field23=$lg(isctmp,4),i%Field24=$lg(isctmp,5),i%Field25=$lg(isctmp,6),i%Field26=$lg(isctmp,7),i%Field27=$lg(isctmp,8),i%Field28=$lg(isctmp,9),i%Field29=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field30=$lg(isctmp),i%Field31=$lg(isctmp,2),i%Field32=$lg(isctmp,3),i%Field33=$lg(isctmp,4),i%Field34=$lg(isctmp,5),i%Field35=$lg(isctmp,6),i%Field36=$lg(isctmp,7),i%Field37=$lg(isctmp,8),i%Field38=$lg(isctmp,9),i%Field39=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field40=$lg(isctmp),i%Field41=$lg(isctmp,2),i%Field42=$lg(isctmp,3),i%Field43=$lg(isctmp,4),i%Field44=$lg(isctmp,5),i%Field45=$lg(isctmp,6),i%Field46=$lg(isctmp,7),i%Field47=$lg(isctmp,8),i%Field48=$lg(isctmp,9),i%Field49=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field50=$lg(isctmp),i%Field51=$lg(isctmp,2),i%Field52=$lg(isctmp,3),i%Field53=$lg(isctmp,4),i%Field54=$lg(isctmp,5),i%Field55=$lg(isctmp,6),i%Field56=$lg(isctmp,7),i%Field57=$lg(isctmp,8),i%Field58=$lg(isctmp,9),i%Field59=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field60=$lg(isctmp),i%Field61=$lg(isctmp,2),i%Field62=$lg(isctmp,3),i%Field63=$lg(isctmp,4),i%Field64=$lg(isctmp,5),i%Field65=$lg(isctmp,6),i%Field66=$lg(isctmp,7),i%Field67=$lg(isctmp,8),i%Field68=$lg(isctmp,9),i%Field69=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field70=$lg(isctmp),i%Field71=$lg(isctmp,2),i%Field72=$lg(isctmp,3),i%Field73=$lg(isctmp,4),i%Field74=$lg(isctmp,5),i%Field75=$lg(isctmp,6),i%Field76=$lg(isctmp,7),i%Field77=$lg(isctmp,8),i%Field78=$lg(isctmp,9),i%Field79=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field80=$lg(isctmp),i%Field81=$lg(isctmp,2),i%Field82=$lg(isctmp,3),i%Field83=$lg(isctmp,4),i%Field84=$lg(isctmp,5),i%Field85=$lg(isctmp,6),i%Field86=$lg(isctmp,7),i%Field87=$lg(isctmp,8),i%Field88=$lg(isctmp,9),i%Field89=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field90=$lg(isctmp),i%Field91=$lg(isctmp,2),i%Field92=$lg(isctmp,3),i%Field93=$lg(isctmp,4),i%Field94=$lg(isctmp,5),i%Field95=$lg(isctmp,6),i%Field96=$lg(isctmp,7),i%Field97=$lg(isctmp,8),i%Field98=$lg(isctmp,9),i%Field99=$lg(isctmp,10)
		S isctmp=$e(%s1,iscpos+$l(isctmp),*),i%Field100=$lg(isctmp),i%Field101=$lg(isctmp,2),i%%ParentBatch=$lg(isctmp,3),i%Field2=$lg(isctmp,4),i%LeadingField=$lg(isctmp,5)
		s:$ze="" $ze=userze
		Quit 1
	} Else {
		If i%%Concurrency=2 { Lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"SIE") }
		do init
		set sc = $$Error^%apiOBJ(5809,$classname(),id) goto CatchError
	}
CatchError	set $ZTrap = "" if $ZE'="" { s sc = $$Error^%apiOBJ(5002,$ZE) }
	If ($get(locked))&&(i%%Concurrency<3) { Lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"SIE") }
	if '('sc) { set sc=$$Error^%apiOBJ(5809,$classname(),id) }
	s:$ze="" $ze=userze
	return sc
init	Set i%%ParentBatch="",i%%Source="",i%City="",i%Field10="",i%Field100="",i%Field101="",i%Field13="",i%Field14="",i%Field18="",i%Field19="",i%Field2="",i%Field20="",i%Field21="",i%Field22="",i%Field23="",i%Field24="",i%Field25="",i%Field26="",i%Field27="",i%Field28="",i%Field29="",i%Field3="",i%Field30="",i%Field31="",i%Field32="",i%Field33="",i%Field34="",i%Field35="",i%Field36="",i%Field37="",i%Field38="",i%Field39="",i%Field4="",i%Field40="",i%Field41="",i%Field42="",i%Field43="",i%Field44="",i%Field45=""
	Set i%Field46="",i%Field47="",i%Field48="",i%Field49="",i%Field50="",i%Field51="",i%Field52="",i%Field53="",i%Field54="",i%Field55="",i%Field56="",i%Field57="",i%Field58="",i%Field59="",i%Field60="",i%Field61="",i%Field62="",i%Field63="",i%Field64="",i%Field65="",i%Field66="",i%Field67="",i%Field68="",i%Field69="",i%Field70="",i%Field71="",i%Field72="",i%Field73="",i%Field74="",i%Field75="",i%Field76="",i%Field77="",i%Field78="",i%Field79="",i%Field80="",i%Field81="",i%Field82="",i%Field83="",i%Field84=""
	Set i%Field85="",i%Field86="",i%Field87="",i%Field88="",i%Field89="",i%Field9="",i%Field90="",i%Field91="",i%Field92="",i%Field93="",i%Field94="",i%Field95="",i%Field96="",i%Field97="",i%Field98="",i%Field99="",i%FirstName="",i%LastName="",i%LeadingField="",i%MiddleInitial="",i%Ministry="",i%MsgID="",i%State="",i%StreetAddress1="",i%StreetAddress2="",i%Zipcode=""
	quit }
%LoadDataFromMemory(id,objstate,obj) public {
	New %s1
	If $d(objstate(id)) {
		Set %s1=$g(objstate(id))
		S i%MsgID=$lg(%s1,2),i%%Source=$lg(%s1,3),i%Field3=$lg(%s1,4),i%Field4=$lg(%s1,5),i%Ministry=$lg(%s1,6),i%FirstName=$lg(%s1,7),i%MiddleInitial=$lg(%s1,8),i%LastName=$lg(%s1,9),i%Field9=$lg(%s1,10)
		Set iscpos=$l($li(%s1,1,10))+1,isctmp=$li($e(%s1,iscpos,*),1,10),i%Field10=$lg(isctmp),i%StreetAddress1=$lg(isctmp,2),i%StreetAddress2=$lg(isctmp,3),i%Field13=$lg(isctmp,4),i%Field14=$lg(isctmp,5),i%City=$lg(isctmp,6),i%State=$lg(isctmp,7),i%Zipcode=$lg(isctmp,8),i%Field18=$lg(isctmp,9),i%Field19=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field20=$lg(isctmp),i%Field21=$lg(isctmp,2),i%Field22=$lg(isctmp,3),i%Field23=$lg(isctmp,4),i%Field24=$lg(isctmp,5),i%Field25=$lg(isctmp,6),i%Field26=$lg(isctmp,7),i%Field27=$lg(isctmp,8),i%Field28=$lg(isctmp,9),i%Field29=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field30=$lg(isctmp),i%Field31=$lg(isctmp,2),i%Field32=$lg(isctmp,3),i%Field33=$lg(isctmp,4),i%Field34=$lg(isctmp,5),i%Field35=$lg(isctmp,6),i%Field36=$lg(isctmp,7),i%Field37=$lg(isctmp,8),i%Field38=$lg(isctmp,9),i%Field39=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field40=$lg(isctmp),i%Field41=$lg(isctmp,2),i%Field42=$lg(isctmp,3),i%Field43=$lg(isctmp,4),i%Field44=$lg(isctmp,5),i%Field45=$lg(isctmp,6),i%Field46=$lg(isctmp,7),i%Field47=$lg(isctmp,8),i%Field48=$lg(isctmp,9),i%Field49=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field50=$lg(isctmp),i%Field51=$lg(isctmp,2),i%Field52=$lg(isctmp,3),i%Field53=$lg(isctmp,4),i%Field54=$lg(isctmp,5),i%Field55=$lg(isctmp,6),i%Field56=$lg(isctmp,7),i%Field57=$lg(isctmp,8),i%Field58=$lg(isctmp,9),i%Field59=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field60=$lg(isctmp),i%Field61=$lg(isctmp,2),i%Field62=$lg(isctmp,3),i%Field63=$lg(isctmp,4),i%Field64=$lg(isctmp,5),i%Field65=$lg(isctmp,6),i%Field66=$lg(isctmp,7),i%Field67=$lg(isctmp,8),i%Field68=$lg(isctmp,9),i%Field69=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field70=$lg(isctmp),i%Field71=$lg(isctmp,2),i%Field72=$lg(isctmp,3),i%Field73=$lg(isctmp,4),i%Field74=$lg(isctmp,5),i%Field75=$lg(isctmp,6),i%Field76=$lg(isctmp,7),i%Field77=$lg(isctmp,8),i%Field78=$lg(isctmp,9),i%Field79=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field80=$lg(isctmp),i%Field81=$lg(isctmp,2),i%Field82=$lg(isctmp,3),i%Field83=$lg(isctmp,4),i%Field84=$lg(isctmp,5),i%Field85=$lg(isctmp,6),i%Field86=$lg(isctmp,7),i%Field87=$lg(isctmp,8),i%Field88=$lg(isctmp,9),i%Field89=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Field90=$lg(isctmp),i%Field91=$lg(isctmp,2),i%Field92=$lg(isctmp,3),i%Field93=$lg(isctmp,4),i%Field94=$lg(isctmp,5),i%Field95=$lg(isctmp,6),i%Field96=$lg(isctmp,7),i%Field97=$lg(isctmp,8),i%Field98=$lg(isctmp,9),i%Field99=$lg(isctmp,10)
		S isctmp=$e(%s1,iscpos+$l(isctmp),*),i%Field100=$lg(isctmp),i%Field101=$lg(isctmp,2),i%%ParentBatch=$lg(isctmp,3),i%Field2=$lg(isctmp,4),i%LeadingField=$lg(isctmp,5)
		Quit 1
	} Else {
		Set i%%ParentBatch="",i%%Source="",i%City="",i%Field10="",i%Field100="",i%Field101="",i%Field13="",i%Field14="",i%Field18="",i%Field19="",i%Field2="",i%Field20="",i%Field21="",i%Field22="",i%Field23="",i%Field24="",i%Field25="",i%Field26="",i%Field27="",i%Field28="",i%Field29="",i%Field3="",i%Field30="",i%Field31="",i%Field32="",i%Field33="",i%Field34="",i%Field35="",i%Field36="",i%Field37="",i%Field38="",i%Field39="",i%Field4="",i%Field40="",i%Field41="",i%Field42="",i%Field43="",i%Field44="",i%Field45=""
		Set i%Field46="",i%Field47="",i%Field48="",i%Field49="",i%Field50="",i%Field51="",i%Field52="",i%Field53="",i%Field54="",i%Field55="",i%Field56="",i%Field57="",i%Field58="",i%Field59="",i%Field60="",i%Field61="",i%Field62="",i%Field63="",i%Field64="",i%Field65="",i%Field66="",i%Field67="",i%Field68="",i%Field69="",i%Field70="",i%Field71="",i%Field72="",i%Field73="",i%Field74="",i%Field75="",i%Field76="",i%Field77="",i%Field78="",i%Field79="",i%Field80="",i%Field81="",i%Field82="",i%Field83="",i%Field84=""
		Set i%Field85="",i%Field86="",i%Field87="",i%Field88="",i%Field89="",i%Field9="",i%Field90="",i%Field91="",i%Field92="",i%Field93="",i%Field94="",i%Field95="",i%Field96="",i%Field97="",i%Field98="",i%Field99="",i%FirstName="",i%LastName="",i%LeadingField="",i%MiddleInitial="",i%Ministry="",i%MsgID="",i%State="",i%StreetAddress1="",i%StreetAddress2="",i%Zipcode=""
		Quit $$Error^%apiOBJ(5809,$classname(),id)
	} }
%LoadInit(oid="",concurrency="",reset=0) public {
	Set:concurrency'="" i%%Concurrency=concurrency
	If reset {
		Kill i%%ParentBatch
	}
	Set r%%ParentBatch=""
	If 'reset { Set gbl=..#DATALOCATIONGLOBAL If gbl="" { Set oref=$zobjoid("",$listget(oid)),sfn=$zu(40,0,41) } Else { Set oref=$zobjoid("",$listget(oid),@gbl,.sfn) } Set $zobjoid("",$listget(oid),,sfn)=$this,i%"%%OID"=oid }
	Quit 1 }
%LockExtent(shared=0) public {
	If shared {
		Lock +(^ASCN.Msg.RecMap.LFO9944.RecordD#"S"):$zu(115,4) Quit:$t 1
		Quit $$Error^%apiOBJ(5799,$classname())
	}
	Lock +(^ASCN.Msg.RecMap.LFO9944.RecordD):$zu(115,4) Quit:$t 1
	Quit $$Error^%apiOBJ(5798,$classname()) }
%LockId(id,shared=0,timeout) public { s:'($d(timeout)#2) timeout=$zu(115,4)
	If id="" { Quit $$Error^%apiOBJ(5812) }
	Set sc=1
	If 'shared {
		Lock +(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E"):timeout Quit:$t 1
		Quit $$Error^%apiOBJ(5803,id_":"_$classname())
	}
	Lock +(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"SE"):timeout Quit:$t 1
	Quit $$Error^%apiOBJ(5804,id_":"_$classname()) }
%NormalizeObject() public {
	If '$system.CLS.GetModified() Quit 1
	If m%%Source Set:i%%Source'="" i%%Source=(..%SourceNormalize(i%%Source))
	If m%City Set:i%City'="" i%City=(..CityNormalize(i%City))
	If m%Field10 Set:i%Field10'="" i%Field10=(..Field10Normalize(i%Field10))
	If m%Field100 Set:i%Field100'="" i%Field100=(..Field100Normalize(i%Field100))
	If m%Field101 Set:i%Field101'="" i%Field101=(..Field101Normalize(i%Field101))
	If m%Field13 Set:i%Field13'="" i%Field13=(..Field13Normalize(i%Field13))
	If m%Field14 Set:i%Field14'="" i%Field14=(..Field14Normalize(i%Field14))
	If m%Field18 Set:i%Field18'="" i%Field18=(..Field18Normalize(i%Field18))
	If m%Field19 Set:i%Field19'="" i%Field19=(..Field19Normalize(i%Field19))
	If m%Field2 Set:i%Field2'="" i%Field2=(..Field2Normalize(i%Field2))
	If m%Field20 Set:i%Field20'="" i%Field20=(..Field20Normalize(i%Field20))
	If m%Field21 Set:i%Field21'="" i%Field21=(..Field21Normalize(i%Field21))
	If m%Field22 Set:i%Field22'="" i%Field22=(..Field22Normalize(i%Field22))
	If m%Field23 Set:i%Field23'="" i%Field23=(..Field23Normalize(i%Field23))
	If m%Field24 Set:i%Field24'="" i%Field24=(..Field24Normalize(i%Field24))
	If m%Field25 Set:i%Field25'="" i%Field25=(..Field25Normalize(i%Field25))
	If m%Field26 Set:i%Field26'="" i%Field26=(..Field26Normalize(i%Field26))
	If m%Field27 Set:i%Field27'="" i%Field27=(..Field27Normalize(i%Field27))
	If m%Field28 Set:i%Field28'="" i%Field28=(..Field28Normalize(i%Field28))
	If m%Field29 Set:i%Field29'="" i%Field29=(..Field29Normalize(i%Field29))
	If m%Field3 Set:i%Field3'="" i%Field3=(..Field3Normalize(i%Field3))
	If m%Field30 Set:i%Field30'="" i%Field30=(..Field30Normalize(i%Field30))
	If m%Field31 Set:i%Field31'="" i%Field31=(..Field31Normalize(i%Field31))
	If m%Field32 Set:i%Field32'="" i%Field32=(..Field32Normalize(i%Field32))
	If m%Field33 Set:i%Field33'="" i%Field33=(..Field33Normalize(i%Field33))
	If m%Field34 Set:i%Field34'="" i%Field34=(..Field34Normalize(i%Field34))
	If m%Field35 Set:i%Field35'="" i%Field35=(..Field35Normalize(i%Field35))
	If m%Field36 Set:i%Field36'="" i%Field36=(..Field36Normalize(i%Field36))
	If m%Field37 Set:i%Field37'="" i%Field37=(..Field37Normalize(i%Field37))
	If m%Field38 Set:i%Field38'="" i%Field38=(..Field38Normalize(i%Field38))
	If m%Field39 Set:i%Field39'="" i%Field39=(..Field39Normalize(i%Field39))
	If m%Field4 Set:i%Field4'="" i%Field4=(..Field4Normalize(i%Field4))
	If m%Field40 Set:i%Field40'="" i%Field40=(..Field40Normalize(i%Field40))
	If m%Field41 Set:i%Field41'="" i%Field41=(..Field41Normalize(i%Field41))
	If m%Field42 Set:i%Field42'="" i%Field42=(..Field42Normalize(i%Field42))
	If m%Field43 Set:i%Field43'="" i%Field43=(..Field43Normalize(i%Field43))
	If m%Field44 Set:i%Field44'="" i%Field44=(..Field44Normalize(i%Field44))
	If m%Field45 Set:i%Field45'="" i%Field45=(..Field45Normalize(i%Field45))
	If m%Field46 Set:i%Field46'="" i%Field46=(..Field46Normalize(i%Field46))
	If m%Field47 Set:i%Field47'="" i%Field47=(..Field47Normalize(i%Field47))
	If m%Field48 Set:i%Field48'="" i%Field48=(..Field48Normalize(i%Field48))
	If m%Field49 Set:i%Field49'="" i%Field49=(..Field49Normalize(i%Field49))
	If m%Field50 Set:i%Field50'="" i%Field50=(..Field50Normalize(i%Field50))
	If m%Field51 Set:i%Field51'="" i%Field51=(..Field51Normalize(i%Field51))
	If m%Field52 Set:i%Field52'="" i%Field52=(..Field52Normalize(i%Field52))
	If m%Field53 Set:i%Field53'="" i%Field53=(..Field53Normalize(i%Field53))
	If m%Field54 Set:i%Field54'="" i%Field54=(..Field54Normalize(i%Field54))
	If m%Field55 Set:i%Field55'="" i%Field55=(..Field55Normalize(i%Field55))
	If m%Field56 Set:i%Field56'="" i%Field56=(..Field56Normalize(i%Field56))
	If m%Field57 Set:i%Field57'="" i%Field57=(..Field57Normalize(i%Field57))
	If m%Field58 Set:i%Field58'="" i%Field58=(..Field58Normalize(i%Field58))
	If m%Field59 Set:i%Field59'="" i%Field59=(..Field59Normalize(i%Field59))
	If m%Field60 Set:i%Field60'="" i%Field60=(..Field60Normalize(i%Field60))
	If m%Field61 Set:i%Field61'="" i%Field61=(..Field61Normalize(i%Field61))
	If m%Field62 Set:i%Field62'="" i%Field62=(..Field62Normalize(i%Field62))
	If m%Field63 Set:i%Field63'="" i%Field63=(..Field63Normalize(i%Field63))
	If m%Field64 Set:i%Field64'="" i%Field64=(..Field64Normalize(i%Field64))
	If m%Field65 Set:i%Field65'="" i%Field65=(..Field65Normalize(i%Field65))
	If m%Field66 Set:i%Field66'="" i%Field66=(..Field66Normalize(i%Field66))
	If m%Field67 Set:i%Field67'="" i%Field67=(..Field67Normalize(i%Field67))
	If m%Field68 Set:i%Field68'="" i%Field68=(..Field68Normalize(i%Field68))
	If m%Field69 Set:i%Field69'="" i%Field69=(..Field69Normalize(i%Field69))
	If m%Field70 Set:i%Field70'="" i%Field70=(..Field70Normalize(i%Field70))
	If m%Field71 Set:i%Field71'="" i%Field71=(..Field71Normalize(i%Field71))
	If m%Field72 Set:i%Field72'="" i%Field72=(..Field72Normalize(i%Field72))
	If m%Field73 Set:i%Field73'="" i%Field73=(..Field73Normalize(i%Field73))
	If m%Field74 Set:i%Field74'="" i%Field74=(..Field74Normalize(i%Field74))
	If m%Field75 Set:i%Field75'="" i%Field75=(..Field75Normalize(i%Field75))
	If m%Field76 Set:i%Field76'="" i%Field76=(..Field76Normalize(i%Field76))
	If m%Field77 Set:i%Field77'="" i%Field77=(..Field77Normalize(i%Field77))
	If m%Field78 Set:i%Field78'="" i%Field78=(..Field78Normalize(i%Field78))
	If m%Field79 Set:i%Field79'="" i%Field79=(..Field79Normalize(i%Field79))
	If m%Field80 Set:i%Field80'="" i%Field80=(..Field80Normalize(i%Field80))
	If m%Field81 Set:i%Field81'="" i%Field81=(..Field81Normalize(i%Field81))
	If m%Field82 Set:i%Field82'="" i%Field82=(..Field82Normalize(i%Field82))
	If m%Field83 Set:i%Field83'="" i%Field83=(..Field83Normalize(i%Field83))
	If m%Field84 Set:i%Field84'="" i%Field84=(..Field84Normalize(i%Field84))
	If m%Field85 Set:i%Field85'="" i%Field85=(..Field85Normalize(i%Field85))
	If m%Field86 Set:i%Field86'="" i%Field86=(..Field86Normalize(i%Field86))
	If m%Field87 Set:i%Field87'="" i%Field87=(..Field87Normalize(i%Field87))
	If m%Field88 Set:i%Field88'="" i%Field88=(..Field88Normalize(i%Field88))
	If m%Field89 Set:i%Field89'="" i%Field89=(..Field89Normalize(i%Field89))
	If m%Field9 Set:i%Field9'="" i%Field9=(..Field9Normalize(i%Field9))
	If m%Field90 Set:i%Field90'="" i%Field90=(..Field90Normalize(i%Field90))
	If m%Field91 Set:i%Field91'="" i%Field91=(..Field91Normalize(i%Field91))
	If m%Field92 Set:i%Field92'="" i%Field92=(..Field92Normalize(i%Field92))
	If m%Field93 Set:i%Field93'="" i%Field93=(..Field93Normalize(i%Field93))
	If m%Field94 Set:i%Field94'="" i%Field94=(..Field94Normalize(i%Field94))
	If m%Field95 Set:i%Field95'="" i%Field95=(..Field95Normalize(i%Field95))
	If m%Field96 Set:i%Field96'="" i%Field96=(..Field96Normalize(i%Field96))
	If m%Field97 Set:i%Field97'="" i%Field97=(..Field97Normalize(i%Field97))
	If m%Field98 Set:i%Field98'="" i%Field98=(..Field98Normalize(i%Field98))
	If m%Field99 Set:i%Field99'="" i%Field99=(..Field99Normalize(i%Field99))
	If m%FirstName Set:i%FirstName'="" i%FirstName=(..FirstNameNormalize(i%FirstName))
	If m%LastName Set:i%LastName'="" i%LastName=(..LastNameNormalize(i%LastName))
	If m%LeadingField Set:i%LeadingField'="" i%LeadingField=(..LeadingFieldNormalize(i%LeadingField))
	If m%MiddleInitial Set:i%MiddleInitial'="" i%MiddleInitial=(..MiddleInitialNormalize(i%MiddleInitial))
	If m%Ministry Set:i%Ministry'="" i%Ministry=(..MinistryNormalize(i%Ministry))
	If m%MsgID Set:i%MsgID'="" i%MsgID=(..MsgIDNormalize(i%MsgID))
	If m%State Set:i%State'="" i%State=(..StateNormalize(i%State))
	If m%StreetAddress1 Set:i%StreetAddress1'="" i%StreetAddress1=(..StreetAddress1Normalize(i%StreetAddress1))
	If m%StreetAddress2 Set:i%StreetAddress2'="" i%StreetAddress2=(..StreetAddress2Normalize(i%StreetAddress2))
	If m%Zipcode Set:i%Zipcode'="" i%Zipcode=(..ZipcodeNormalize(i%Zipcode))
	Quit 1 }
%OnDetermineClass(oid,class) public {
	Set id=$listget($get(oid))
	Quit:id="" $$Error^%apiOBJ(5812)
	Set idclass=$lg($get(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),1)
	If idclass="" { Set class="ASCN.Msg.RecMap.LFO5.Msg16.Record" Quit 1 }
	Set class=$piece(idclass,$extract(idclass),*-1)
	Set:class'["." class="User."_class
	QUIT 1 }
%PhysicalAddress(id,paddr)
	if $Get(id)="" Quit $$Error^%apiOBJ(5813,$classname())
	if (id="") { quit $$Error^%apiOBJ(5832,$classname(),id) }
	s paddr(1)=$lb($Name(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),$classname(),"IDKEY","listnode",id)
	s paddr=1
	Quit 1
%PurgeIndices(idxlist="",lockExtent=0,pIgnoreIndexList="") public {
	Set locked=0,sc=1
	Try {
		if ($listlength(idxlist)=1)&&($listget(idxlist,1)="") { return 1 }
		Set tPtr=0
		While $listnext(idxlist,tPtr,tIndex) {
			continue:tIndex=""
			If '($d(^oddCOM($classname(),"i",tIndex))) {
				Set sc=$select(+sc:$$Error^%apiOBJ(5066,$classname()_"::"_tIndex),1:$$AppendStatus^%occSystem(sc,$$Error^%apiOBJ(5066,$classname()_"::"_tIndex)))
			}
		}
		If ('sc) { Return sc }
		If lockExtent {
			Set sc=..%LockExtent(0)
			If ('sc) { Return sc }
			Set locked=1
		}
		If $system.CLS.IsMthd("%OnBeforePurgeIndices") {
			Set sc=..%OnBeforePurgeIndices(.idxlist)
			If (('sc))||(($listlength(idxlist)=1)&&($listget(idxlist,1)="")) {
				If locked {
					Do ..%SQLReleaseTableLock(0)
				}
				Return sc
			}
		}
		if ((idxlist="")||($listfind(idxlist,"%ParentBatchIdx"))),'$listfind(pIgnoreIndexList,"%ParentBatchIdx") {
			kill ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx")
		}
		Set sc=1
		If $system.CLS.IsMthd("%OnAfterPurgeIndices") { Set sc=..%OnAfterPurgeIndices(.idxlist) }
	} Catch tException {
		Set sc=tException.AsStatus(),$ZE=""
	}
	If locked { Do ..%UnlockExtent(0) }
	Quit sc }
%SQLAcquireLock(%rowid,s=0,unlockref=0)
	new %d,gotlock
	set %d(1)=%rowid set s=$e("E",'unlockref)_$e("S",s)
	lock +^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1))#s:$zu(115,4) set gotlock=$t
	if gotlock,'unlockref { set:$case($SYSTEM.Lock.ReturnCode(),2:1,4:1,:0)&&($tlevel) %0CacheLock("ASCN.Msg.RecMap.LFO5.Msg16.Record","E")=1 }
	set:gotlock&&unlockref unlockref=unlockref+1,unlockref(unlockref)=$lb($name(^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1))),"ASCN.Msg.RecMap.LFO5.Msg16.Record",s_"D")
	QUIT gotlock
%SQLAcquireTableLock(s=0,SQLCODE,to="")
	set s=$e("S",s) set:to="" to=$zu(115,4) lock +^ASCN.Msg.RecMap.LFO9944.RecordD#s:to QUIT:$t 1 set SQLCODE=-110 if s="S" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler35",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record") } else { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler36",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record") } QUIT 0
	Return
%SQLBuildIndices(pIndices="",pLockFlag=0,pStartID="",pEndID="",pIgnoreIndexList="")
	QUIT ..%BuildIndices(pIndices,,pLockFlag,,pStartID,pEndID,pIgnoreIndexList)
%SQLBuildPurgeIndexForRow(pIndices="",pActions="BP",pLockRow=1,%d,%e,pIgnoreIndexList="")
	// Purge and build index nodes for a single row using given values, return Status Code
	new sn,tSC,tLock set tSC=1,pActions=$zcvt(pActions,"U")
	try {
		if $g(%d(1))="" { set tSC=$select(+tSC:$$Error^%apiOBJ(5521,-108,"RowID value must be specified in %d(1) when calling %SQLBuildPurgeIndexForRow for table 'ASCN_Msg_RecMap_LFO5_Msg16.Record'"),1:$$AppendStatus^%occSystem(tSC,$$Error^%apiOBJ(5521,-108,"RowID value must be specified in %d(1) when calling %SQLBuildPurgeIndexForRow for table 'ASCN_Msg_RecMap_LFO5_Msg16.Record'"))) RETURN tSC }
		if pLockRow { if '..%SQLAcquireLock(%d(1)) { set tSC=$select(+tSC:$$Error^%apiOBJ(5521,-114,"Unable to lock row in table 'ASCN_Msg_RecMap_LFO5_Msg16.Record' with %ID = '"_%d(1)_"'"),1:$$AppendStatus^%occSystem(tSC,$$Error^%apiOBJ(5521,-114,"Unable to lock row in table 'ASCN_Msg_RecMap_LFO5_Msg16.Record' with %ID = '"_%d(1)_"'"))) RETURN tSC  } else { set tLock=1 }}
		if ((pIndices="")||($lf(pIndices,"%ParentBatchIdx"))),'$listfind(pIgnoreIndexList,"%ParentBatchIdx") {
			if pActions["P" {
				set sn(1)=%e(2) set:sn(1)="" sn(1)=-1E14 set sn(2)=%d(1) k ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",sn(1),sn(2))
			}
			if pActions["B" {
				set sn(1)=%d(2) set:sn(1)="" sn(1)=-1E14 set sn(2)=%d(1) set ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",sn(1),sn(2))=%d(106)
			}
		}
		if pLockRow { do ..%SQLReleaseLock(%d(1),0,0) set tLock=0 }
	}
	catch {
		if $g(tLock) { do ..%SQLReleaseLock(%d(1),0,0) }
		set tSC=$select(+tSC:$$Error^%apiOBJ(5594,$ze),1:$$AppendStatus^%occSystem(tSC,$$Error^%apiOBJ(5594,$ze)))
	}
	QUIT tSC
%SQLCopyIcolIntoName()
	if %oper="DELETE" {
		set:$d(%d(1)) %f("ID")=%d(1)
		QUIT
	}
	set:$d(%d(1)) %f("ID")=%d(1) set:$a(%e,2)&&$d(%d(2)) %f("%ParentBatch")=%d(2) set:$a(%e,3)&&$d(%d(3)) %f("%Source")=%d(3) set:$a(%e,4)&&$d(%d(4)) %f("City")=%d(4) set:$a(%e,5)&&$d(%d(5)) %f("Field10")=%d(5) set:$a(%e,6)&&$d(%d(6)) %f("Field100")=%d(6) set:$a(%e,7)&&$d(%d(7)) %f("Field101")=%d(7) set:$a(%e,8)&&$d(%d(8)) %f("Field13")=%d(8) set:$a(%e,9)&&$d(%d(9)) %f("Field14")=%d(9) set:$a(%e,10)&&$d(%d(10)) %f("Field18")=%d(10) set:$a(%e,11)&&$d(%d(11)) %f("Field19")=%d(11) set:$a(%e,12)&&$d(%d(12)) %f("Field2")=%d(12) set:$a(%e,13)&&$d(%d(13)) %f("Field20")=%d(13) set:$a(%e,14)&&$d(%d(14)) %f("Field21")=%d(14) set:$a(%e,15)&&$d(%d(15)) %f("Field22")=%d(15) set:$a(%e,16)&&$d(%d(16)) %f("Field23")=%d(16) set:$a(%e,17)&&$d(%d(17)) %f("Field24")=%d(17) set:$a(%e,18)&&$d(%d(18)) %f("Field25")=%d(18) set:$a(%e,19)&&$d(%d(19)) %f("Field26")=%d(19) set:$a(%e,20)&&$d(%d(20)) %f("Field27")=%d(20) set:$a(%e,21)&&$d(%d(21)) %f("Field28")=%d(21) set:$a(%e,22)&&$d(%d(22)) %f("Field29")=%d(22) set:$a(%e,23)&&$d(%d(23)) %f("Field3")=%d(23) set:$a(%e,24)&&$d(%d(24)) %f("Field30")=%d(24) set:$a(%e,25)&&$d(%d(25)) %f("Field31")=%d(25) set:$a(%e,26)&&$d(%d(26)) %f("Field32")=%d(26) set:$a(%e,27)&&$d(%d(27)) %f("Field33")=%d(27) set:$a(%e,28)&&$d(%d(28)) %f("Field34")=%d(28) set:$a(%e,29)&&$d(%d(29)) %f("Field35")=%d(29) set:$a(%e,30)&&$d(%d(30)) %f("Field36")=%d(30) set:$a(%e,31)&&$d(%d(31)) %f("Field37")=%d(31) set:$a(%e,32)&&$d(%d(32)) %f("Field38")=%d(32) set:$a(%e,33)&&$d(%d(33)) %f("Field39")=%d(33) set:$a(%e,34)&&$d(%d(34)) %f("Field4")=%d(34) set:$a(%e,35)&&$d(%d(35)) %f("Field40")=%d(35) set:$a(%e,36)&&$d(%d(36)) %f("Field41")=%d(36) set:$a(%e,37)&&$d(%d(37)) %f("Field42")=%d(37) set:$a(%e,38)&&$d(%d(38)) %f("Field43")=%d(38) set:$a(%e,39)&&$d(%d(39)) %f("Field44")=%d(39) set:$a(%e,40)&&$d(%d(40)) %f("Field45")=%d(40) set:$a(%e,41)&&$d(%d(41)) %f("Field46")=%d(41) set:$a(%e,42)&&$d(%d(42)) %f("Field47")=%d(42) set:$a(%e,43)&&$d(%d(43)) %f("Field48")=%d(43) set:$a(%e,44)&&$d(%d(44)) %f("Field49")=%d(44) set:$a(%e,45)&&$d(%d(45)) %f("Field50")=%d(45) set:$a(%e,46)&&$d(%d(46)) %f("Field51")=%d(46) set:$a(%e,47)&&$d(%d(47)) %f("Field52")=%d(47) set:$a(%e,48)&&$d(%d(48)) %f("Field53")=%d(48) set:$a(%e,49)&&$d(%d(49)) %f("Field54")=%d(49) set:$a(%e,50)&&$d(%d(50)) %f("Field55")=%d(50) set:$a(%e,51)&&$d(%d(51)) %f("Field56")=%d(51) set:$a(%e,52)&&$d(%d(52)) %f("Field57")=%d(52) set:$a(%e,53)&&$d(%d(53)) %f("Field58")=%d(53) set:$a(%e,54)&&$d(%d(54)) %f("Field59")=%d(54) set:$a(%e,55)&&$d(%d(55)) %f("Field60")=%d(55) set:$a(%e,56)&&$d(%d(56)) %f("Field61")=%d(56) set:$a(%e,57)&&$d(%d(57)) %f("Field62")=%d(57) set:$a(%e,58)&&$d(%d(58)) %f("Field63")=%d(58) set:$a(%e,59)&&$d(%d(59)) %f("Field64")=%d(59) set:$a(%e,60)&&$d(%d(60)) %f("Field65")=%d(60) set:$a(%e,61)&&$d(%d(61)) %f("Field66")=%d(61) set:$a(%e,62)&&$d(%d(62)) %f("Field67")=%d(62) set:$a(%e,63)&&$d(%d(63)) %f("Field68")=%d(63) set:$a(%e,64)&&$d(%d(64)) %f("Field69")=%d(64) set:$a(%e,65)&&$d(%d(65)) %f("Field70")=%d(65) set:$a(%e,66)&&$d(%d(66)) %f("Field71")=%d(66) set:$a(%e,67)&&$d(%d(67)) %f("Field72")=%d(67) set:$a(%e,68)&&$d(%d(68)) %f("Field73")=%d(68) set:$a(%e,69)&&$d(%d(69)) %f("Field74")=%d(69) set:$a(%e,70)&&$d(%d(70)) %f("Field75")=%d(70) set:$a(%e,71)&&$d(%d(71)) %f("Field76")=%d(71) set:$a(%e,72)&&$d(%d(72)) %f("Field77")=%d(72) set:$a(%e,73)&&$d(%d(73)) %f("Field78")=%d(73) set:$a(%e,74)&&$d(%d(74)) %f("Field79")=%d(74) set:$a(%e,75)&&$d(%d(75)) %f("Field80")=%d(75) set:$a(%e,76)&&$d(%d(76)) %f("Field81")=%d(76) set:$a(%e,77)&&$d(%d(77)) %f("Field82")=%d(77) set:$a(%e,78)&&$d(%d(78)) %f("Field83")=%d(78) set:$a(%e,79)&&$d(%d(79)) %f("Field84")=%d(79) set:$a(%e,80)&&$d(%d(80)) %f("Field85")=%d(80) set:$a(%e,81)&&$d(%d(81)) %f("Field86")=%d(81) set:$a(%e,82)&&$d(%d(82)) %f("Field87")=%d(82) set:$a(%e,83)&&$d(%d(83)) %f("Field88")=%d(83)
	set:$a(%e,84)&&$d(%d(84)) %f("Field89")=%d(84) set:$a(%e,85)&&$d(%d(85)) %f("Field9")=%d(85) set:$a(%e,86)&&$d(%d(86)) %f("Field90")=%d(86) set:$a(%e,87)&&$d(%d(87)) %f("Field91")=%d(87) set:$a(%e,88)&&$d(%d(88)) %f("Field92")=%d(88) set:$a(%e,89)&&$d(%d(89)) %f("Field93")=%d(89) set:$a(%e,90)&&$d(%d(90)) %f("Field94")=%d(90) set:$a(%e,91)&&$d(%d(91)) %f("Field95")=%d(91) set:$a(%e,92)&&$d(%d(92)) %f("Field96")=%d(92) set:$a(%e,93)&&$d(%d(93)) %f("Field97")=%d(93) set:$a(%e,94)&&$d(%d(94)) %f("Field98")=%d(94) set:$a(%e,95)&&$d(%d(95)) %f("Field99")=%d(95) set:$a(%e,96)&&$d(%d(96)) %f("FirstName")=%d(96) set:$a(%e,97)&&$d(%d(97)) %f("LastName")=%d(97) set:$a(%e,98)&&$d(%d(98)) %f("LeadingField")=%d(98) set:$a(%e,99)&&$d(%d(99)) %f("MiddleInitial")=%d(99) set:$a(%e,100)&&$d(%d(100)) %f("Ministry")=%d(100) set:$a(%e,101)&&$d(%d(101)) %f("MsgID")=%d(101) set:$a(%e,102)&&$d(%d(102)) %f("State")=%d(102) set:$a(%e,103)&&$d(%d(103)) %f("StreetAddress1")=%d(103) set:$a(%e,104)&&$d(%d(104)) %f("StreetAddress2")=%d(104) set:$a(%e,105)&&$d(%d(105)) %f("Zipcode")=%d(105) set:$a(%e,106)&&$d(%d(106)) %f("x__classname")=%d(106)
	QUIT
%SQLDefineiDjVars(%d,subs,master)
	QUIT
%SQLDelete(%rowid,%check,%tstart=1,%mv=0,%polymorphic=0)
	// SQL DELETE method for table ASCN_Msg_RecMap_LFO5_Msg16.Record
	new bva,ce,%d,dc,%e,%ele,%itm,%key,%l,%nc,omcall,%oper,%pos,%s,sn,sqlcode,subs set %oper="DELETE",sqlcode=0,%ROWID=%rowid,%d(1)=%rowid,%e(1)=%rowid,%l=$c(0)
	if '$d(%0CacheSQLRA) { new %0CacheSQLRA set omcall=1 }
	if '$a(%check,2) {
		new %ls lock +^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1))#"E":$zu(115,4) set %ls=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,4:2,2:2,1:3,:""))
		set:%ls=2 $e(%check,2)=$c(1) set:%ls=2&&($tlevel) %0CacheLock("ASCN.Msg.RecMap.LFO5.Msg16.Record","E")=1 set:$case(%ls,1:1,2:1,:0) $e(%l)=$c(1)
		if '%ls||(%ls=3) { set SQLCODE=-110,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer",$s('%ls:"SQLFiler40",1:"SQLFiler55"),,%oper,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record",$g(%d(1))) RETURN  }
	}
	if %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  }
	set $zt="ERRORDelete"
	do ..%SQLGetOld(%rowid,.%d,.%e,.sqlcode) if sqlcode { set SQLCODE=-106,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler58",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record",%rowid) do ..%SQLEExit() QUIT  }
	if %e(106)'="" { set sn=$p(%e(106),$e(%e(106)),$l(%e(106),$e(%e(106)))-1) if "ASCN.Msg.RecMap.LFO5.Msg16.Record"'=sn { new %f do ..%SQLCopyIcolIntoName() do $classmethod(sn,"%SQLDelete",%rowid,%check,%tstart,%mv,1) QUIT  }}
	if '$a(%check),'$zu(115,7) do  if sqlcode set SQLCODE=sqlcode do ..%SQLEExit() QUIT  
	. new %fk,%k,%p,%st,%t,%z set %k="",%p("%1")="%d(1),",%p("IDKEY")="%d(1),"
	. for  quit:sqlcode<0  set %k=$o(^rINDEXEXT("F","ASCN.Msg.RecMap.LFO5.Msg16.Record",%k)) quit:%k=""  set %t="" for  set %t=$o(^rINDEXEXT("F","ASCN.Msg.RecMap.LFO5.Msg16.Record",%k,"f",%t)) quit:%t=""  set %st=(%t="ASCN.Msg.RecMap.LFO5.Msg16.Record") set %fk="" for  set %fk=$o(^rINDEXEXT("F","ASCN.Msg.RecMap.LFO5.Msg16.Record",%k,"f",%t,%fk)) quit:%fk=""  x "set %z=$classmethod(%t,%fk_""SQLFKeyRefAction"",%st,%k,$a(%check,2),"_%p(%k)_")" if %z set sqlcode=-124 quit  
	. quit:sqlcode  quit:$a(%check,2)=1
	. if $g(%e(2))'="",'$g(%0CacheLock("ASCN.Msg.RecMap.LFO5.Batch.Msg16","E")),'##class(ASCN.Msg.RecMap.LFO5.Batch.Msg16).%SQLExists(1,,%e(2)) set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler3",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record","%ParentBatch","%PARENTBATCH") quit
	set ce="" for  { set ce=$order(^oddSQL("ASCN_Msg_RecMap_LFO5_Msg16","Record","DC",ce)) quit:ce=""   do $classmethod(ce,"%SQLDeleteChildren",%d(1),%check,.sqlcode) quit:sqlcode<0  } if sqlcode<0 { set SQLCODE=sqlcode do ..%SQLEExit() QUIT } // Delete any children
	if '$a(%check,3) {
		set sn(1)=%e(2) set:sn(1)="" sn(1)=-1E14 set sn(2)=%d(1) k ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",sn(1),sn(2))
	}
	k ^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1))
	do ..%SQLUnlock() TCOMMIT:%tstart&&($zu(115,1)=1)
	set SQLCODE=0 kill:$g(omcall) %0CacheSQLRA
	QUIT
ERRORDelete	set $zt="",SQLCODE=-415,%msg=$s($g(%msg)'="":%msg_" -- ",1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler51",,%oper,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record",$ze) if $ze["<FRAMESTACK>" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler52",,$ze,%oper,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record") do ##Class(%SYS.System).WriteToConsoleLog(%msg) if ($zu(67,10,$j)=1)||($zu(67,10,$j)=3) { write !,%msg h 3 } HALT  } do ..%SQLEExit() QUIT
	Return
%SQLDeleteTempStreams()
	// Delete all temporary streams
	QUIT
%SQLEExit()
	do ..%SQLUnlock() 
	do ..%SQLUnlockRef()
	if %tstart,$zu(115,1)=1,$TLEVEL { set %tstart=0 TROLLBACK 1 } kill:$g(omcall) %0CacheSQLRA QUIT  
	Return
%SQLExists(pLockOnly=0,pUnlockRef,%pVal...)
	// SQL Foreign Key validation entry point for Key %1.  Called by FKeys that reference this Key to see if the row is defined
	new id set id=%pVal(1)
	if pLockOnly>=0 { if '..%SQLGetLock(id,1,.pUnlockRef) { set sqlcode=-114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler39",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record"_":"_"%1") QUIT 0 } }
	if pLockOnly<1 {
		new qv set qv=$d(^ASCN.Msg.RecMap.LFO9944.RecordD(%pVal(1))) QUIT:pLockOnly=-1 qv
		do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) quit qv
	}
	else { do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) QUIT 1 }
	Return
%SQLGetLock(pRowId,pShared=0,pUnlockRef)
	QUIT ..%SQLAcquireLock(pRowId,pShared,.pUnlockRef)
%SQLGetOld(%rowid,%d,%e,sqlcode)
	new s set %d(1)=%rowid,s="" if '$d(^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1)),s) { set sqlcode=100 quit  }
	 S %e(106)=$lg(s),%e(2)=$lg(s,103)
	QUIT
%SQLGetOldAll()
	new s set %d(1)=%rowid,s="" if '$d(^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1)),s) { set sqlcode=100 quit  }
	 S $lg(%e(106),%e(101),%e(3),%e(23),%e(34),%e(100),%e(96),%e(99),%e(97),%e(85),%e(5),%e(103),%e(104),%e(8),%e(9),%e(4),%e(102),%e(105),%e(10),%e(11),%e(13),%e(14),%e(15),%e(16),%e(17),%e(18),%e(19),%e(20),%e(21),%e(22),%e(24),%e(25),%e(26),%e(27),%e(28),%e(29),%e(30),%e(31),%e(32),%e(33),%e(35),%e(36),%e(37),%e(38),%e(39),%e(40),%e(41),%e(42),%e(43),%e(44),%e(45),%e(46),%e(47),%e(48),%e(49),%e(50),%e(51),%e(52),%e(53),%e(54),%e(55),%e(56),%e(57),%e(58),%e(59),%e(60),%e(61),%e(62),%e(63),%e(64),%e(65),%e(66),%e(67),%e(68),%e(69),%e(70),%e(71),%e(72),%e(73),%e(74),%e(75),%e(76),%e(77),%e(78),%e(79),%e(80),%e(81),%e(82),%e(83),%e(84),%e(86),%e(87),%e(88),%e(89),%e(90),%e(91),%e(92),%e(93),%e(94),%e(95),%e(6),%e(7),%e(2),%e(12),%e(98))=s
	QUIT
%SQLGetOldIndex(%rowid,%d,pF=0,sqlcode)
	try {
		new tClass,tF,tOid,tSC
		set tOid=..%ComposeOid(%rowid)
		if ''..%OnDetermineClass(tOid,.tClass),tClass'=$classname() {
			set tF=1 do $classmethod(tClass,"%SQLGetOldIndex",%rowid,,.tF,.sqlcode)
			set:$d(tF("%ParentBatch")) %d(2)=tF("%ParentBatch") set:$d(tF("x__classname")) %d(106)=tF("x__classname") 
			RETURN
		}
	}
	catch { }
	new s set %d(1)=%rowid,s="" if '$d(^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1)),s) { set sqlcode=100 quit  }
	 S %e(106)=$lg(s),%e(2)=$lg(s,103)
	if pF { set:$d(%d(2)) pF("%ParentBatch")=%d(2) set:$d(%d(106)) pF("x__classname")=%d(106)  }
	set sqlcode=0
	QUIT
%SQLInsert(%d,%check,%inssel,%vco,%tstart=1,%mv=0)
	// SQL INSERT method for table ASCN_Msg_RecMap_LFO5_Msg16.Record
	new bva,%ele,%itm,%key,%f,%l,%n,%nc,%oper,%pos,%s,sqlcode,sn,subs,unlockref,icol set %oper="INSERT",sqlcode=0,%l=$c(0,0,0),unlockref=1
	if $a(%check,7) { new %diu merge %diu=%d }
	if $d(%d(1)),'$zu(115,11) { if %d(1)'="" { set SQLCODE=-111,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler6",,"ID","ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record") RETURN ""  } kill %d(1) } 
	if '$a(%check),'..%SQLValidateFields(.sqlcode) { set SQLCODE=sqlcode RETURN "" }
	do:'$a(%check,8) ..%SQLNormalizeFields()
	if %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  } set $zt="ERRORInsert"
	if '$a(%check) {
		do {
			if $g(%vco)'="" { d @%vco quit:sqlcode<0  }
			quit:$zu(115,7)  set %msg=""
			if $g(%d(2))'="",'##class(ASCN.Msg.RecMap.LFO5.Batch.Msg16).%SQLExists($s($a(%check,2)=1:-1,1:0),.unlockref,%d(2)) { set sqlcode=-121,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler41",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record","%ParentBatch","%PARENTBATCH")_"  "_$g(%msg) quit  }		// Foreign Key Constraint %ParentBatch
		} while 0
		if sqlcode<0 { set SQLCODE=sqlcode do ..%SQLEExit() RETURN "" }		// A constraint failed
	}
	if '$d(%d(1)) { set %d(1)=$i(^ASCN.Msg.RecMap.LFO9944.RecordD) } elseif %d(1)>$g(^ASCN.Msg.RecMap.LFO9944.RecordD) { if $i(^ASCN.Msg.RecMap.LFO9944.RecordD,$zabs(%d(1)-$g(^ASCN.Msg.RecMap.LFO9944.RecordD))) {}} elseif $d(^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1))) { set SQLCODE=-119,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler33",,"ID",%d(1),"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record"_"."_"ID") do ..%SQLEExit() RETURN "" }
	set:'($d(%d(106))#2) %d(106)="" set:'($d(%d(2))#2) %d(2)=""
	if '$a(%check,2) {
		new %ls lock +^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1))#"E":$zu(115,4) set %ls=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,4:2,2:2,1:3,:""))
		set:%ls=2 $e(%check,2)=$c(1) set:%ls=2&&($tlevel) %0CacheLock("ASCN.Msg.RecMap.LFO5.Msg16.Record","E")=1 set:$case(%ls,1:1,2:1,:0) $e(%l)=$c(1)
		if '%ls||(%ls=3) { set SQLCODE=-110,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer",$s('%ls:"SQLFiler40",1:"SQLFiler55"),,%oper,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record",$g(%d(1))) do ..%SQLEExit() RETURN ""  }
	}
	set ^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1))=$lb(%d(106),%d(101),%d(3),%d(23),%d(34),%d(100),%d(96),%d(99),%d(97),%d(85),%d(5),%d(103),%d(104),%d(8),%d(9),%d(4),%d(102),%d(105),%d(10),%d(11),%d(13),%d(14),%d(15),%d(16),%d(17),%d(18),%d(19),%d(20),%d(21),%d(22),%d(24),%d(25),%d(26),%d(27),%d(28),%d(29),%d(30),%d(31),%d(32),%d(33),%d(35),%d(36),%d(37),%d(38),%d(39),%d(40),%d(41),%d(42),%d(43),%d(44),%d(45),%d(46),%d(47),%d(48),%d(49),%d(50),%d(51),%d(52),%d(53),%d(54),%d(55),%d(56),%d(57),%d(58),%d(59),%d(60),%d(61),%d(62),%d(63),%d(64),%d(65),%d(66),%d(67),%d(68),%d(69),%d(70),%d(71),%d(72),%d(73),%d(74),%d(75),%d(76),%d(77),%d(78),%d(79),%d(80),%d(81),%d(82),%d(83),%d(84),%d(86),%d(87),%d(88),%d(89),%d(90),%d(91),%d(92),%d(93),%d(94),%d(95),%d(6),%d(7),%d(2),%d(12),%d(98))
	if '$a(%check,3) {
		set sn(1)=%d(2) set:sn(1)="" sn(1)=-1E14 set sn(2)=%d(1) set ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",sn(1),sn(2))=%d(106)
	}
	lock:$a(%l) -^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1))#"E"
	TCOMMIT:%tstart&&($zu(115,1)=1)
	do ..%SQLUnlockRef()
	set SQLCODE=0
	QUIT %d(1) 			// %SQLInsert
ERRORInsert	set $zt="",SQLCODE=-415,%msg=$s($g(%msg)'="":%msg_" -- ",1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler51",,%oper,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record",$ze)
	if $ze["<FRAMESTACK>" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler52",,$ze,%oper,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record") do ##Class(%SYS.System).WriteToConsoleLog(%msg) if ($zu(67,10,$j)=1)||($zu(67,10,$j)=3) { write !,%msg h 3 } HALT  }
	do ..%SQLEExit()
	RETURN ""
%SQLInvalid(pIcol,pVal) public {
	set:$l($g(pVal))>40 pVal=$e(pVal,1,40)_"..." do:'$d(%n) ..%SQLnBuild() set %msg=$s($g(%msg)'="":%msg_$c(13,10),1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler37",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record"_"."_$lg(%n,pIcol),$s($g(pVal)'="":$s(pVal="":"<NULL>",pVal=$c(0):"<EMPTY STRING>",1:"'"_pVal_"'"),1:"")),sqlcode=$s(%oper="INSERT":-104,1:-105)
	QUIT sqlcode }
%SQLMissing(fname)
	set sqlcode=-108,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler47",,fname,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record") quit
%SQLNormalizeFields()
	set:$g(%d(2))'="" %d(2)=$select(%d(2)=$c(0)&&$zu(115,13):"",1:%d(2)\1)
	QUIT
%SQLPurgeIndices(pIndices="",pLockExtent=0,pIgnoreIndexList="")
	QUIT ..%PurgeIndices(pIndices,pLockExtent,pIgnoreIndexList)
%SQLQuickLoad(%rowid,%nolock=0,pkey=0,qq=0)
	// Get fields from row where SQLRowID=%rowid
	new d,i,il,subs set:%nolock=2 %nolock=1
	if %nolock=0 { if '..%SQLAcquireLock(%rowid) { set %qrc=114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler45",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record",%rowid),%ROWCOUNT=0 QUIT  } set:$zu(115,2) il=$zu(115,2,0) }
	new s,ul set ul=0,d(1)=%rowid if $zu(115,2)=1 { lock +^ASCN.Msg.RecMap.LFO9944.RecordD(d(1))#"S":$zu(115,4) if $t { set ul=1 } else { set %qrc=114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler46",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record",%rowid),%ROWCOUNT=0 quit  } }
	if '$d(^ASCN.Msg.RecMap.LFO9944.RecordD(d(1)),s) { set SQLCODE=100,%qrc=100 if %nolock=0 { do:$g(il) $zu(115,2,il) }} else { set SQLCODE=0
	if qq { set d(106)=$lg(s) if d(106)'="" { new sn set sn=$p(d(106),$e(d(106)),$l(d(106),$e(d(106)))-1) if "ASCN.Msg.RecMap.LFO5.Msg16.Record"'=sn { if %nolock=0 { do ..%SQLReleaseLock(%rowid,0,1) do:$g(il) $zu(115,2,il) } kill d set:sn'["." sn="User."_sn do $classmethod(sn,"%SQLQuickLoad",%rowid,%nolock,0,1) QUIT  }}}
	set d(2)=$lg(s,103) set d(3)=$lg(s,3) set d(4)=$lg(s,16) set d(5)=$lg(s,11) set d(6)=$lg(s,101) set d(7)=$lg(s,102) set d(8)=$lg(s,14) set d(9)=$lg(s,15) set d(10)=$lg(s,19) set d(11)=$lg(s,20) set d(12)=$lg(s,104) set d(13)=$lg(s,21) set d(14)=$lg(s,22) set d(15)=$lg(s,23) set d(16)=$lg(s,24) set d(17)=$lg(s,25) set d(18)=$lg(s,26) set d(19)=$lg(s,27) set d(20)=$lg(s,28) set d(21)=$lg(s,29) set d(22)=$lg(s,30) set d(23)=$lg(s,4) set d(24)=$lg(s,31) set d(25)=$lg(s,32) set d(26)=$lg(s,33) set d(27)=$lg(s,34) set d(28)=$lg(s,35) set d(29)=$lg(s,36) set d(30)=$lg(s,37) set d(31)=$lg(s,38) set d(32)=$lg(s,39) set d(33)=$lg(s,40) set d(34)=$lg(s,5) set d(35)=$lg(s,41) set d(36)=$lg(s,42) set d(37)=$lg(s,43) set d(38)=$lg(s,44) set d(39)=$lg(s,45) set d(40)=$lg(s,46) set d(41)=$lg(s,47) set d(42)=$lg(s,48) set d(43)=$lg(s,49) set d(44)=$lg(s,50) set d(45)=$lg(s,51) set d(46)=$lg(s,52) set d(47)=$lg(s,53) set d(48)=$lg(s,54) set d(49)=$lg(s,55) set d(50)=$lg(s,56) set d(51)=$lg(s,57) set d(52)=$lg(s,58) set d(53)=$lg(s,59) set d(54)=$lg(s,60) set d(55)=$lg(s,61) set d(56)=$lg(s,62) set d(57)=$lg(s,63) set d(58)=$lg(s,64) set d(59)=$lg(s,65) set d(60)=$lg(s,66) set d(61)=$lg(s,67) set d(62)=$lg(s,68) set d(63)=$lg(s,69) set d(64)=$lg(s,70) set d(65)=$lg(s,71) set d(66)=$lg(s,72) set d(67)=$lg(s,73) set d(68)=$lg(s,74) set d(69)=$lg(s,75) set d(70)=$lg(s,76) set d(71)=$lg(s,77) set d(72)=$lg(s,78) set d(73)=$lg(s,79) set d(74)=$lg(s,80) set d(75)=$lg(s,81) set d(76)=$lg(s,82) set d(77)=$lg(s,83) set d(78)=$lg(s,84) set d(79)=$lg(s,85) set d(80)=$lg(s,86) set d(81)=$lg(s,87) set d(82)=$lg(s,88) set d(83)=$lg(s,89) set d(84)=$lg(s,90) set d(85)=$lg(s,10) set d(86)=$lg(s,91) set d(87)=$lg(s,92) set d(88)=$lg(s,93) set d(89)=$lg(s,94) set d(90)=$lg(s,95) set d(91)=$lg(s,96) set d(92)=$lg(s,97) set d(93)=$lg(s,98) set d(94)=$lg(s,99) set d(95)=$lg(s,100) set d(96)=$lg(s,7) set d(97)=$lg(s,9) set d(98)=$lg(s,105) set d(99)=$lg(s,8) set d(100)=$lg(s,6) set d(101)=$lg(s,2) set d(102)=$lg(s,17) set d(103)=$lg(s,12) set d(104)=$lg(s,13) set d(105)=$lg(s,18) set d(106)=$lg(s)  }
	do ..%SQLQuickLogicalToOdbc(.d)
	if SQLCODE set %ROWCOUNT=0 set:SQLCODE<0 SQLCODE=-SQLCODE lock:ul -^ASCN.Msg.RecMap.LFO9944.RecordD(d(1))#"SI" set %qrc=SQLCODE QUIT
	set:qq d=$zobjexport("ASCN.Msg.RecMap.LFO5.Msg16.Record",18),d=$zobjexport(106,18) set i=-1 for  { set i=$o(d(i)) quit:i=""  set d=$zobjexport(d(i),18) } set %qrc=0,%ROWCOUNT=1 lock:ul -^ASCN.Msg.RecMap.LFO9944.RecordD(d(1))#"SI" if %nolock=0 { do ..%SQLReleaseLock(%rowid,0,0) do:$g(il) $zu(115,2,il) } QUIT
	Return
%SQLReleaseLock(%rowid,s=0,i=0,e="")
	new %d
	set:e="" e=1 set %d(1)=%rowid set s=$e("E",e)_$e("S",s)_$e("D",i)
	lock -^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1))#s
	QUIT
%SQLReleaseTableLock(s=0,i=0)
	set s=$e("S",s)_$e("D",i) lock -^ASCN.Msg.RecMap.LFO9944.RecordD#s QUIT 1
	Return
%SQLUnlock()
	lock:$a(%l) -^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1))#"E"
	QUIT
%SQLUnlockError(cname)
	set sqlcode=-110 if %oper="DELETE" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler48",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record",cname) } else { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler49",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record",cname) } quit
	Return
%SQLUnlockRef()
	for %itm=2:1:$g(unlockref) {
		if $lg(unlockref(%itm))'="%UnlockId" { lock -@$lg(unlockref(%itm))#$lg(unlockref(%itm),3) }
		else { do $classmethod($lg(unlockref(%itm),2),$lg(unlockref(%itm)),$lg(unlockref(%itm),3),1,1) }
	}
	QUIT
%SQLUpdate(%rowid,%check,%d,%vco,%tstart=1,%mv=0,%polymorphic=0,%soid)
	// SQL UPDATE method for table ASCN_Msg_RecMap_LFO5_Msg16.Record
	new %e,bva,%ele,%itm,%key,%f,%l,%n,%nc,%oper,%pos,%s,icol,omcall,s,sn,sqlcode,subs,t,unlockref set %oper="UPDATE",sqlcode=0,%ROWID=%rowid,$e(%e,1)=$c(0),%l=$c(0,0,0),unlockref=1
	if '$d(%0CacheSQLRA) { new %0CacheSQLRA set omcall=1 }
	if '$a(%check,7) {
		if '$a(%check),'..%SQLValidateFields(.sqlcode) { set SQLCODE=sqlcode QUIT  }
		do:'$a(%check,8) ..%SQLNormalizeFields()
	}
	if $d(%d(1)),%d(1)'=%rowid { set SQLCODE=-107,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler16",,"ID","ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record") QUIT  }
	for icol=2:1:106 { set $e(%e,icol)=$c($d(%d(icol))) }
	set %d(1)=%rowid,%e(1)=%rowid
	if '$a(%check,2) {
		new %ls lock +^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1))#"E":$zu(115,4) set %ls=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,4:2,2:2,1:3,:""))
		set:%ls=2 $e(%check,2)=$c(1) set:%ls=2&&($tlevel) %0CacheLock("ASCN.Msg.RecMap.LFO5.Msg16.Record","E")=1 set:$case(%ls,1:1,2:1,:0) $e(%l)=$c(1)
		if '%ls||(%ls=3) { set SQLCODE=-110,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer",$s('%ls:"SQLFiler40",1:"SQLFiler55"),,%oper,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record",$g(%d(1))) RETURN  }
	}
	if %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  }
	set $zt="ERRORUpdate"
	if $g(%vco)="" { do ..%SQLGetOld(%rowid,.%d,.%e,.sqlcode) i sqlcode { s SQLCODE=-109,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler59",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record",%rowid) do ..%SQLEExit() QUIT  } for icol=106,2 { set:'$d(%d(icol)) %d(icol)=%e(icol) set:%d(icol)=%e(icol) $e(%e,icol)=$c(0) }} else { do ..%SQLGetOldAll() if sqlcode { set SQLCODE=-109,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler59",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record",%rowid) do ..%SQLEExit() QUIT  } for icol=2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106 { set:'$d(%d(icol)) %d(icol)=%e(icol) set:%d(icol)=%e(icol) $e(%e,icol)=$c(0) }}
	if %e(106)'="" set sn=$p(%e(106),$e(%e(106)),$l(%e(106),$e(%e(106)))-1) if "ASCN.Msg.RecMap.LFO5.Msg16.Record"'=sn new %f do ..%SQLCopyIcolIntoName() do $classmethod(sn,"%SQLUpdate",%rowid,%check,.%d,$g(%vco),%tstart,%mv,1) QUIT
	if '$a(%check) {
		do {
			if $g(%vco)'="" { d @%vco quit:sqlcode<0  }
			quit:$zu(115,7)  set %msg=""
			if $a(%e,2),$g(%updcas)'="%1",$g(%d(2))'="",'##class(ASCN.Msg.RecMap.LFO5.Batch.Msg16).%SQLExists($s($a(%check,2)=1:-1,1:0),.unlockref,%d(2)) { set sqlcode=-122,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler41",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record","%ParentBatch","%PARENTBATCH")_"  "_$g(%msg) quit  }
			quit:$a(%check,2)=1  quit:$g(%updcas)'=""
			if ($a(%e,2)),%e(2)'="",'$g(%0CacheLock("ASCN.Msg.RecMap.LFO5.Batch.Msg16","E")),'##class(ASCN.Msg.RecMap.LFO5.Batch.Msg16).%SQLExists(1,,%e(2)) { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler21",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record","%ParentBatch","%PARENTBATCH") quit  }
		} while 0
		if sqlcode { set SQLCODE=sqlcode do ..%SQLEExit() QUIT  }
	}
	if ($zboolean(%e,$c(0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),1)[$c(1)) {
		set ^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1))=$listupdate($g(^ASCN.Msg.RecMap.LFO9944.RecordD(%d(1))),1,$a(%e,106):%d(106),$a(%e,101):%d(101),$a(%e,3):%d(3),$a(%e,23):%d(23),$a(%e,34):%d(34),$a(%e,100):%d(100),$a(%e,96):%d(96),$a(%e,99):%d(99),$a(%e,97):%d(97),$a(%e,85):%d(85),$a(%e,5):%d(5),$a(%e,103):%d(103),$a(%e,104):%d(104),$a(%e,8):%d(8),$a(%e,9):%d(9),$a(%e,4):%d(4),$a(%e,102):%d(102),$a(%e,105):%d(105),$a(%e,10):%d(10),$a(%e,11):%d(11),$a(%e,13):%d(13),$a(%e,14):%d(14),$a(%e,15):%d(15),$a(%e,16):%d(16),$a(%e,17):%d(17),$a(%e,18):%d(18),$a(%e,19):%d(19),$a(%e,20):%d(20),$a(%e,21):%d(21),$a(%e,22):%d(22),$a(%e,24):%d(24),$a(%e,25):%d(25),$a(%e,26):%d(26),$a(%e,27):%d(27),$a(%e,28):%d(28),$a(%e,29):%d(29),$a(%e,30):%d(30),$a(%e,31):%d(31),$a(%e,32):%d(32),$a(%e,33):%d(33),$a(%e,35):%d(35),$a(%e,36):%d(36),$a(%e,37):%d(37),$a(%e,38):%d(38),$a(%e,39):%d(39),$a(%e,40):%d(40),$a(%e,41):%d(41),$a(%e,42):%d(42),$a(%e,43):%d(43),$a(%e,44):%d(44),$a(%e,45):%d(45),$a(%e,46):%d(46),$a(%e,47):%d(47),$a(%e,48):%d(48),$a(%e,49):%d(49),$a(%e,50):%d(50),$a(%e,51):%d(51),$a(%e,52):%d(52),$a(%e,53):%d(53),$a(%e,54):%d(54),$a(%e,55):%d(55),$a(%e,56):%d(56),$a(%e,57):%d(57),$a(%e,58):%d(58),$a(%e,59):%d(59),$a(%e,60):%d(60),$a(%e,61):%d(61),$a(%e,62):%d(62),$a(%e,63):%d(63),$a(%e,64):%d(64),$a(%e,65):%d(65),$a(%e,66):%d(66),$a(%e,67):%d(67),$a(%e,68):%d(68),$a(%e,69):%d(69),$a(%e,70):%d(70),$a(%e,71):%d(71),$a(%e,72):%d(72),$a(%e,73):%d(73),$a(%e,74):%d(74),$a(%e,75):%d(75),$a(%e,76):%d(76),$a(%e,77):%d(77),$a(%e,78):%d(78),$a(%e,79):%d(79),$a(%e,80):%d(80),$a(%e,81):%d(81),$a(%e,82):%d(82),$a(%e,83):%d(83),$a(%e,84):%d(84),$a(%e,86):%d(86),$a(%e,87):%d(87),$a(%e,88):%d(88),$a(%e,89):%d(89),$a(%e,90):%d(90),$a(%e,91):%d(91),$a(%e,92):%d(92),$a(%e,93):%d(93),$a(%e,94):%d(94),$a(%e,95):%d(95),$a(%e,6):%d(6),$a(%e,7):%d(7),$a(%e,2):%d(2),$a(%e,12):%d(12),$a(%e,98):%d(98))
	}
	if '$a(%check,3) { 
		if $a(%e,2)||$a(%e,106) {	// %ParentBatchIdx index map
			if $a(%e,2) { set sn(1)=%e(2) set:sn(1)="" sn(1)=-1E14 set sn(2)=%d(1) k ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",sn(1),sn(2)) }
			set sn(1)=%d(2) set:sn(1)="" sn(1)=-1E14 set sn(2)=%d(1) set ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",sn(1),sn(2))=%d(106)
		}
	}
	do ..%SQLUnlock() TCOMMIT:%tstart&&($zu(115,1)=1)
	do ..%SQLUnlockRef()
	set SQLCODE=0 kill:$g(omcall) %0CacheSQLRA
	QUIT
ERRORUpdate	set $zt="",SQLCODE=-415,%msg=$s($g(%msg)'="":%msg_" -- ",1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler51",,%oper,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record",$ze) if $ze["<FRAMESTACK>" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler52",,$ze,%oper,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record") do ##Class(%SYS.System).WriteToConsoleLog(%msg) if ($zu(67,10,$j)=1)||($zu(67,10,$j)=3) { write !,%msg h 3 } HALT  } do ..%SQLEExit() QUIT  
	Return
%SQLValidateFields(sqlcode)
	new %f for %f=4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105 { if $g(%d(%f))'="",'(($l(%d(%f))'>1024)) set sqlcode=..%SQLInvalid(%f+1,$g(%d(%f))) quit  } 
	if $g(%d(3))'="",'(($l(%d(3))'>2000)) { set sqlcode=..%SQLInvalid(3+1,%d(3)) } 
	if $g(%d(98))'="",'(($l(%d(98))'>50)) { set sqlcode=..%SQLInvalid(98+1,%d(98)) } 
	QUIT 'sqlcode
%SQLnBuild() public {
	set %n=$lb(,"ID","%ParentBatch","%Source","City","Field10","Field100","Field101","Field13","Field14","Field18","Field19","Field2","Field20","Field21","Field22","Field23","Field24","Field25","Field26","Field27","Field28","Field29","Field3","Field30","Field31","Field32","Field33","Field34","Field35","Field36","Field37","Field38","Field39","Field4","Field40","Field41","Field42","Field43","Field44","Field45","Field46","Field47","Field48","Field49","Field50","Field51","Field52","Field53","Field54","Field55","Field56","Field57","Field58","Field59","Field60","Field61","Field62","Field63","Field64","Field65","Field66","Field67","Field68","Field69","Field70","Field71","Field72","Field73","Field74","Field75","Field76","Field77","Field78","Field79","Field80","Field81","Field82","Field83","Field84","Field85","Field86","Field87","Field88","Field89","Field9","Field90","Field91","Field92","Field93","Field94","Field95","Field96","Field97","Field98","Field99","FirstName","LastName","LeadingField","MiddleInitial","Ministry","MsgID","State","StreetAddress1","StreetAddress2","Zipcode","x__classname")
	QUIT }
%Save(related=1) public {
	Set $ZTrap="%SaveERR"
	New %objTX Set sc=1,traninit=0 If '$data(%objTX2) New %objTX2 Set %objTX2=1
	If +$g(%objtxSTATUS)=0 { Set traninit=1 k %objtxSTATUS,%objtxLIST,%objtxOIDASSIGNED,%objtxOIDUNASSIGNED,%objtxMODIFIED,%objtxVERSION k:'$TLevel %objtxTID,%objtxID i '$zu(115,9) { s %objtxSTATUS=1 } else { TStart  s %objtxSTATUS=2 } }
	If $get(%objTX2(+$this)) Set sc=..%BuildObjectGraph(1) Quit:('sc) sc Set intRef=+$this,objValue=$get(%objTX(1,+$g(%objTX(0,intRef)),1)),sc=..%SerializeObject(.objValue,1) Set:(''sc) %objTX(1,%objTX(0,intRef),1)=objValue Quit sc
	Set sc=..%BuildObjectGraph(related+2) If ('sc) ZTrap "SG"
	If '$data(%objTX(2)) s sc=1 GoTo %SaveCOMMIT
	Set %objTX(3)=0,i="" For  Set i=$order(%objTX(2,i),1,data) Quit:i=""  Set intRef=$li(data) If '$data(%objTX(1,+$g(%objTX(0,intRef)),2)) Set %objTX(3,$increment(%objTX(3)))=%objTX(1,%objTX(0,intRef)) Kill %objTX(2,i),%objTX(11,intRef)
	For ptr=1:1 Quit:ptr>%objTX(3)  Set objRef=%objTX(3,ptr),objValue=$get(%objTX(1,+$g(%objTX(0,+objRef)),1)),sc=objRef.%SerializeObject(.objValue) Do  Set %objTX(1,%objTX(0,+objRef),1)=objValue Kill %objTX(1,%objTX(0,+objRef),3) Do $system.CLS.SetModified(objRef,0)
	. If ('sc) ZTrap "SG"
	. i $g(%objtxSTATUS)=2 { Set %objtxMODIFIED(+objRef)=$system.CLS.GetModifiedBits(objRef) }
	. Set intSucc="" For  Set intSucc=$order(%objTX(1,%objTX(0,+objRef),3,intSucc)) Quit:intSucc=""  Kill %objTX(1,%objTX(0,+objRef),3,intSucc),%objTX(1,intSucc,2,%objTX(0,+objRef)) If '$data(%objTX(1,intSucc,2)) Set %objTX(3,$increment(%objTX(3)))=%objTX(1,intSucc) Kill:$d(%objTX(11,+%objTX(1,intSucc))) %objTX(2,%objTX(11,+%objTX(1,intSucc))),%objTX(11,+%objTX(1,intSucc))
	Kill %objTX(3) Set %objTX(3)=0 For  Set pserial=0 Do  Quit:'pserial
	. Set i="" For  Set i=$order(%objTX(2,i),1,data) Quit:i=""  Set intPred="",intRef=$li(data) For  Set intPred=$order(%objTX(1,%objTX(0,intRef),2,intPred)) Quit:intPred=""  If $get(%objTX(1,intPred,6))=1 Set objValue=$get(%objTX(1,intPred,1)),sc=(%objTX(1,intPred)).%SerializeObject(.objValue,1) If ('sc) { If $d(%objTX(11,+%objTX(1,intPred))) { Set %objTX(2,%objTX(11,+%objTX(1,intPred)),1)=sc } Else { Set %objTX(2,$i(%objTX(2)),1)=sc,%objTX(11,+%objTX(1,intPred))=%objTX(2) } } If (''sc) Set pserial=1,%objTX(1,intPred,1)=objValue Do
	. . Set intSucc="" For  Set intSucc=$order(%objTX(1,intPred,3,intSucc)) Quit:intSucc=""  Kill %objTX(1,intPred,3,intSucc),%objTX(1,intSucc,2,intPred) If '$data(%objTX(1,intSucc,2)) Set %objTX(3,$i(%objTX(3)))=%objTX(1,intSucc) Kill:$d(%objTX(11,+%objTX(1,intSucc))) %objTX(2,%objTX(11,+%objTX(1,intSucc))),%objTX(11,+%objTX(1,intSucc))
	. . For ptr=1:1 Quit:ptr>%objTX(3)  Set objSerialize=%objTX(3,ptr),objValue=$get(%objTX(1,+$g(%objTX(0,+objSerialize)),1)),sc=objSerialize.%SerializeObject(.objValue) Do  Set %objTX(1,%objTX(0,+objSerialize),1)=objValue Kill %objTX(1,%objTX(0,+objSerialize),3) Do $system.CLS.SetModified(objSerialize,0)
	. . . If ('sc) ZTrap "SG"
	. . . i $g(%objtxSTATUS)=2 { Set %objtxMODIFIED(+objSerialize)=$system.CLS.GetModifiedBits(objSerialize) }
	. . . Set intSucc="" For  Set intSucc=$order(%objTX(1,%objTX(0,+objSerialize),3,intSucc)) Quit:intSucc=""  Kill %objTX(1,%objTX(0,+objSerialize),3,intSucc),%objTX(1,intSucc,2,%objTX(0,+objSerialize)) If '$data(%objTX(1,intSucc,2)) Set %objTX(3,$i(%objTX(3)))=%objTX(1,intSucc) Kill:$d(%objTX(11,+%objTX(1,intSucc))) %objTX(2,%objTX(11,+%objTX(1,intSucc))),%objTX(11,+%objTX(1,intSucc))
	. . Kill %objTX(3) Set %objTX(3)=0
	If $data(%objTX(2))>2 {
		Set sc=$$Error^%apiOBJ(5827,$classname())
		set i="" for  set i=$order(%objTX(2,i)) quit:i=""  if ('$Get(%objTX(2,i,1),1)) set sc=$$EmbedStatus^%apiOBJ(sc,%objTX(2,i,1))
	 	ZTrap "SG"
	}
	Set cmd="" For  Set cmd=$order(%objTX(9,cmd)) Quit:cmd=""  Xecute cmd
%SaveCOMMIT	If traninit { i $g(%objtxSTATUS)=1 { k %objtxSTATUS } else { If $Tlevel { TCommit  } k %objtxSTATUS,%objtxLIST,%objtxOIDASSIGNED,%objtxOIDUNASSIGNED,%objtxMODIFIED,%objtxVERSION k:'$TLevel %objtxTID,%objtxID } }
	Do $system.CLS.SetModified(0) Quit sc
%SaveERR	Set $ZTrap="" If $extract($zerror,1,5)'="<ZSG>" Set sc=$$Error^%apiOBJ(5002,$ZE)
	If $get(traninit) { i $g(%objtxSTATUS)=2 { s sc=$select(+sc:$$%TRollBack^%occTransaction(),1:$$AppendStatus^%occSystem(sc,$$%TRollBack^%occTransaction())) k %objtxTID,%objtxID } else { k %objtxSTATUS } }
	Quit sc }
%SaveData(id) public {
	try {
		set id=$listget(i%"%%OID") if id'="" { set insert=0,idassigned=1 } else { set insert=1,idassigned=0 }
		set lock=0,lockok=0,tSharedLock=0
		if 'idassigned { set id=$i(^ASCN.Msg.RecMap.LFO9944.RecordD) do ..%IdSet(id) set:$g(%objtxSTATUS)=2 %objtxOIDASSIGNED(+$this)="" }
		if (i%%ParentBatch'="")&&('##class(ASCN.Msg.RecMap.LFO5.Batch.Msg16).%ExistsId(i%%ParentBatch)) { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5824,"ASCN.Msg.RecMap.LFO5.Msg16.Record.%ParentBatch("_$zu(144,1,i%%ParentBatch)_")")) }
		set zzc10v1=$s(i%%ParentBatch'="":i%%ParentBatch,1:-1E14)
		try {
			set tInnerException = ""
			;
			if 'insert {
				if (i%%Concurrency<4)&&(i%%Concurrency) { lock +(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E"):$zu(115,4) set lockok=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:lockok=2&&($tlevel) %0CacheLock($classname(),"E")=1 if lockok { set lock=1 } else { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				if ('$Data(^ASCN.Msg.RecMap.LFO9944.RecordD(id))) {
					set insert=1
					if lock { lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E") set (lock,lockok) = 0 }
				}
			}
			if insert {
				if ('lockok&&..%Concurrency&&$tlevel)||(i%%Concurrency=4) {  lock +(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E"):$zu(115,4) set lockok=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:(lockok=2&&(i%%Concurrency'=4)) %0CacheLock($classname(),"E")=1 set:lockok lock=1 if 'lockok { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				if i%%Concurrency=3 { lock +(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"ES") set tSharedLock=1 }
				set ^ASCN.Msg.RecMap.LFO9944.RecordD(id)=$lb("",i%MsgID,i%%Source,i%Field3,i%Field4,i%Ministry,i%FirstName,i%MiddleInitial,i%LastName,i%Field9,i%Field10,i%StreetAddress1,i%StreetAddress2,i%Field13,i%Field14,i%City,i%State,i%Zipcode,i%Field18,i%Field19,i%Field20,i%Field21,i%Field22,i%Field23,i%Field24,i%Field25,i%Field26,i%Field27,i%Field28,i%Field29,i%Field30,i%Field31,i%Field32,i%Field33,i%Field34,i%Field35,i%Field36,i%Field37,i%Field38,i%Field39,i%Field40,i%Field41,i%Field42,i%Field43,i%Field44,i%Field45,i%Field46,i%Field47,i%Field48,i%Field49,i%Field50,i%Field51,i%Field52,i%Field53,i%Field54,i%Field55,i%Field56,i%Field57,i%Field58,i%Field59,i%Field60,i%Field61,i%Field62,i%Field63,i%Field64,i%Field65,i%Field66,i%Field67,i%Field68,i%Field69,i%Field70,i%Field71,i%Field72,i%Field73,i%Field74,i%Field75,i%Field76,i%Field77,i%Field78,i%Field79,i%Field80,i%Field81,i%Field82,i%Field83,i%Field84,i%Field85,i%Field86,i%Field87,i%Field88,i%Field89,i%Field90,i%Field91,i%Field92,i%Field93,i%Field94,i%Field95,i%Field96,i%Field97,i%Field98,i%Field99,i%Field100,i%Field101,i%%ParentBatch,i%Field2,i%LeadingField)
				set ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",zzc10v1,id)=""
			}
			else {
				set zzc31v1=$listget(^ASCN.Msg.RecMap.LFO9944.RecordD(id),103)
				if (i%%ParentBatch'=zzc31v1) {
					kill ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",$s(zzc31v1'="":zzc31v1,1:-1E14),id)
					set ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",zzc10v1,id)=""
				}
				set ^ASCN.Msg.RecMap.LFO9944.RecordD(id)=$lb("",i%MsgID,i%%Source,i%Field3,i%Field4,i%Ministry,i%FirstName,i%MiddleInitial,i%LastName,i%Field9,i%Field10,i%StreetAddress1,i%StreetAddress2,i%Field13,i%Field14,i%City,i%State,i%Zipcode,i%Field18,i%Field19,i%Field20,i%Field21,i%Field22,i%Field23,i%Field24,i%Field25,i%Field26,i%Field27,i%Field28,i%Field29,i%Field30,i%Field31,i%Field32,i%Field33,i%Field34,i%Field35,i%Field36,i%Field37,i%Field38,i%Field39,i%Field40,i%Field41,i%Field42,i%Field43,i%Field44,i%Field45,i%Field46,i%Field47,i%Field48,i%Field49,i%Field50,i%Field51,i%Field52,i%Field53,i%Field54,i%Field55,i%Field56,i%Field57,i%Field58,i%Field59,i%Field60,i%Field61,i%Field62,i%Field63,i%Field64,i%Field65,i%Field66,i%Field67,i%Field68,i%Field69,i%Field70,i%Field71,i%Field72,i%Field73,i%Field74,i%Field75,i%Field76,i%Field77,i%Field78,i%Field79,i%Field80,i%Field81,i%Field82,i%Field83,i%Field84,i%Field85,i%Field86,i%Field87,i%Field88,i%Field89,i%Field90,i%Field91,i%Field92,i%Field93,i%Field94,i%Field95,i%Field96,i%Field97,i%Field98,i%Field99,i%Field100,i%Field101,i%%ParentBatch,i%Field2,i%LeadingField)
			}
			set tStatus = 1
		}
		catch tInnerException {
			if ('idassigned) { Set $zobjoid("",$listget(i%"%%OID"))="",i%"%%OID"="" kill:$g(%objtxSTATUS)=2 %objtxOIDASSIGNED(+$this) }
			if (tSharedLock) {  lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"ES") } elseif (lockok=1)&&(insert)&&(i%%Concurrency=4) {  lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)) }
		}
		if lock lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E")
		if $Isobject(tInnerException) { throw tInnerException }
	}
	catch tException {
		set tStatus = tException.AsStatus()
	}
	quit tStatus }
%SaveDirect(id="",idList="",data,concurrency=-1) public {
	try {
		set zzc5v1=$lg(idList,1)
		set zzc5v2=$listget(data,103)
		set zzc5v3=$listget(data,1)
		if concurrency=-1 { set concurrency=$zu(115,10) }
		if id'="" { set insert=0,idassigned=1 } else { set insert=1,idassigned=0 }
		set lock=0,tSharedLock=0
		if 'idassigned { set id=$i(^ASCN.Msg.RecMap.LFO9944.RecordD) }
		if (zzc5v2'="")&&('##class(ASCN.Msg.RecMap.LFO5.Batch.Msg16).%ExistsId(zzc5v2)) { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5824,"ASCN.Msg.RecMap.LFO5.Msg16.Record.%ParentBatch("_$zu(144,1,zzc5v2)_")")) }
		set zzc10v1=$s(zzc5v2'="":zzc5v2,1:-1E14)
		try {
			set tInnerException = ""
			;
			if 'insert {
				if concurrency { lock +(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E"):$zu(115,4) set lock=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:lock=2&&($tlevel) %0CacheLock($classname(),"E")=1 if 'lock { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				if ('$Data(^ASCN.Msg.RecMap.LFO9944.RecordD(id))) {
					set insert=1
					if lock { lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E") set (lock,lockok) = 0 }
				}
			}
			if insert {
				if concurrency { lock +(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E"):$zu(115,4) set lock=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:lock=2&&($tlevel) %0CacheLock($classname(),"E")=1 if 'lock { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				set ^ASCN.Msg.RecMap.LFO9944.RecordD(id)=data
				set ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",zzc10v1,id)=zzc5v3
			}
			else {
				set zzc31v1=$listget(^ASCN.Msg.RecMap.LFO9944.RecordD(zzc5v1),103)
				if (zzc5v2'=zzc31v1) {
					kill ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",$s(zzc31v1'="":zzc31v1,1:-1E14),zzc5v1)
					set ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",zzc10v1,id)=zzc5v3
				}
				set ^ASCN.Msg.RecMap.LFO9944.RecordD(id)=data
			}
			set tStatus = 1
		}
		catch tInnerException {
		}
		if lock lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E")
		if $Isobject(tInnerException) { throw tInnerException }
	}
	catch tException {
		set tStatus = tException.AsStatus()
	}
	quit tStatus }
%SaveIndices(pStartId="",pEndId="",lockExtent=0) public {
	If lockExtent {
		Set sc=..%LockExtent(0)
		Quit:('sc) sc
	}
	s id=$order(^ASCN.Msg.RecMap.LFO9944.RecordD(pStartId),-1),tEndId=$S(pEndId'="":pEndId,1:pStartId)
BSLoop	s id=$O(^ASCN.Msg.RecMap.LFO9944.RecordD(id)) g:(id="")||(id]]tEndId) BSLoopDun
	Set bsv0N1=$Get(^ASCN.Msg.RecMap.LFO9944.RecordD(id))
	Set bsv0N2=$listget(bsv0N1,103)
	Set bsv0N3=$s(bsv0N2'="":bsv0N2,1:-1E14)
	Set ^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx",bsv0N3,id)=$listget(bsv0N1,1)
	g BSLoop
BSLoopDun
	If lockExtent { Do ..%UnlockExtent(0) }
	Quit 1
CatchError	Set $ZTrap=""
	If $ZE'="" {
		Set sc = $$Error^%apiOBJ(5002,$ZE)
	}
	If lockExtent { Do ..%UnlockExtent(0) }
	Quit sc }
%SerializeObject(serial,partial=0) public {
	try {
		If $get(%objTX2(+$this)) { Set partial = 1 } ElseIf ('partial) { Set %objTX2(+$this) = 1 }
		Set sc=..%ValidateObject(,0) Throw:('sc) ##class(%Exception.StatusException).ThrowIfInterrupt(sc)
		Set sc=..%NormalizeObject() Throw:('sc) ##class(%Exception.StatusException).ThrowIfInterrupt(sc)
		If r%%ParentBatch'="" { Set:'$data(%objTX(0,+r%%ParentBatch)) %objTX(0,+r%%ParentBatch)=$i(%objTX(1)),%objTX(1,%objTX(0,+r%%ParentBatch))=r%%ParentBatch,%objTX(1,%objTX(0,+r%%ParentBatch),1)=..%ParentBatchGetObject(1),%objTX(1,%objTX(0,+r%%ParentBatch),6)=1 Set M%%ParentBatch=1,i%%ParentBatch=$listget(%objTX(1,%objTX(0,+r%%ParentBatch),1)) }
		s:$g(%objtxSTATUS)=2 %objtxLIST(+$this)=$this
		Set id=$listget(serial),sc=..%SaveData(.id) If ('sc) { Throw ##class(%Exception.StatusException).ThrowIfInterrupt(sc) }
		Set serial=(..%Oid())
		if 'partial {
			Set %objTX2(+$this) = 0
		}
		set sc=1
	}
	catch tException {
		If 'partial { Set %objTX2(+$this) = 0 }
		set sc = tException.AsStatus()
	}
	Quit sc }
%AddToSaveSet(depth=3,refresh=0) public {
	If $data(%objTX(0,+$this)) && ('refresh) Quit 1
	Set sc=1,intOref=+$this
	If refresh,$data(%objTX(0,intOref),index) Set intPoref="" For  Set intPoref=$order(%objTX(1,index,2,intPoref)) Quit:intPoref=""  Kill %objTX(1,%objTX(0,intPoref),3,index),%objTX(1,index,2,%objTX(0,intPoref))
	Set serial=i%"%%OID",%objTX(0,intOref)=$i(%objTX(1)),%objTX(1,%objTX(1))=$this,%objTX(1,%objTX(1),1)=serial,%objTX(1,%objTX(1),6)=1 If (serial '= "") && (depth<2) { Quit 1 } Else { Set %objTX(7,%objTX(1))=$lb(intOref,1) }
	Set Poref=r%%ParentBatch If Poref'="" Set:'$data(%objTX(0,+Poref)) %objTX(6,$i(%objTX(6)))=Poref Set %objTX(8,$i(%objTX(8)))=$lb(+Poref,intOref,2)
exit	Quit sc }
%SortBegin(idxlist="",excludeunique=0)
	if $select(idxlist="":1,$listfind(idxlist,"%ParentBatchIdx"):1,1:0) If $SortBegin(^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx"))
	Quit 1
%SortEnd(idxlist="",commit=1,excludeunique=0) public {
	if $select(idxlist="":1,$listfind(idxlist,"%ParentBatchIdx"):1,1:0) If $SortEnd(^ASCN.Msg.RecMap.LFO9944.RecordI("%ParentBatchIdx"),commit)
	Quit 1 }
%UnlockExtent(shared=0,immediate=0) public {
	If 'shared {
		If 'immediate {
			Lock -^ASCN.Msg.RecMap.LFO9944.RecordD
			 Quit 1
		}
		Lock -^ASCN.Msg.RecMap.LFO9944.RecordD#"I"
		Quit 1
	}
	If 'immediate {
		Lock -^ASCN.Msg.RecMap.LFO9944.RecordD#"S"
		Quit 1
	}
	Lock -^ASCN.Msg.RecMap.LFO9944.RecordD#"SI"
	Quit 1 }
%UnlockId(id,shared=0,immediate=0) public {
	If 'shared {
		If 'immediate {
			Lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"E")
			Quit 1
		}
		Lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"IE")
		Quit 1
	}
	If 'immediate {
		Lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"SE")
		Quit 1
	}
	Lock -(^ASCN.Msg.RecMap.LFO9944.RecordD(id)#"SIE")
	Quit 1 }
%ValidateIndices(idxList="",autoCorrect=0,lockOption=1,multiProcess=1,mapList,verbose=1,errors)
	if '$listvalid(idxList) { QUIT $$Error^%apiOBJ(5591,"##class(ASCN.Msg.RecMap.LFO5.Msg16.Record).%ValidateIndices()","idxList",""""" or a $list of index names") }
	if $case(autoCorrect,1:0,0:0,:1) { QUIT $$Error^%apiOBJ(5591,"##class(ASCN.Msg.RecMap.LFO5.Msg16.Record).%ValidateIndices()","autoCorrect","'0' or '1'") }
	if $case(lockOption,2:0,1:0,0:0,:1) { QUIT $$Error^%apiOBJ(5591,"##class(ASCN.Msg.RecMap.LFO5.Msg16.Record).%ValidateIndices()","lockOption","'0', '1' or '2'") }
	if $case(multiProcess,1:0,0:0,:1) { QUIT $$Error^%apiOBJ(5591,"##class(ASCN.Msg.RecMap.LFO5.Msg16.Record).%ValidateIndices()","multiProcess","'0' or '1'") }
	if $case(verbose,1:0,0:0,:1) { QUIT $$Error^%apiOBJ(5591,"##class(ASCN.Msg.RecMap.LFO5.Msg16.Record).%ValidateIndices()","verbose","'0' or '1'") }
	new mapList QUIT $$ValidateIndices^%SYS.SECURITY("ASCN.Msg.RecMap.LFO5.Msg16.Record",idxList,autoCorrect,lockOption,multiProcess,,verbose,.errors)
%ValidateObject(unused=0,checkserial=1) public {
	set sc=1
	If '$system.CLS.GetModified() Quit sc
	If m%%Source Set iv=..%Source If iv'="" Set rc=(..%SourceIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"%Source",iv)
	If m%City Set iv=..City If iv'="" Set rc=(..CityIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"City",iv)
	If m%Field10 Set iv=..Field10 If iv'="" Set rc=(..Field10IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field10",iv)
	If m%Field100 Set iv=..Field100 If iv'="" Set rc=(..Field100IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field100",iv)
	If m%Field101 Set iv=..Field101 If iv'="" Set rc=(..Field101IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field101",iv)
	If m%Field13 Set iv=..Field13 If iv'="" Set rc=(..Field13IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field13",iv)
	If m%Field14 Set iv=..Field14 If iv'="" Set rc=(..Field14IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field14",iv)
	If m%Field18 Set iv=..Field18 If iv'="" Set rc=(..Field18IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field18",iv)
	If m%Field19 Set iv=..Field19 If iv'="" Set rc=(..Field19IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field19",iv)
	If m%Field2 Set iv=..Field2 If iv'="" Set rc=(..Field2IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field2",iv)
	If m%Field20 Set iv=..Field20 If iv'="" Set rc=(..Field20IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field20",iv)
	If m%Field21 Set iv=..Field21 If iv'="" Set rc=(..Field21IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field21",iv)
	If m%Field22 Set iv=..Field22 If iv'="" Set rc=(..Field22IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field22",iv)
	If m%Field23 Set iv=..Field23 If iv'="" Set rc=(..Field23IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field23",iv)
	If m%Field24 Set iv=..Field24 If iv'="" Set rc=(..Field24IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field24",iv)
	If m%Field25 Set iv=..Field25 If iv'="" Set rc=(..Field25IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field25",iv)
	If m%Field26 Set iv=..Field26 If iv'="" Set rc=(..Field26IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field26",iv)
	If m%Field27 Set iv=..Field27 If iv'="" Set rc=(..Field27IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field27",iv)
	If m%Field28 Set iv=..Field28 If iv'="" Set rc=(..Field28IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field28",iv)
	If m%Field29 Set iv=..Field29 If iv'="" Set rc=(..Field29IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field29",iv)
	If m%Field3 Set iv=..Field3 If iv'="" Set rc=(..Field3IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field3",iv)
	If m%Field30 Set iv=..Field30 If iv'="" Set rc=(..Field30IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field30",iv)
	If m%Field31 Set iv=..Field31 If iv'="" Set rc=(..Field31IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field31",iv)
	If m%Field32 Set iv=..Field32 If iv'="" Set rc=(..Field32IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field32",iv)
	If m%Field33 Set iv=..Field33 If iv'="" Set rc=(..Field33IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field33",iv)
	If m%Field34 Set iv=..Field34 If iv'="" Set rc=(..Field34IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field34",iv)
	If m%Field35 Set iv=..Field35 If iv'="" Set rc=(..Field35IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field35",iv)
	If m%Field36 Set iv=..Field36 If iv'="" Set rc=(..Field36IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field36",iv)
	If m%Field37 Set iv=..Field37 If iv'="" Set rc=(..Field37IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field37",iv)
	If m%Field38 Set iv=..Field38 If iv'="" Set rc=(..Field38IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field38",iv)
	If m%Field39 Set iv=..Field39 If iv'="" Set rc=(..Field39IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field39",iv)
	If m%Field4 Set iv=..Field4 If iv'="" Set rc=(..Field4IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field4",iv)
	If m%Field40 Set iv=..Field40 If iv'="" Set rc=(..Field40IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field40",iv)
	If m%Field41 Set iv=..Field41 If iv'="" Set rc=(..Field41IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field41",iv)
	If m%Field42 Set iv=..Field42 If iv'="" Set rc=(..Field42IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field42",iv)
	If m%Field43 Set iv=..Field43 If iv'="" Set rc=(..Field43IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field43",iv)
	If m%Field44 Set iv=..Field44 If iv'="" Set rc=(..Field44IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field44",iv)
	If m%Field45 Set iv=..Field45 If iv'="" Set rc=(..Field45IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field45",iv)
	If m%Field46 Set iv=..Field46 If iv'="" Set rc=(..Field46IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field46",iv)
	If m%Field47 Set iv=..Field47 If iv'="" Set rc=(..Field47IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field47",iv)
	If m%Field48 Set iv=..Field48 If iv'="" Set rc=(..Field48IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field48",iv)
	If m%Field49 Set iv=..Field49 If iv'="" Set rc=(..Field49IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field49",iv)
	If m%Field50 Set iv=..Field50 If iv'="" Set rc=(..Field50IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field50",iv)
	If m%Field51 Set iv=..Field51 If iv'="" Set rc=(..Field51IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field51",iv)
	If m%Field52 Set iv=..Field52 If iv'="" Set rc=(..Field52IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field52",iv)
	If m%Field53 Set iv=..Field53 If iv'="" Set rc=(..Field53IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field53",iv)
	If m%Field54 Set iv=..Field54 If iv'="" Set rc=(..Field54IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field54",iv)
	If m%Field55 Set iv=..Field55 If iv'="" Set rc=(..Field55IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field55",iv)
	If m%Field56 Set iv=..Field56 If iv'="" Set rc=(..Field56IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field56",iv)
	If m%Field57 Set iv=..Field57 If iv'="" Set rc=(..Field57IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field57",iv)
	If m%Field58 Set iv=..Field58 If iv'="" Set rc=(..Field58IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field58",iv)
	If m%Field59 Set iv=..Field59 If iv'="" Set rc=(..Field59IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field59",iv)
	If m%Field60 Set iv=..Field60 If iv'="" Set rc=(..Field60IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field60",iv)
	If m%Field61 Set iv=..Field61 If iv'="" Set rc=(..Field61IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field61",iv)
	If m%Field62 Set iv=..Field62 If iv'="" Set rc=(..Field62IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field62",iv)
	If m%Field63 Set iv=..Field63 If iv'="" Set rc=(..Field63IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field63",iv)
	If m%Field64 Set iv=..Field64 If iv'="" Set rc=(..Field64IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field64",iv)
	If m%Field65 Set iv=..Field65 If iv'="" Set rc=(..Field65IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field65",iv)
	If m%Field66 Set iv=..Field66 If iv'="" Set rc=(..Field66IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field66",iv)
	If m%Field67 Set iv=..Field67 If iv'="" Set rc=(..Field67IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field67",iv)
	If m%Field68 Set iv=..Field68 If iv'="" Set rc=(..Field68IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field68",iv)
	If m%Field69 Set iv=..Field69 If iv'="" Set rc=(..Field69IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field69",iv)
	If m%Field70 Set iv=..Field70 If iv'="" Set rc=(..Field70IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field70",iv)
	If m%Field71 Set iv=..Field71 If iv'="" Set rc=(..Field71IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field71",iv)
	If m%Field72 Set iv=..Field72 If iv'="" Set rc=(..Field72IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field72",iv)
	If m%Field73 Set iv=..Field73 If iv'="" Set rc=(..Field73IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field73",iv)
	If m%Field74 Set iv=..Field74 If iv'="" Set rc=(..Field74IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field74",iv)
	If m%Field75 Set iv=..Field75 If iv'="" Set rc=(..Field75IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field75",iv)
	If m%Field76 Set iv=..Field76 If iv'="" Set rc=(..Field76IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field76",iv)
	If m%Field77 Set iv=..Field77 If iv'="" Set rc=(..Field77IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field77",iv)
	If m%Field78 Set iv=..Field78 If iv'="" Set rc=(..Field78IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field78",iv)
	If m%Field79 Set iv=..Field79 If iv'="" Set rc=(..Field79IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field79",iv)
	If m%Field80 Set iv=..Field80 If iv'="" Set rc=(..Field80IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field80",iv)
	If m%Field81 Set iv=..Field81 If iv'="" Set rc=(..Field81IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field81",iv)
	If m%Field82 Set iv=..Field82 If iv'="" Set rc=(..Field82IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field82",iv)
	If m%Field83 Set iv=..Field83 If iv'="" Set rc=(..Field83IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field83",iv)
	If m%Field84 Set iv=..Field84 If iv'="" Set rc=(..Field84IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field84",iv)
	If m%Field85 Set iv=..Field85 If iv'="" Set rc=(..Field85IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field85",iv)
	If m%Field86 Set iv=..Field86 If iv'="" Set rc=(..Field86IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field86",iv)
	If m%Field87 Set iv=..Field87 If iv'="" Set rc=(..Field87IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field87",iv)
	If m%Field88 Set iv=..Field88 If iv'="" Set rc=(..Field88IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field88",iv)
	If m%Field89 Set iv=..Field89 If iv'="" Set rc=(..Field89IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field89",iv)
	If m%Field9 Set iv=..Field9 If iv'="" Set rc=(..Field9IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field9",iv)
	If m%Field90 Set iv=..Field90 If iv'="" Set rc=(..Field90IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field90",iv)
	If m%Field91 Set iv=..Field91 If iv'="" Set rc=(..Field91IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field91",iv)
	If m%Field92 Set iv=..Field92 If iv'="" Set rc=(..Field92IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field92",iv)
	If m%Field93 Set iv=..Field93 If iv'="" Set rc=(..Field93IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field93",iv)
	If m%Field94 Set iv=..Field94 If iv'="" Set rc=(..Field94IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field94",iv)
	If m%Field95 Set iv=..Field95 If iv'="" Set rc=(..Field95IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field95",iv)
	If m%Field96 Set iv=..Field96 If iv'="" Set rc=(..Field96IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field96",iv)
	If m%Field97 Set iv=..Field97 If iv'="" Set rc=(..Field97IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field97",iv)
	If m%Field98 Set iv=..Field98 If iv'="" Set rc=(..Field98IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field98",iv)
	If m%Field99 Set iv=..Field99 If iv'="" Set rc=(..Field99IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Field99",iv)
	If m%FirstName Set iv=..FirstName If iv'="" Set rc=(..FirstNameIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"FirstName",iv)
	If m%LastName Set iv=..LastName If iv'="" Set rc=(..LastNameIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"LastName",iv)
	If m%LeadingField Set iv=..LeadingField If iv'="" Set rc=(..LeadingFieldIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"LeadingField",iv)
	If m%MiddleInitial Set iv=..MiddleInitial If iv'="" Set rc=(..MiddleInitialIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"MiddleInitial",iv)
	If m%Ministry Set iv=..Ministry If iv'="" Set rc=(..MinistryIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Ministry",iv)
	If m%MsgID Set iv=..MsgID If iv'="" Set rc=(..MsgIDIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"MsgID",iv)
	If m%State Set iv=..State If iv'="" Set rc=(..StateIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"State",iv)
	If m%StreetAddress1 Set iv=..StreetAddress1 If iv'="" Set rc=(..StreetAddress1IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"StreetAddress1",iv)
	If m%StreetAddress2 Set iv=..StreetAddress2 If iv'="" Set rc=(..StreetAddress2IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"StreetAddress2",iv)
	If m%Zipcode Set iv=..Zipcode If iv'="" Set rc=(..ZipcodeIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Zipcode",iv)
	Quit sc }
zXMLDTD(top,format,input,dtdlist)
 Quit ##class(%XML.Implementation).XMLDTD("ASCN.Msg.RecMap.LFO5.Msg16.Record",.top,.format,.input,.dtdlist)
zXMLExportInternal()
 New tag,summary,attrsVal,savelocal,aval,k,tmpPrefix,prefixDepth,hasNoContent,hasElement,topAttrs,beginprefix,endprefix,savexsiAttrs,initialxsiAttrs,initlist,initialCR,inlineFlag,popAtEnd,saveTopPrefix,saveTypesPrefix,saveAttrsPrefix,saveUsePrefix,initlist
 Set $ztrap="XMLExportInternalTrap",popAtEnd=0
 Set summary=summaryArg,initialxsiAttrs=xsiAttrs
 If group Quit $$Error^%apiOBJ(6386,"ASCN.Msg.RecMap.LFO5.Msg16.Record")
 If indentFlag Set initialCR=($extract(currentIndent,1,2)=$c(13,10))
 Set id=createId
 Set temp=""
 If id'="" {
   If $piece($get(idlist(+$this)),",",2)'="" Quit 1
   Set idlist(+$this)=id_",1"
 }
 If encoded Set initlist=$lb($get(oreflist),inlineFlagArg),oreflist=1,inlineFlag=inlineFlagArg
 If 'nocycle,('encoded||inlineFlag) {
   If $data(oreflist($this)) Quit $$Error^%apiOBJ(6296,"ASCN.Msg.RecMap.LFO5.Msg16.Record")
   Set oreflist($this)=""
 }
 Set tag=$get(topArg)
 Set tmpi=(($get(typeAttr)'="")&&(typeAttr'="ASCN.Msg.RecMap.LFO5.Msg16.Record"))
 If $IsObject(namespaces) {
     Set popAtEnd=1,saveTopPrefix=topPrefix,saveTypesPrefix=typesPrefix,saveAttrsPrefix=attrsPrefix,saveUsePrefix=usePrefix
     Set sc=namespaces.PushNodeForExport("",$get(local,0),(encoded||tmpi),"",,.topPrefix,.topAttrs,.typesPrefix,.attrsPrefix,.usePrefix)
     If 'sc Quit sc
   Set beginprefix=$select(namespaces.ElementQualified&&usePrefix:typesPrefix,1:"")
   If topAttrs'="" Set temp=temp_" "_topAttrs
   If tag="" Set tag="Record"
   Set xsitype=namespaces.OutputTypeAttribute
 } Else {
   Set saveTopPrefix=topPrefix,saveTypesPrefix=typesPrefix,saveAttrsPrefix=attrsPrefix,saveUsePrefix=usePrefix
   Set typesPrefix=namespaces If (typesPrefix'=""),($extract(typesPrefix,*)'=":") Set typesPrefix=typesPrefix_":"
   If 'encoded Set namespaces=""
   Set (topPrefix,attrsPrefix,topAttrs,beginprefix)=""
   If tag="" Set tag=typesPrefix_"Record"
   Set xsitype=0
 }
 Set local=+$get(local),savelocal=local
 Set endprefix="</"_beginprefix,beginprefix="<"_beginprefix
 If tmpi Set temp=temp_" "_xsiPrefix_"type="""_typesPrefix_"Record"""_xsiAttrs,xsiAttrs=""
   If id'="" Set temp=" "_$select($get(soap12):soapPrefix_"id",1:"id")_"=""id"_id_""""_temp
 If encoded Set temp=temp_xsiAttrs,xsiAttrs=""
 If indentFlag Set %xmlmsg=currentIndent if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg } Set currentIndent=$select(initialCR:"",1:$c(13,10))_currentIndent_indentChars
 If tag[":" Set topPrefix=$piece(tag,":"),tag=$piece(tag,":",2)  If topPrefix'="" Set topPrefix=topPrefix_":"
 Set %xmlmsg="<"_topPrefix_tag_temp if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 Set attrsVal=attrsArg,attrsArg="" Set %xmlmsg=attrsVal if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 Set %xmlmsg=">" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 Set val=..LeadingField
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"LeadingField"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"LeadingField>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..MsgID
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"MsgID"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"MsgID>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field2
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field2"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field2>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field3
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field3"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field3>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field4
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field4"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field4>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Ministry
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Ministry"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Ministry>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..FirstName
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"FirstName"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"FirstName>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..MiddleInitial
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"MiddleInitial"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"MiddleInitial>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..LastName
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"LastName"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"LastName>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field9
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field9"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field9>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field10
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field10"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field10>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..StreetAddress1
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"StreetAddress1"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"StreetAddress1>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..StreetAddress2
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"StreetAddress2"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"StreetAddress2>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field13
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field13"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field13>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field14
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field14"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field14>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..City
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"City"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"City>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..State
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"State"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"State>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Zipcode
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Zipcode"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Zipcode>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field18
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field18"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field18>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field19
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field19"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field19>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field20
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field20"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field20>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field21
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field21"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field21>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field22
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field22"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field22>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field23
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field23"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field23>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field24
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field24"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field24>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field25
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field25"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field25>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field26
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field26"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field26>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field27
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field27"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field27>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field28
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field28"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field28>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field29
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field29"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field29>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field30
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field30"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field30>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field31
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field31"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field31>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field33
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field33"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field33>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field32
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field32"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field32>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field34
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field34"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field34>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field35
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field35"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field35>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field36
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field36"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field36>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field37
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field37"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field37>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field38
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field38"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field38>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field39
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field39"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field39>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field40
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field40"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field40>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field41
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field41"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field41>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field42
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field42"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field42>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field43
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field43"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field43>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field44
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field44"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field44>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field45
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field45"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field45>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field46
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field46"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field46>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field47
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field47"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field47>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field48
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field48"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field48>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field49
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field49"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field49>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field50
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field50"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field50>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field51
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field51"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field51>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field52
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field52"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field52>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field53
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field53"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field53>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field54
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field54"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field54>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field55
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field55"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field55>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field56
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field56"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field56>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field57
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field57"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field57>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field58
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field58"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field58>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field59
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field59"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field59>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field60
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field60"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field60>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field61
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field61"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field61>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field62
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field62"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field62>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field63
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field63"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field63>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field64
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field64"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field64>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field65
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field65"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field65>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field66
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field66"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field66>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field67
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field67"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field67>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field68
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field68"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field68>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field69
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field69"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field69>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field70
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field70"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field70>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field71
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field71"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field71>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field72
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field72"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field72>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field73
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field73"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field73>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field74
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field74"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field74>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field75
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field75"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field75>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field76
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field76"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field76>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field77
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field77"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field77>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field78
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field78"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field78>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field79
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field79"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field79>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field80
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field80"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field80>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field81
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field81"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field81>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field82
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field82"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field82>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field83
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field83"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field83>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field84
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field84"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field84>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field85
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field85"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field85>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field86
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field86"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field86>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field87
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field87"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field87>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field88
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field88"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field88>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field89
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field89"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field89>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field90
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field90"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field90>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field91
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field91"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field91>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field92
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field92"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field92>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field93
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field93"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field93>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field94
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field94"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field94>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field95
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field95"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field95>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field96
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field96"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field96>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field97
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field97"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field97>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field98
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field98"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field98>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field99
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field99"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field99>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field100
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field100"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field100>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Field101
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Field101"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Field101>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 If indentFlag { Set currentIndent=$extract(currentIndent,1,*-$length(indentChars)) Set %xmlmsg=currentIndent if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }}
 Set %xmlmsg="</"_topPrefix_tag_">"
 if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg } If indentFlag,'initialCR if $data(%xmlBlock) { Set %xmlmsg="" Do xeWriteLine^%occXMLInternal } else { write ! } Set $extract(currentIndent,1,2)=""
 If '$IsObject(namespaces) || (popAtEnd=1) Set topPrefix=saveTopPrefix,typesPrefix=saveTypesPrefix,attrsPrefix=saveAttrsPrefix,usePrefix=saveUsePrefix
 If popAtEnd Do namespaces.PopNode()
 If encoded Set oreflist=$list(initlist),inlineFlag=$list(initlist,2)
 If 'encoded||inlineFlag {
   If 'nocycle Kill oreflist($this)
 }
 Quit sc
XMLExportInternalTrap Set $ztrap=""
 If $data(val) , $IsObject(val) , ($piece($ze,">",1)="<METHOD DOES NOT EXIST") {
   Set sc=$$Error^%apiOBJ(6249,$classname(val))
 } Else {
   Set sc=$$Error^%apiOBJ(5002,$ze)
 }
XMLExportExit 
 If '$IsObject(namespaces) || (popAtEnd=1) Set topPrefix=saveTopPrefix,typesPrefix=saveTypesPrefix,attrsPrefix=saveAttrsPrefix,usePrefix=saveUsePrefix
 If popAtEnd Do namespaces.PopNode()
 Quit sc
zXMLGetSchemaImports(imports,classes)
 Quit ##class(%XML.Implementation).XMLGetSchemaImports("ASCN.Msg.RecMap.LFO5.Msg16.Record",.imports,.classes)
zXMLImportAttributes()
 ;
 Quit 1
XMLImportAttrErr Quit $$Error^%apiOBJ(6260,ref,$get(@(tree)@("d",$zlascii(attributeList(ref),13))),@(tree)@("d",$zlascii(nodelist,9))_$$XMLImportAttrLocation(nodelist))
XMLImportFixedAttrErr Quit $$Error^%apiOBJ(6320,ref,$get(@(tree)@("d",$zlascii(attributeList(ref),13))),@(tree)@("d",$zlascii(nodelist,9))_$$XMLImportAttrLocation(nodelist))
XMLImportAttrLocation(nodelist) new msg,loc
 Set loc=$lb($zlascii(nodelist,21),$zlascii(nodelist,25))
 If loc="" Quit ""
 Set msg=$get(^%qMsg("%ObjectErrors",$s(""'="":$zcvt("","L"),1:$s($mvv(58)="":"en",1:$mvv(58))),"XMLImportLocation")," (%1,%2)")
 Quit $$FormatText^%occMessages(msg,$listget(loc,1),$listget(loc,2))
zXMLImportInternal()
 New child,childlist,node,nodelist,inner,innerlist,data,encodedArray,key,nsIndex,savechild,savechildlist,saveinner,saveinnnerlist,exists
 Set $ztrap="XMLImportInternalTrap"
 Set encoded=$case($piece(fmt,",",1),"":0,"literal":0,"encoded":1,"encoded12":1,:"")
 If encoded="" Quit $$Error^%apiOBJ(6231,fmt)
 Set nsIndex=$select($get(namespace)="":"",1:$get(@(tree)@("N",namespace)))
 Set node=nodeArg,nodelist=nodeArgChildlist
 If tag'=@(tree)@("d",$zlascii(nodelist,9)) Set inner=node Goto XMLImportMalformed
 If bareProjection Quit $$Error^%apiOBJ(6386,"ASCN.Msg.RecMap.LFO5.Msg16.Record")
 If encoded {
   Do XMLImportAttrnode() If $data(attributeList("id")) Set idlist(node)=$this
 }
 If $zboolean(+($zlascii(nodelist,13)#16),+1,1) Quit 1
 Set sc=$$XMLImportElements()
XMLImportExit Quit sc
XMLImportElements() ;
XMLLOOP1 Set descriptor=$zlascii(nodelist,$zwascii(nodelist,17)) Set child=($zlascii(@(tree)@($piece(node,",",1)),$piece(node,",",2))\16)_","_$zwascii(nodelist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set child=##class(%XML.ImportHandler).NextChild(tree,node,.nodelist,child,.descriptor) } Else { Set child="" }} For { Quit:child=""  Quit:(descriptor#16)'=2  Set descriptor=$piece(child,",",2)+4 Set child=$piece(child,",",1)_","_descriptor Set descriptor=$zlascii(nodelist,descriptor) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set child=##class(%XML.ImportHandler).NextChild(tree,node,.nodelist,child,.descriptor) } Else {Set child="" }} } Goto XMLLOOP2
XMLLOOP For  { Set descriptor=$piece(child,",",2)+4 Set child=$piece(child,",",1)_","_descriptor Set descriptor=$zlascii(nodelist,descriptor) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set child=##class(%XML.ImportHandler).NextChild(tree,node,.nodelist,child,.descriptor) } Else {Set child="" }} Quit:child=""  Quit:(descriptor#16)'=2  }
XMLLOOP2 If child="" Quit sc
 If (descriptor#16)'=0 Set inner=child Goto XMLImportMalformedNoTag
 Set childlist=@(tree)@((descriptor\16))
 Set tag=@(tree)@("d",$zlascii(childlist,9))
 If tag="LeadingField" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..LeadingField=data
   Goto XMLLOOP } }
 If tag="MsgID" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..MsgID=data
   Goto XMLLOOP } }
 If tag="Field2" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field2=data
   Goto XMLLOOP } }
 If tag="Field3" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field3=data
   Goto XMLLOOP } }
 If tag="Field4" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field4=data
   Goto XMLLOOP } }
 If tag="Ministry" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Ministry=data
   Goto XMLLOOP } }
 If tag="FirstName" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..FirstName=data
   Goto XMLLOOP } }
 If tag="MiddleInitial" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..MiddleInitial=data
   Goto XMLLOOP } }
 If tag="LastName" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..LastName=data
   Goto XMLLOOP } }
 If tag="Field9" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field9=data
   Goto XMLLOOP } }
 If tag="Field10" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field10=data
   Goto XMLLOOP } }
 If tag="StreetAddress1" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..StreetAddress1=data
   Goto XMLLOOP } }
 If tag="StreetAddress2" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..StreetAddress2=data
   Goto XMLLOOP } }
 If tag="Field13" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field13=data
   Goto XMLLOOP } }
 If tag="Field14" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field14=data
   Goto XMLLOOP } }
 If tag="City" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..City=data
   Goto XMLLOOP } }
 If tag="State" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..State=data
   Goto XMLLOOP } }
 If tag="Zipcode" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Zipcode=data
   Goto XMLLOOP } }
 If tag="Field18" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field18=data
   Goto XMLLOOP } }
 If tag="Field19" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field19=data
   Goto XMLLOOP } }
 If tag="Field20" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field20=data
   Goto XMLLOOP } }
 If tag="Field21" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field21=data
   Goto XMLLOOP } }
 If tag="Field22" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field22=data
   Goto XMLLOOP } }
 If tag="Field23" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field23=data
   Goto XMLLOOP } }
 If tag="Field24" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field24=data
   Goto XMLLOOP } }
 If tag="Field25" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field25=data
   Goto XMLLOOP } }
 If tag="Field26" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field26=data
   Goto XMLLOOP } }
 If tag="Field27" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field27=data
   Goto XMLLOOP } }
 If tag="Field28" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field28=data
   Goto XMLLOOP } }
 If tag="Field29" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field29=data
   Goto XMLLOOP } }
 If tag="Field30" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field30=data
   Goto XMLLOOP } }
 If tag="Field31" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field31=data
   Goto XMLLOOP } }
 If tag="Field33" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field33=data
   Goto XMLLOOP } }
 If tag="Field32" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field32=data
   Goto XMLLOOP } }
 If tag="Field34" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field34=data
   Goto XMLLOOP } }
 If tag="Field35" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field35=data
   Goto XMLLOOP } }
 If tag="Field36" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field36=data
   Goto XMLLOOP } }
 If tag="Field37" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field37=data
   Goto XMLLOOP } }
 If tag="Field38" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field38=data
   Goto XMLLOOP } }
 If tag="Field39" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field39=data
   Goto XMLLOOP } }
 If tag="Field40" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field40=data
   Goto XMLLOOP } }
 If tag="Field41" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field41=data
   Goto XMLLOOP } }
 If tag="Field42" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field42=data
   Goto XMLLOOP } }
 If tag="Field43" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field43=data
   Goto XMLLOOP } }
 If tag="Field44" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field44=data
   Goto XMLLOOP } }
 If tag="Field45" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field45=data
   Goto XMLLOOP } }
 If tag="Field46" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field46=data
   Goto XMLLOOP } }
 If tag="Field47" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field47=data
   Goto XMLLOOP } }
 If tag="Field48" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field48=data
   Goto XMLLOOP } }
 If tag="Field49" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field49=data
   Goto XMLLOOP } }
 If tag="Field50" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field50=data
   Goto XMLLOOP } }
 If tag="Field51" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field51=data
   Goto XMLLOOP } }
 If tag="Field52" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field52=data
   Goto XMLLOOP } }
 If tag="Field53" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field53=data
   Goto XMLLOOP } }
 If tag="Field54" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field54=data
   Goto XMLLOOP } }
 If tag="Field55" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field55=data
   Goto XMLLOOP } }
 If tag="Field56" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field56=data
   Goto XMLLOOP } }
 If tag="Field57" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field57=data
   Goto XMLLOOP } }
 If tag="Field58" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field58=data
   Goto XMLLOOP } }
 If tag="Field59" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field59=data
   Goto XMLLOOP } }
 If tag="Field60" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field60=data
   Goto XMLLOOP } }
 If tag="Field61" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field61=data
   Goto XMLLOOP } }
 If tag="Field62" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field62=data
   Goto XMLLOOP } }
 If tag="Field63" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field63=data
   Goto XMLLOOP } }
 If tag="Field64" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field64=data
   Goto XMLLOOP } }
 If tag="Field65" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field65=data
   Goto XMLLOOP } }
 If tag="Field66" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field66=data
   Goto XMLLOOP } }
 If tag="Field67" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field67=data
   Goto XMLLOOP } }
 If tag="Field68" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field68=data
   Goto XMLLOOP } }
 If tag="Field69" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field69=data
   Goto XMLLOOP } }
 If tag="Field70" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field70=data
   Goto XMLLOOP } }
 If tag="Field71" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field71=data
   Goto XMLLOOP } }
 If tag="Field72" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field72=data
   Goto XMLLOOP } }
 If tag="Field73" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field73=data
   Goto XMLLOOP } }
 If tag="Field74" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field74=data
   Goto XMLLOOP } }
 If tag="Field75" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field75=data
   Goto XMLLOOP } }
 If tag="Field76" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field76=data
   Goto XMLLOOP } }
 If tag="Field77" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field77=data
   Goto XMLLOOP } }
 If tag="Field78" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field78=data
   Goto XMLLOOP } }
 If tag="Field79" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field79=data
   Goto XMLLOOP } }
 If tag="Field80" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field80=data
   Goto XMLLOOP } }
 If tag="Field81" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field81=data
   Goto XMLLOOP } }
 If tag="Field82" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field82=data
   Goto XMLLOOP } }
 If tag="Field83" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field83=data
   Goto XMLLOOP } }
 If tag="Field84" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field84=data
   Goto XMLLOOP } }
 If tag="Field85" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field85=data
   Goto XMLLOOP } }
 If tag="Field86" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field86=data
   Goto XMLLOOP } }
 If tag="Field87" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field87=data
   Goto XMLLOOP } }
 If tag="Field88" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field88=data
   Goto XMLLOOP } }
 If tag="Field89" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field89=data
   Goto XMLLOOP } }
 If tag="Field90" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field90=data
   Goto XMLLOOP } }
 If tag="Field91" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field91=data
   Goto XMLLOOP } }
 If tag="Field92" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field92=data
   Goto XMLLOOP } }
 If tag="Field93" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field93=data
   Goto XMLLOOP } }
 If tag="Field94" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field94=data
   Goto XMLLOOP } }
 If tag="Field95" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field95=data
   Goto XMLLOOP } }
 If tag="Field96" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field96=data
   Goto XMLLOOP } }
 If tag="Field97" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field97=data
   Goto XMLLOOP } }
 If tag="Field98" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field98=data
   Goto XMLLOOP } }
 If tag="Field99" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field99=data
   Goto XMLLOOP } }
 If tag="Field100" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field100=data
   Goto XMLLOOP } }
 If tag="Field101" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>1024):1,1:$$Error^%apiOBJ(7201,data,1024))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Field101=data
   Goto XMLLOOP } }
 Goto XMLImportBadTagchild
XMLImportBadTagchild Set inner=child
XMLImportBadTag Quit $$Error^%apiOBJ(6237,tag_$$XMLImportLocation(inner))
XMLImportBadTypenode Set inner=node Goto XMLImportBadType
XMLImportBadTypechild Set inner=child
XMLImportBadType Quit $$Error^%apiOBJ(6277,class,$select(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))#16)=0:@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9)),1:@(tree)@("d",($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)))_$$XMLImportLocation(inner))
XMLImportErrnode Set inner=node Goto XMLImportErr
XMLImportErrchild Set inner=child
XMLImportErr
 Set data=##class(%XML.ImportHandler).GetNextChild(tree,inner,"")
 If (data'="") {
   If ($zlascii(@(tree)@($piece(data,",",1)),$piece(data,",",2))#16)'=0 {
     Quit $$Error^%apiOBJ(6232,@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9))_$$XMLImportLocation(inner),$extract(@(tree)@("d",($zlascii(@(tree)@($piece(data,",",1)),$piece(data,",",2))\16)),1,200))
   } Else {
     Quit $$Error^%apiOBJ(6253,@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9))_$$XMLImportLocation(inner),@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(data,",",1)),$piece(data,",",2))\16)),9)))
   }
 } Else {
   Quit $$Error^%apiOBJ(6252,@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9))_$$XMLImportLocation(inner))
 }
XMLImportIdErr Set sc=$$Error^%apiOBJ(6236,id,@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9))_$$XMLImportLocation(inner)) Quit sc
XMLImportMalformed Set sc=$$Error^%apiOBJ(6233,$select(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))#16)=0:@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9)),1:@(tree)@("d",($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)))_$$XMLImportLocation(inner)) Quit sc
XMLImportMalformedNoTag Set node=$select($piece(inner,",",1)<=0:0,1:$zlascii(@(tree)@($piece(inner,",",1)),1)_","_$zlascii(@(tree)@($piece(inner,",",1)),5)),sc=$$Error^%apiOBJ(6254,$select(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))#16)=0:@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9)),1:@(tree)@("d",($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16))),$select(($zlascii(@(tree)@($piece(node,",",1)),$piece(node,",",2))#16)=0:@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(node,",",1)),$piece(node,",",2))\16)),9)),1:@(tree)@("d",($zlascii(@(tree)@($piece(node,",",1)),$piece(node,",",2))\16)))_$$XMLImportLocation(node)) Quit sc
XMLImportNSchild Set inner=child
XMLImportNS Set sc=$$Error^%apiOBJ(6235,@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9))_$$XMLImportLocation(inner)) Quit sc
XMLImportLocation(node) new msg,loc
 Set loc=$lb($zlascii(@(tree)@(($zlascii(@(tree)@($piece(node,",",1)),$piece(node,",",2))\16)),21),$zlascii(@(tree)@(($zlascii(@(tree)@($piece(node,",",1)),$piece(node,",",2))\16)),25))
 If loc="" Quit ""
 Set msg=$get(^%qMsg("%ObjectErrors",$s(""'="":$zcvt("","L"),1:$s($mvv(58)="":"en",1:$mvv(58))),"XMLImportLocation")," (%1,%2)")
 Quit $$FormatText^%occMessages(msg,$listget(loc,1),$listget(loc,2))
XMLImportInternalTrap Set $ztrap=""
 Set loc=$select($ZE["<CLASS DOES NOT EXIST>":" for element "_tag_$$XMLImportLocation(child),1:"")
 Quit $$Error^%apiOBJ(5002,$ZE_loc)
XMLImportIdChild() Set inner=child,innerlist=childlist,tmp=$$XMLImportId(),child=inner,childlist=innerlist Quit tmp
XMLImportId() ;
 Do XMLImportAttrinner()
 If $data(attributeList("href")) {
   Set id=$case($data(@(tree)@("d",$zlascii(attributeList("href"),13))),1:@(tree)@("d",$zlascii(attributeList("href"),13)),0:"",:##class(%XML.ImportHandler).GetAttribute(tree,attributeList("href")))
   If $extract(id)="#" {
     Set tmp=$select($get(@(tree)@("i",$extract(id,2,*)))="":"",1:$piece(@(tree)@("i",$extract(id,2,*)),",",1)_","_$piece(@(tree)@("i",$extract(id,2,*)),",",2)) If tmp="" Goto XMLImportIdErr
     Set inner=tmp
     Set descriptor=$zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2)) Set innerlist=@(tree)@((descriptor\16))
   }
 } ElseIf $data(attributeList("ref")),($get(@(tree)@("n",$zwascii(attributeList("ref"),9)))="http://www.w3.org/2003/05/soap-encoding") {
   Set id=$case($data(@(tree)@("d",$zlascii(attributeList("ref"),13))),1:@(tree)@("d",$zlascii(attributeList("ref"),13)),0:"",:##class(%XML.ImportHandler).GetAttribute(tree,attributeList("ref")))
   Set tmp=$select($get(@(tree)@("i",id))="":"",1:$piece(@(tree)@("i",id),",",1)_","_$piece(@(tree)@("i",id),",",2)) If tmp="" Goto XMLImportIdErr
   Set inner=tmp
   Set descriptor=$zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2)) Set innerlist=@(tree)@((descriptor\16))
 } ElseIf '$data(attributeList("id")) {
   Quit 0
 }
 Quit $data(idlist(inner))
XMLImportAttrnode()
 If $get(attributeList)=node Quit
 Kill attributeList
 Set attributeList=node
 Set offset=29 While offset<$zwascii(nodelist,17) { Set attribute=$extract(nodelist,offset,offset+15)
    Set attrname=@(tree)@("d",$zlascii(attribute,1))
    Set attributeList(attrname)=attribute
 Set offset=offset+16 }
 Quit
XMLImportAttrchild()
 If $get(attributeList)=child Quit
 Kill attributeList
 Set attributeList=child
 Set offset=29 While offset<$zwascii(childlist,17) { Set attribute=$extract(childlist,offset,offset+15)
    Set attrname=@(tree)@("d",$zlascii(attribute,1))
    Set attributeList(attrname)=attribute
 Set offset=offset+16 }
 Quit
XMLImportAttrinner()
 If $get(attributeList)=inner Quit
 Kill attributeList
 Set attributeList=inner
 Set offset=29 While offset<$zwascii(innerlist,17) { Set attribute=$extract(innerlist,offset,offset+15)
    Set attrname=@(tree)@("d",$zlascii(attribute,1))
    Set attributeList(attrname)=attribute
 Set offset=offset+16 }
 Quit
zXMLIsObjectEmpty(ignoreNull)
 If ..LeadingField'="" Quit 0
 If ..MsgID'="" Quit 0
 If ..Field2'="" Quit 0
 If ..Field3'="" Quit 0
 If ..Field4'="" Quit 0
 If ..Ministry'="" Quit 0
 If ..FirstName'="" Quit 0
 If ..MiddleInitial'="" Quit 0
 If ..LastName'="" Quit 0
 If ..Field9'="" Quit 0
 If ..Field10'="" Quit 0
 If ..StreetAddress1'="" Quit 0
 If ..StreetAddress2'="" Quit 0
 If ..Field13'="" Quit 0
 If ..Field14'="" Quit 0
 If ..City'="" Quit 0
 If ..State'="" Quit 0
 If ..Zipcode'="" Quit 0
 If ..Field18'="" Quit 0
 If ..Field19'="" Quit 0
 If ..Field20'="" Quit 0
 If ..Field21'="" Quit 0
 If ..Field22'="" Quit 0
 If ..Field23'="" Quit 0
 If ..Field24'="" Quit 0
 If ..Field25'="" Quit 0
 If ..Field26'="" Quit 0
 If ..Field27'="" Quit 0
 If ..Field28'="" Quit 0
 If ..Field29'="" Quit 0
 If ..Field30'="" Quit 0
 If ..Field31'="" Quit 0
 If ..Field33'="" Quit 0
 If ..Field32'="" Quit 0
 If ..Field34'="" Quit 0
 If ..Field35'="" Quit 0
 If ..Field36'="" Quit 0
 If ..Field37'="" Quit 0
 If ..Field38'="" Quit 0
 If ..Field39'="" Quit 0
 If ..Field40'="" Quit 0
 If ..Field41'="" Quit 0
 If ..Field42'="" Quit 0
 If ..Field43'="" Quit 0
 If ..Field44'="" Quit 0
 If ..Field45'="" Quit 0
 If ..Field46'="" Quit 0
 If ..Field47'="" Quit 0
 If ..Field48'="" Quit 0
 If ..Field49'="" Quit 0
 If ..Field50'="" Quit 0
 If ..Field51'="" Quit 0
 If ..Field52'="" Quit 0
 If ..Field53'="" Quit 0
 If ..Field54'="" Quit 0
 If ..Field55'="" Quit 0
 If ..Field56'="" Quit 0
 If ..Field57'="" Quit 0
 If ..Field58'="" Quit 0
 If ..Field59'="" Quit 0
 If ..Field60'="" Quit 0
 If ..Field61'="" Quit 0
 If ..Field62'="" Quit 0
 If ..Field63'="" Quit 0
 If ..Field64'="" Quit 0
 If ..Field65'="" Quit 0
 If ..Field66'="" Quit 0
 If ..Field67'="" Quit 0
 If ..Field68'="" Quit 0
 If ..Field69'="" Quit 0
 If ..Field70'="" Quit 0
 If ..Field71'="" Quit 0
 If ..Field72'="" Quit 0
 If ..Field73'="" Quit 0
 If ..Field74'="" Quit 0
 If ..Field75'="" Quit 0
 If ..Field76'="" Quit 0
 If ..Field77'="" Quit 0
 If ..Field78'="" Quit 0
 If ..Field79'="" Quit 0
 If ..Field80'="" Quit 0
 If ..Field81'="" Quit 0
 If ..Field82'="" Quit 0
 If ..Field83'="" Quit 0
 If ..Field84'="" Quit 0
 If ..Field85'="" Quit 0
 If ..Field86'="" Quit 0
 If ..Field87'="" Quit 0
 If ..Field88'="" Quit 0
 If ..Field89'="" Quit 0
 If ..Field90'="" Quit 0
 If ..Field91'="" Quit 0
 If ..Field92'="" Quit 0
 If ..Field93'="" Quit 0
 If ..Field94'="" Quit 0
 If ..Field95'="" Quit 0
 If ..Field96'="" Quit 0
 If ..Field97'="" Quit 0
 If ..Field98'="" Quit 0
 If ..Field99'="" Quit 0
 If ..Field100'="" Quit 0
 If ..Field101'="" Quit 0
 Quit 1
zXMLNew(document,node,containerOref="")
	Quit (##class(ASCN.Msg.RecMap.LFO5.Msg16.Record).%New())
zXMLSchema(top="",format="",namespacePrefix="",input=0,refOnly=0,schema)
 Quit ##class(%XML.Implementation).XMLSchema("ASCN.Msg.RecMap.LFO5.Msg16.Record",top,format,namespacePrefix,input,refOnly,.schema)
%ParentBatchGetObject(force=0) public {
	Quit $select(r%%ParentBatch=""||(i%%ParentBatch'=""):$select(i%%ParentBatch="":"",1:$listbuild(i%%ParentBatch_"")),(''..%ParentBatch.%GetSwizzleObject(force,.oid)):oid,1:"") }
%ParentBatchGetObjectId(force=0) public {
	Quit $listget(..%ParentBatchGetObject(force)) }
%ParentBatchGetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),103),1:"") }
%ParentBatchGetSwizzled(noswizzle=0) public {
	If r%%ParentBatch'="" Quit r%%ParentBatch
	If i%%ParentBatch="" Quit ""
	Set oid=$select(i%%ParentBatch="":"",1:$listbuild(i%%ParentBatch_""))
	Set oref=##class("ASCN.Msg.RecMap.LFO5.Batch.Msg16").%Open(oid,,.sc) If ('sc)||(oref="") Do:$get(^%SYS("ThrowSwizzleError"),0) $zutil(96,3,19,1) Quit ""
	Set modstate=$system.CLS.GetModifiedBits() Set r%%ParentBatch=oref Do $system.CLS.SetModifiedBits(modstate)
	Do oref.RecordsRelate($this)
	Quit oref }
%ParentBatchNewObject() public {
	Set newobject=##class("ASCN.Msg.RecMap.LFO5.Batch.Msg16").%New() If newobject="" Quit ""
	Set ..%ParentBatch=newobject
	Do ..%ParentBatch.RecordsRelate($this)
	Quit newobject }
%ParentBatchOnDelete(id="",concurrency=-1) [ SQLCODE,id ] public { New SQLCODE 
	 ;---&sql(select %ID into :id from ASCN_Msg_RecMap_LFO5_Msg16.Record where %ParentBatch = :id)
 	 ;--- ** SQL PUBLIC Variables: SQLCODE, id
	try { d $classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xE1nx3j0pZXIo3QxHyMWKkaNfKEF","%New") } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xE1nx3j0pZXIo3QxHyMWKkaNfKEF")||($ze["<ZSQLU>") { d %0dsqlF } else { throw } }
	Quit $Select(SQLCODE:1,1:$$Error^%apiOBJ(5823,$classname()_"."_"%ParentBatch")) }
 q
%0dsqlF	n %xxsql
	s %xxsql("S",1)="SELECT %ID INTO :id FROM ASCN_Msg_RecMap_LFO5_Msg16 . Record WHERE %ParentBatch = :id"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("M","ALLOCGVEC")=$c(1),%xxsql("M","CACHENAMES")="",%xxsql("M","DEBUG")=$c(1),%xxsql("M","FORKNETDMN")=$c(1)
	s %xxsql("M","HASHLOCK")=$c(1),%xxsql("M","NETNEWHASH")=$c(1),%xxsql("M","SOAP12ENCns")="0"_$c(1,1)_"0"_$c(1)_"""http://www.w3.org/2003/05/soap-encoding"""
	s %xxsql("M","USEDIRCACHE")=$c(1),%xxsql("M","USEGCNT")=2,%xxsql("M","USEGOFF")=$c(1),%xxsql("M","USELOST")=$c(1),%xxsql("M","ZVERSION")=$c(1)
	s %xxsql("I","%callout")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")="",%xxsql("I","%xmlMap")="",%xxsql("I","Ensemble")=""
	s %xxsql("NS")="DEMONSTRATION"
	d BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","ASCN.Msg.RecMap.LFO5.Msg16",0,"",),,"ASCN.Msg.RecMap.LFO5.Msg16.Record.CLS")
	q
%ParentBatchRClose(%qHandle) [ SQLCODE ] public {
	New SQLCODE
	Do %qHandle.%Destruct() Kill %qHandle
	Quit 1 }
%ParentBatchRExec(%qHandle,inverse) [ SQLCODE,inverse ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE 
	 ;---&sql(DECLARE Q2 CURSOR FOR
 	 ;---		SELECT ID FROM ASCN_Msg_RecMap_LFO5_Msg16.Record where %ParentBatch=:inverse)
 	 ;--- ** SQL PUBLIC Variables: SQLCODE, inverse
	 
	 ;---&sql(OPEN Q2)
	try { if $g(%qHandle)'="" { s SQLCODE=-101 } else { s %qHandle=$classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xE7smtgltpNNh5rLq5K2FFeMs2cl","%New") if '$isobject(%qHandle) s %qHandle=$$%0dsqlH() } } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xE7smtgltpNNh5rLq5K2FFeMs2cl")||($ze["<ZSQLU>") { s %qHandle=$$%0dsqlH() } else { throw } }
	If SQLCODE Quit $$Error^%apiOBJ(5821,"SQLCODE = "_SQLCODE)
	Quit 1 }
%ParentBatchRFetch(%qHandle,FetchCount=0,RowSet,ReturnCount,AtEnd) [ SQLCODE,inverse ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE,inverse 
	Set RowSet="",ReturnCount=0,AtEnd=0
	For {
		 ;---&sql(FETCH Q2 INTO :c1)
 		 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
		if $isobject($g(%qHandle))'=1 { s SQLCODE=-102 } else { do %qHandle.FET() if SQLCODE=0 { s c1=%qHandle.sqlcol1 } }
		If 'SQLCODE { Set RowSet=RowSet_$lb(c1),ReturnCount=ReturnCount+1 Quit:ReturnCount=FetchCount||(($length(RowSet)+($length(RowSet)\ReturnCount))>24000) } Else { Set AtEnd=1 Quit }
	}
	Quit 1 }
 q
%0dsqlH()	n %xxsql
	s %xxsql("S",1)="DECLARE Q2 CURSOR FOR SELECT ID "
	s %xxsql("S",2)="INTO  :i%sqlcol1"
	s %xxsql("S",3)="FROM ASCN_Msg_RecMap_LFO5_Msg16 . Record WHERE %ParentBatch = :inverse"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("M","ALLOCGVEC")=$c(1),%xxsql("M","CACHENAMES")="",%xxsql("M","DEBUG")=$c(1),%xxsql("M","FORKNETDMN")=$c(1)
	s %xxsql("M","HASHLOCK")=$c(1),%xxsql("M","NETNEWHASH")=$c(1),%xxsql("M","SOAP12ENCns")="0"_$c(1,1)_"0"_$c(1)_"""http://www.w3.org/2003/05/soap-encoding"""
	s %xxsql("M","USEDIRCACHE")=$c(1),%xxsql("M","USEGCNT")=2,%xxsql("M","USEGOFF")=$c(1),%xxsql("M","USELOST")=$c(1),%xxsql("M","ZVERSION")=$c(1)
	s %xxsql("I","%callout")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")="",%xxsql("I","%xmlMap")="",%xxsql("I","Ensemble")=""
	s %xxsql("NS")="DEMONSTRATION"
	return $$BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","ASCN.Msg.RecMap.LFO5.Msg16",0,"",),",1,Q2,","ASCN.Msg.RecMap.LFO5.Msg16.Record.CLS",1)
%ParentBatchRelate(oref) public {
	If r%%ParentBatch=oref Quit 1
	If i%%ParentBatch'="",$listget(oref."%%OID")=i%%ParentBatch Set modstate=$system.CLS.GetModifiedBits() Set r%%ParentBatch=oref Do $system.CLS.SetModifiedBits(modstate) Quit 1
	If r%%ParentBatch'="" Do ..%ParentBatchUnRelate(r%%ParentBatch)
	Set tmp=i%%ParentBatch Kill i%%ParentBatch,r%%ParentBatch Set r%%ParentBatch=oref,i%%ParentBatch=tmp
	Quit 1 }
%ParentBatchSet(newvalue) public {
	If newvalue="" {
		If r%%ParentBatch="",i%%ParentBatch="" Quit 1
	} Else {
		If '$isobject(newvalue) Quit $$Error^%apiOBJ(5807,newvalue)
		If r%%ParentBatch=newvalue Quit 1
		If r%%ParentBatch="",i%%ParentBatch'="",i%%ParentBatch=$listget(newvalue."%%OID") Set modstate=$system.CLS.GetModifiedBits() Set r%%ParentBatch=newvalue Do newvalue.RecordsRelate($this),$system.CLS.SetModifiedBits(modstate) Quit 1
	}
	If r%%ParentBatch'="" Do r%%ParentBatch.RecordsUnRelate($this)
	Set r%%ParentBatch=newvalue,i%%ParentBatch=0,i%%ParentBatch=""
	If newvalue'="" Do newvalue.RecordsRelate($this)
	Quit 1 }
%ParentBatchSetObject(newvalue) public {
	If r%%ParentBatch="" Set i%%ParentBatch=$listget(newvalue) Quit 1
	If newvalue'="",i%%ParentBatch=$listget(newvalue) Quit 1
	Set sc=..%ParentBatch.%GetSwizzleObject(0,.oid) Quit:('sc) sc
	If newvalue'="",$listget(oid)=$listget(newvalue) Quit 1
	Do ..%ParentBatch.RecordsUnRelate($this) Set r%%ParentBatch="",i%%ParentBatch=0,i%%ParentBatch=$listget(newvalue) Quit 1 }
%ParentBatchSetObjectId(newid) public {
	Quit ..%ParentBatchSetObject($select(newid="":"",1:$listbuild(newid_""))) }
%ParentBatchUnRelate(oref) public {
	If r%%ParentBatch=oref Set r%%ParentBatch="",i%%ParentBatch=0,i%%ParentBatch="" Quit 1
	If r%%ParentBatch'="" Quit $$Error^%apiOBJ(5499)
	Set i%%ParentBatch=0,i%%ParentBatch=""
	Quit 1 }
%ParentBatchUnSwizzle(force=0) public {
 Quit:r%%ParentBatch="" 1
	Set sc=..%ParentBatch.%GetSwizzleObject(force,.newvalue) Quit:('sc) sc
	Set modstate=$system.CLS.GetModifiedBits() Set r%%ParentBatch="" Do $system.CLS.SetModifiedBits(modstate)
 Set i%%ParentBatch=$listget(newvalue)
 Quit 1 }
%SourceGetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),3),1:"") }
zCityGetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),16),1:"") }
zField10GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),11),1:"") }
zField100GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),101),1:"") }
zField101GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),102),1:"") }
zField13GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),14),1:"") }
zField14GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),15),1:"") }
zField18GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),19),1:"") }
zField19GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),20),1:"") }
zField2GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),104),1:"") }
zField20GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),21),1:"") }
zField21GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),22),1:"") }
zField22GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),23),1:"") }
zField23GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),24),1:"") }
zField24GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),25),1:"") }
zField25GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),26),1:"") }
zField26GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),27),1:"") }
zField27GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),28),1:"") }
zField28GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),29),1:"") }
zField29GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),30),1:"") }
zField3GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),4),1:"") }
zField30GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),31),1:"") }
zField31GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),32),1:"") }
zField32GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),33),1:"") }
zField33GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),34),1:"") }
zField34GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),35),1:"") }
zField35GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),36),1:"") }
zField36GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),37),1:"") }
zField37GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),38),1:"") }
zField38GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),39),1:"") }
zField39GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),40),1:"") }
zField4GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),5),1:"") }
zField40GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),41),1:"") }
zField41GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),42),1:"") }
zField42GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),43),1:"") }
zField43GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),44),1:"") }
zField44GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),45),1:"") }
zField45GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),46),1:"") }
zField46GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),47),1:"") }
zField47GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),48),1:"") }
zField48GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),49),1:"") }
zField49GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),50),1:"") }
zField50GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),51),1:"") }
zField51GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),52),1:"") }
zField52GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),53),1:"") }
zField53GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),54),1:"") }
zField54GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),55),1:"") }
zField55GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),56),1:"") }
zField56GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),57),1:"") }
zField57GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),58),1:"") }
zField58GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),59),1:"") }
zField59GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),60),1:"") }
zField60GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),61),1:"") }
zField61GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),62),1:"") }
zField62GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),63),1:"") }
zField63GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),64),1:"") }
zField64GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),65),1:"") }
zField65GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),66),1:"") }
zField66GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),67),1:"") }
zField67GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),68),1:"") }
zField68GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),69),1:"") }
zField69GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),70),1:"") }
zField70GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),71),1:"") }
zField71GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),72),1:"") }
zField72GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),73),1:"") }
zField73GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),74),1:"") }
zField74GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),75),1:"") }
zField75GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),76),1:"") }
zField76GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),77),1:"") }
zField77GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),78),1:"") }
zField78GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),79),1:"") }
zField79GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),80),1:"") }
zField80GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),81),1:"") }
zField81GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),82),1:"") }
zField82GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),83),1:"") }
zField83GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),84),1:"") }
zField84GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),85),1:"") }
zField85GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),86),1:"") }
zField86GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),87),1:"") }
zField87GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),88),1:"") }
zField88GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),89),1:"") }
zField89GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),90),1:"") }
zField9GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),10),1:"") }
zField90GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),91),1:"") }
zField91GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),92),1:"") }
zField92GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),93),1:"") }
zField93GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),94),1:"") }
zField94GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),95),1:"") }
zField95GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),96),1:"") }
zField96GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),97),1:"") }
zField97GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),98),1:"") }
zField98GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),99),1:"") }
zField99GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),100),1:"") }
zFirstNameGetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),7),1:"") }
zLastNameGetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),9),1:"") }
zLeadingFieldGetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),105),1:"") }
zMiddleInitialGetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),8),1:"") }
zMinistryGetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),6),1:"") }
zMsgIDGetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),2),1:"") }
zStateGetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),17),1:"") }
zStreetAddress1GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),12),1:"") }
zStreetAddress2GetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),13),1:"") }
zZipcodeGetStored(id) public {
	Quit $Select(id'="":$listget($g(^ASCN.Msg.RecMap.LFO9944.RecordD(id)),18),1:"") }
zExtentClose(%qHandle) [ SQLCODE ] public {
	New SQLCODE
	Do %qHandle.%Destruct() Kill %qHandle
	If SQLCODE { Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.%Message=$g(%msg) Set sc=$$Error^%apiOBJ(5540,SQLCODE,$get(%msg)) } Else { Set sc=1 }
	Quit sc }
zExtentExecute(%qHandle) [ SQLCODE ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE 
	Set sc=1
	 ;---&sql(DECLARE QExtent CURSOR FOR
 	 ;---		 SELECT ID FROM ASCN_Msg_RecMap_LFO5_Msg16.Record)
 	 ;--- ** SQL PUBLIC Variables: SQLCODE
	 
	 ;---&sql(OPEN QExtent)
	try { if $g(%qHandle)'="" { s SQLCODE=-101 } else { s %qHandle=$classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEZZnbBkDfkcL2GjmXbOuoFFCCH7","%New") if '$isobject(%qHandle) s %qHandle=$$%0dsqlK() } } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEZZnbBkDfkcL2GjmXbOuoFFCCH7")||($ze["<ZSQLU>") { s %qHandle=$$%0dsqlK() } else { throw } }
	If SQLCODE { Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.%Message=$g(%msg) Set sc=$$Error^%apiOBJ(5821,"SQLCODE = "_SQLCODE) } Else { Set sc=1 }
	Quit sc }
zExtentFetch(%qHandle,Row,AtEnd=0) [ SQLCODE ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE 
	Set Row="",AtEnd=0
	 ;---&sql(FETCH QExtent INTO :c1)
 	 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
	if $isobject($g(%qHandle))'=1 { s SQLCODE=-102 } else { do %qHandle.FET() if SQLCODE=0 { s c1=%qHandle.sqlcol1 } }
	If 'SQLCODE { Set Row=$lb(c1) Set sc=1 }
	ElseIf SQLCODE=100 { Set AtEnd=1,sc=1 Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.%ROWCOUNT=$g(%ROWCOUNT) }
	Else { Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.Message=$g(%msg) Set AtEnd=1,sc=$$Error^%apiOBJ(5540,SQLCODE,$get(%msg)) }
	QUIT sc }
zExtentFetchRows(%qHandle,FetchCount=0,RowSet,ReturnCount,AtEnd) [ SQLCODE ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE 
	Set RowSet="",ReturnCount=0,AtEnd=0
	For {
		 ;---&sql(FETCH QExtent INTO :c1)
 		 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
		if $isobject($g(%qHandle))'=1 { s SQLCODE=-102 } else { do %qHandle.FET() if SQLCODE=0 { s c1=%qHandle.sqlcol1 } }
		If 'SQLCODE { Set RowSet=RowSet_$lb(c1),ReturnCount=ReturnCount+1 Quit:(ReturnCount=FetchCount)||(($l(RowSet)+($l(RowSet)\ReturnCount))>24000) } Else { Set AtEnd=1 Quit }
	}
	If 'SQLCODE { Set sc=1 } ElseIf SQLCODE=100 { Set sc=1 Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.%ROWCOUNT=$g(%ROWCOUNT) } Else { Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.Message=$g(%msg) Set sc=$$Error^%apiOBJ(5540,SQLCODE,$get(%msg)) }
	Quit sc }
zExtentSendODBC(%qHandle,array,qacn,%qrc,piece,ColumnCount) [ SQLCODE ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE 
	set %qrc=0,piece=0
	for {
		set rc=..ExtentFetch(.%qHandle,.row,.atend)
		if ('rc) { set %qrc=-400 set:$isobject($get(%sqlcontext)) %sqlcontext.SQLCode=-400,%sqlcontext.Message=$g(%msg) do ProcessError^%ourProcedure(rc,$get(%sqlcontext),.%qrc,.%msg),Logerr^%SYS.SQLSRV(%qrc,"","SP",.%msg) RETURN  }
		if row="" { set %qrc=100 set:$isobject($get(%sqlcontext)) %sqlcontext.SQLCode=100 RETURN  }
		if $g(%protocol)>50 { RETURN:$zobjexport(row,60) }
		else {
			if %protocol>46 { for piece=1:1:ColumnCount { goto:$zobjexport($lg(row,piece),50) SPDone } }
			else { for piece=1:1:ColumnCount { goto:$zobjexport($lg(row,piece),7) SPDone } }
		}
	}
	QUIT
SPDone	set:%protocol>46 piece=piece+1
	kill array(qacn)
	for i=piece:1:ColumnCount { set array(qacn,i)=$lg(row,i) }
	QUIT }
 q
%0dsqlK()	n %xxsql
	s %xxsql("S",1)="DECLARE QExtent CURSOR FOR SELECT ID "
	s %xxsql("S",2)="INTO  :i%sqlcol1"
	s %xxsql("S",3)="FROM ASCN_Msg_RecMap_LFO5_Msg16 . Record"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("M","ALLOCGVEC")=$c(1),%xxsql("M","CACHENAMES")="",%xxsql("M","DEBUG")=$c(1),%xxsql("M","FORKNETDMN")=$c(1)
	s %xxsql("M","HASHLOCK")=$c(1),%xxsql("M","NETNEWHASH")=$c(1),%xxsql("M","SOAP12ENCns")="0"_$c(1,1)_"0"_$c(1)_"""http://www.w3.org/2003/05/soap-encoding"""
	s %xxsql("M","USEDIRCACHE")=$c(1),%xxsql("M","USEGCNT")=2,%xxsql("M","USEGOFF")=$c(1),%xxsql("M","USELOST")=$c(1),%xxsql("M","ZVERSION")=$c(1)
	s %xxsql("I","%callout")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")="",%xxsql("I","%xmlMap")="",%xxsql("I","Ensemble")=""
	s %xxsql("NS")="DEMONSTRATION"
	return $$BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Runtime","","","ASCN.Msg.RecMap.LFO5.Msg16",0,"",),",1,QExtent,","ASCN.Msg.RecMap.LFO5.Msg16.Record.CLS",1)
zExtentFunc() public {
	try {
		set tSchemaPath = ##class(%SQL.Statement).%ClassPath($classname())
			set tStatement = ##class(%SQL.Statement).%New(,tSchemaPath)
			do tStatement.prepare(" SELECT ID FROM ASCN_Msg_RecMap_LFO5_Msg16 . Record")
		set tResult = tStatement.%Execute()
	}
	catch tException { if '$Isobject($Get(tResult)) { set tResult = ##class(%SQL.StatementResult).%New() } set tResult.%SQLCODE=tException.AsSQLCODE(),tResult.%Message=tException.AsSQLMessage() }
	Quit tResult }
zExtentGetInfo(colinfo,parminfo,idinfo,%qHandle,extoption=0,extinfo) public {
 s parminfo=""
	s:'($d(^oddCOM($classname(),"q","Extent",21),clientinfo)#2)&&'$s($d(^(2),clientinfo)#2&&(clientinfo'=$classname()):$d(^oddCOM(clientinfo,"q","Extent",21),clientinfo)#2||($d(^oddDEF(clientinfo,"q","Extent",21),clientinfo)#2),1:$d(^oddDEF($classname(),"q","Extent",21),clientinfo)#2) clientinfo=""
	Set:extoption extinfo=$s($d(^oddCOM($classname(),"q","Extent",38))#2:^(38),$d(^oddCOM($g(^(2),$classname()),"q","Extent",38))#2:^(38),1:$s($d(^oddDEF($g(^oddCOM($classname(),"q","Extent",2),$classname()),"q","Extent",38))#2:^(38),1:""))
	If clientinfo'="" Set colinfo=$listget(clientinfo,1),parminfo=$listget(clientinfo,2),idinfo=$listget(clientinfo,3) Quit 1
	Set colinfo="",parminfo="",idinfo=$listbuild(0)
	Set sc=$$externaltype^%apiOLE("%Library.Integer",.exttypes,"0")
	Quit:('sc) sc
	s:'($d(^oddCOM($classname(),"q","Extent",23),names)#2)&&'$s($d(^(2),names)#2&&(names'=$classname()):$d(^oddCOM(names,"q","Extent",23),names)#2||($d(^oddDEF(names,"q","Extent",23),names)#2),1:$d(^oddDEF($classname(),"q","Extent",23),names)#2) names=""
	s:'($d(^oddCOM($classname(),"q","Extent",22),captions)#2)&&'$s($d(^(2),captions)#2&&(captions'=$classname()):$d(^oddCOM(captions,"q","Extent",22),captions)#2||($d(^oddDEF(captions,"q","Extent",22),captions)#2),1:$d(^oddDEF($classname(),"q","Extent",22),captions)#2) captions=""
	For i=1:1:1 Set colinfo=colinfo_$listbuild($listbuild($listget(names,i),$piece(exttypes,",",i),$listget(captions,i)))
	Set idinfo=$listbuild(1,$classname())
	s ^oddCOM($classname(),"q","Extent",21)=$listbuild(colinfo,parminfo,idinfo)
	Quit 1 }
zExtentGetODBCInfo(colinfo,parminfo,qHandle) public {
	set version = $Select($Get(%protocol,41)>40:4,1:3)
	Set metadata=$lb(1,1,"ID",4,10,0,2,"ID","Record","ASCN_Msg_RecMap_LFO5_Msg16","",$c(0,0,0,0,0,0,0,0,0,0,0,1),0)
	Set colcount=$li(metadata,2),cmdlen=colcount*10,parmcount=$li(metadata,3+cmdlen),pmdlen=parmcount*6,parminfo=$li(metadata,cmdlen+3,cmdlen+pmdlen+3)
	If version=4 {
		Set colinfo=$li(metadata,2,2+cmdlen)
	} Else {
		Set colinfo=$li(metadata,2,2)
		For i=0:1:colcount-1 Set colinfo=colinfo_$list(metadata,3+(i*10),11+(i*10))
	}
	Quit 1 }
%ParentBatchCheck(id="",lockonly=0) public {
	Quit ##class(ASCN.Msg.RecMap.LFO5.Batch.Msg16).%1Check(id,lockonly)
}
%ParentBatchDelete(id="",concurrency=-1) public {
	quit ..%ParentBatchOnDelete(.id,.concurrency) }
%ParentBatchSQLFKeyExists(%p...)
	new %ROWCOUNT,%ROWID,%msg,SQLCODE
	 ;---&sql(SELECT %ParentBatch
 	 ;---	     FROM   ASCN_Msg_RecMap_LFO5_Msg16.Record
 	 ;---	     WHERE  %ParentBatch=:%p(1))
 	 ;--- ** SQL PUBLIC Variables: %p, SQLCODE
	try { d $classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xE3l29zbmBm2vAiZnYeyxHsN6sQm","%New") } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xE3l29zbmBm2vAiZnYeyxHsN6sQm")||($ze["<ZSQLU>") { d %0dsqlO } else { throw } }
	QUIT SQLCODE=0
 q
%0dsqlO	n %xxsql
	s %xxsql("S",1)="SELECT %ParentBatch FROM ASCN_Msg_RecMap_LFO5_Msg16 . Record WHERE %ParentBatch = :%p(1)"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("M","ALLOCGVEC")=$c(1),%xxsql("M","CACHENAMES")="",%xxsql("M","DEBUG")=$c(1),%xxsql("M","FORKNETDMN")=$c(1)
	s %xxsql("M","HASHLOCK")=$c(1),%xxsql("M","NETNEWHASH")=$c(1),%xxsql("M","SOAP12ENCns")="0"_$c(1,1)_"0"_$c(1)_"""http://www.w3.org/2003/05/soap-encoding"""
	s %xxsql("M","USEDIRCACHE")=$c(1),%xxsql("M","USEGCNT")=2,%xxsql("M","USEGOFF")=$c(1),%xxsql("M","USELOST")=$c(1),%xxsql("M","ZVERSION")=$c(1)
	s %xxsql("I","%callout")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")="",%xxsql("I","%xmlMap")="",%xxsql("I","Ensemble")=""
	s %xxsql("NS")="DEMONSTRATION"
	d BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","ASCN.Msg.RecMap.LFO5.Msg16",0,"",),,"ASCN.Msg.RecMap.LFO5.Msg16.Record.CLS")
	q
%ParentBatchSQLFKeyRefAction(pSameTable=0,k,pNoLock=0,%p...)
		// ON UPDATE/DELETE NOACTION
	quit:%p(1)="" 0 new rx set rx=..%ParentBatchSQLFKeyExists(%p(1)) set:rx %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler27",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record",k,"%ParentBatch","'%ParentBatch'") QUIT rx
%ParentBatchIdxExists(K1,id="") [ K1,SQLCODE,id ] public { New SQLCODE 
	 ;---&sql(SELECT %ID INTO :id FROM ASCN_Msg_RecMap_LFO5_Msg16.Record WHERE (:K1 is not null and %ParentBatch = :K1) OR (:K1 IS NULL AND %ParentBatch IS NULL))
 	 ;--- ** SQL PUBLIC Variables: K1, SQLCODE, id
	try { d $classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xET9rFa6iP1p0xLoRrfxBWE9U9Q5","%New") } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xET9rFa6iP1p0xLoRrfxBWE9U9Q5")||($ze["<ZSQLU>") { d %0dsqlQ } else { throw } }
	Quit $select('SQLCODE:1,1:0) }
 q
%0dsqlQ	n %xxsql
	s %xxsql("S",1)="SELECT %ID INTO :id FROM ASCN_Msg_RecMap_LFO5_Msg16 . Record WHERE ( :K1 IS NOT NULL AND %ParentBatch = :K1 ) OR ( :K1 IS NULL AND %ParentBatch IS NULL )"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("M","ALLOCGVEC")=$c(1),%xxsql("M","CACHENAMES")="",%xxsql("M","DEBUG")=$c(1),%xxsql("M","FORKNETDMN")=$c(1)
	s %xxsql("M","HASHLOCK")=$c(1),%xxsql("M","NETNEWHASH")=$c(1),%xxsql("M","SOAP12ENCns")="0"_$c(1,1)_"0"_$c(1)_"""http://www.w3.org/2003/05/soap-encoding"""
	s %xxsql("M","USEDIRCACHE")=$c(1),%xxsql("M","USEGCNT")=2,%xxsql("M","USEGOFF")=$c(1),%xxsql("M","USELOST")=$c(1),%xxsql("M","ZVERSION")=$c(1)
	s %xxsql("I","%callout")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")="",%xxsql("I","%xmlMap")="",%xxsql("I","Ensemble")=""
	s %xxsql("NS")="DEMONSTRATION"
	d BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","ASCN.Msg.RecMap.LFO5.Msg16",0,"",),,"ASCN.Msg.RecMap.LFO5.Msg16.Record.CLS")
	q
zIDKEYCheck(K1,lockonly=0,concurrency=-1) public {
	s id=K1,exists=..%ExistsId(id) q:'exists $s('lockonly:$$Error^%apiOBJ(5797,$classname(),"IDKEY",id),1:1) s:concurrency=-1 concurrency=$select(..#DEFAULTCONCURRENCY="$zu(115,10)":$zu(115,10),1:$xecute("q "_..#DEFAULTCONCURRENCY)) if concurrency { s status=..%LockId(id,1) q:('status) status } if 'lockonly { s exists=..%ExistsId(id) d:concurrency ..%UnlockId(id,1,0) quit $s('exists:$$Error^%apiOBJ(5797,$classname(),"IDKEY",id),1:1) } else { d:concurrency ..%UnlockId(id,1,0) q 1 }
}
zIDKEYDelete(K1,concurrency=-1) public {
	Quit ..%DeleteId(.K1,concurrency) }
zIDKEYExists(K1,id="") public {
	s id=K1 q ..%ExistsId(K1) }
zIDKEYOpen(K1,concurrency=-1,sc) public { s:'($d(sc)#2) sc=1
	Quit ..%OpenId(.K1,concurrency,.sc) }
zIDKEYSQLCheckUnique(pFromOrig=0,%pID,%pVals...)
 QUIT $$Error^%apiOBJ(5758,"%Persistent::IDKEYSQLCheckUnique")
zIDKEYSQLExists(pLockOnly=0,pUnlockRef,%pVal...)
	// SQL Foreign Key validation entry point for Key IDKEY.  Called by FKeys that reference this Key to see if the row is defined
	new id set id=%pVal(1)
	if pLockOnly>=0 { if '..%SQLGetLock(id,1,.pUnlockRef) { set sqlcode=-114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler39",,"ASCN_Msg_RecMap_LFO5_Msg16"_"."_"Record"_":"_"IDKEY") QUIT 0 } }
	if pLockOnly<1 {
		new qv set qv=$d(^ASCN.Msg.RecMap.LFO9944.RecordD(%pVal(1))) QUIT:pLockOnly=-1 qv
		do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) quit qv
	}
	else { do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) QUIT 1 }
	Return
zIDKEYSQLFindPKeyByConstraint(%con)
 QUIT $$Error^%apiOBJ(5758,"%Persistent::IDKEYSQLFindPKeyByConstraint")
zIDKEYSQLFindRowIDByConstraint(%con,pInternal=0)
 QUIT $$Error^%apiOBJ(5758,"%Persistent::IDKEYSQLFindRowIDByConstraint")