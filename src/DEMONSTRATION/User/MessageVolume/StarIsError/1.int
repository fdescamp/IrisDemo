ROUTINE User.MessageVolume.StarIsError.1 [Type=INT,Generated]
 ;User.MessageVolume.StarIsError.1
 ;Generated for class User.MessageVolume.StarIsError.  Do NOT edit. 08/13/2020 09:37:11AM
 ;;7750427A;User.MessageVolume.StarIsError
 ;
SQLUPPER(v,l) { quit $zu(28,v,7,$g(l,32767)) }
ALPHAUP(v,r) { quit $zu(28,v,6) }
STRING(v,l) { quit $zu(28,v,9,$g(l,32767)) }
SQLSTRING(v,l) { quit $zu(28,v,8,$g(l,32767)) }
UPPER(v) { quit $zu(28,v,5) }
MVR(v) { quit $zu(28,v,2) }
TRUNCATE(v,l) { quit $e(v,1,$g(l,3641144)) }
%BuildIndices(pIndexList="",pAutoPurge=1,pLockFlag=0,pJournalFlag=1,pStartID="",pEndID="",pIgnoreIndexList="") public {
	if ($listlength(pIndexList)=1)&&($listget(pIndexList,1)="") { return 1 }
	Set class=$classname(),tBuildFlags=1,tBuildFlags(class)=$c(0)
	Set tPtr=0,tStatus=1,pJournalFlag=''pJournalFlag
	While $listnext(pIndexList,tPtr,tIndex) {
		continue:tIndex=""
		If '$d(^oddCOM(class,"i",tIndex)) {
			Set tStatus=$select(+tStatus:$$Error^%apiOBJ(5066,class_"::"_tIndex),1:$$AppendStatus^%occSystem(tStatus,$$Error^%apiOBJ(5066,class_"::"_tIndex)))
		}
	}
	If ('tStatus) RETURN tStatus
	if ((pIndexList="")||($listfind(pIndexList,"Primary"))),'$listfind(pIgnoreIndexList,"Primary") { set $Extract(tBuildFlags(class),1)=$c(1) }
	Quit ..%BuildIndexInternal(.pLockFlag,.pAutoPurge,.pStartID,.pEndID,.pIndexList,.tBuildFlags,"^DeepSee.Dimension(""USER.MESSAGEVOLUME.STARISERROR""",0,.pJournalFlag,0) }
%BuildIndicesSegment(pStartID,pEndID,pIndexHandle=0,pLockFlag=1,pFirstRange=0,pJob="") public {
	New %tIndexBuffer
	Try {
		set tStatus=1,tLocked=0
		If pLockFlag'=2,$Ascii(pIndexHandle($classname()),1),$SortBegin(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary")),$increment(^IRIS.TempIndexBuild(pJob,1)) { Do $system.Event.Create($name(^IRIS.TempIndexBuild(pJob,1))) }
		Set tPrefetch=$prefetchon(^DeepSee.Dimension)
		If 'pFirstRange||('$data(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",pStartID))) { Set tID=$order(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",pStartID)) } Else { Set tID=pStartID }
		While tID'="",(pEndID="")||(tID']]pEndID) {
			If pLockFlag=2 {
				Set tSC = ..%LockId(tID,1)
				If ('tSC) {
					Set tStatus=$select(+tStatus:tSC,1:$$AppendStatus^%occSystem(tStatus,tSC))
					Set tID=$order(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",tID))
					Continue
				}
			}
			If pLockFlag'=2||($data(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",tID))) {
				Set tSC=..%FileIndices(tID,.pIndexHandle)
				If ('tSC) { Set tStatus=$select(+tStatus:tSC,1:$$AppendStatus^%occSystem(tStatus,tSC)) }
			}
			Do:pLockFlag=2 ..%UnlockId(tID,1,1)
			set tID=$order(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",tID))
		}
	}
	Catch tException {
		Set tSC=tException.AsStatus(),tStatus=$select(+tStatus:tSC,1:$$AppendStatus^%occSystem(tStatus,tSC))
	}
	If pLockFlag'=2,$Ascii(pIndexHandle($classname()),1) {
		If $increment(^IRIS.TempIndexBuild(pJob,1),-1)=0 { Do $system.Event.Delete($name(^IRIS.TempIndexBuild(pJob,1))) } Else { Try { Do $system.Event.Wait($name(^IRIS.TempIndexBuild(pJob,1))) } Catch {} }
		If $SortEnd(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary")) {}
	}
	Set:$Get(tPrefetch) tPrefetch=$prefetchoff(^DeepSee.Dimension)
	Quit tStatus }
%CheckConstraints(pID,pConstraintList="",pCheckDisabled=0,pErrorInfo) [ SQLCODE,pID,tCol1 ] public { New SQLCODE,tCol1 
	set tStatus = ..%OnDetermineClass($select(pID="":"",1:$listbuild(pID_"")),.tMSTC) if ('tStatus) { set pErrorInfo = $Listbuild(pID) quit tStatus } if tMSTC '= $classname() { quit $classmethod(tMSTC,"%CheckConstraints",pID,pConstraintList) }
	set tStatus = 1, pErrorInfo = ""
	 ;---&sql(select DxIsError INTO :tCol1 FROM User_MessageVolume.StarIsError WHERE %ID = :pID)
 	 ;--- ** SQL PUBLIC Variables: SQLCODE, pID, tCol1
	try { d $classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEShiczgctiKXwAx33RH7r4yymKr","%New") } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEShiczgctiKXwAx33RH7r4yymKr")||($ze["<ZSQLU>") { d %0dsqlA } else { throw } }
	if 'SQLCODE {
		if ((pConstraintList="")||($lf(pConstraintList,"Primary"))) && ('..PrimaryCheckUnique(pID,tCol1)) { set tStatus = $select(+tStatus:$$Error^%apiOBJ(5808,$classname()_".Primary"),1:$$AppendStatus^%occSystem(tStatus,$$Error^%apiOBJ(5808,$classname()_".Primary"))) }
		set pErrorInfo = $Listbuild(pID,tCol1)
	} elseif SQLCODE < 0 { set tStatus = $$Error^%apiOBJ(5540,SQLCODE,$Get(%msg)) }
	quit tStatus }
 q
%0dsqlA	n %xxsql
	s %xxsql("S",1)="SELECT DxIsError INTO :tCol1 FROM User_MessageVolume . StarIsError WHERE %ID = :pID"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("I","%DeepSee")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")=""
	s %xxsql("NS")="DEMONSTRATION"
	d BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","User.MessageVolume",0,"",),,"User.MessageVolume.StarIsError.CLS")
	q
%CheckConstraintsForExtent(pConstraintList="",pCheckDisabled=0,pErrorLog) [ SQLCODE,tID ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE,tID 
	kill pErrorLog set tStatusAll = 1, pErrorLog = 0 if '$listvalid(pConstraintList) { set pConstraintList = $listfromstring(pConstraintList) }
	 ;---&sql(declare ext cursor for select %ID into :tID FROM User_MessageVolume.StarIsError)
 	 ;--- ** SQL PUBLIC Variables: SQLCODE, tID
	 
	 ;---&sql(open ext)
	try { if $g(%ext0274)'="" { s SQLCODE=-101 } else { s %ext0274=$classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEmOjw9EfwF9DuyhCFgOOaBAslmR","%New") if '$isobject(%ext0274) s %ext0274=$$%0dsqlC() } } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEmOjw9EfwF9DuyhCFgOOaBAslmR")||($ze["<ZSQLU>") { s %ext0274=$$%0dsqlC() } else { throw } }
	if SQLCODE '< 0 {
		for {
			 ;---&sql(fetch ext)
 			 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
			if $isobject($g(%ext0274))'=1 { s SQLCODE=-102 } else { do %ext0274.FET() if SQLCODE=0 { } }
			if SQLCODE { if SQLCODE=100 { quit } elseif SQLCODE<0 { set tStatusAll = $select(+tStatusAll:$$Error^%apiOBJ(5521,SQLCODE,$Get(%msg)),1:$$AppendStatus^%occSystem(tStatusAll,$$Error^%apiOBJ(5521,SQLCODE,$Get(%msg)))) quit } }
			set tStatus = ..%CheckConstraints(tID,pConstraintList,pCheckDisabled,.tErrorInfo)
			if ('tStatus) { set tStatusAll = $select(+tStatusAll:tStatus,1:$$AppendStatus^%occSystem(tStatusAll,tStatus)) set:pErrorLog<1000 pErrorLog = pErrorLog + 1, pErrorLog(pErrorLog) = tErrorInfo _ $Listbuild(tStatus) }
		}
		 ;---&sql(close ext)
		if '$isobject($get(%ext0274)) { set SQLCODE=-102 } else { set SQLCODE=0 kill %ext0274 }
	}
	quit tStatusAll }
 q
%0dsqlC()	n %xxsql
	s %xxsql("S",1)="DECLARE ext CURSOR FOR SELECT %ID INTO :tID FROM User_MessageVolume . StarIsError"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("I","%DeepSee")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")=""
	s %xxsql("NS")="DEMONSTRATION"
	return $$BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","User.MessageVolume",0,"",),",0,ext,","User.MessageVolume.StarIsError.CLS",1)
%ComposeOid(id) public {
	set tCLASSNAME = $listget($g(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)),1)
	if tCLASSNAME="" { quit $select(id="":"",1:$listbuild(id_"","User.MessageVolume.StarIsError")) }
	set tClass=$piece(tCLASSNAME,$extract(tCLASSNAME),*-1)
	set:tClass'["." tClass="User."_tClass
	quit $select(id="":"",1:$listbuild(id_"",tClass)) }
%Count() [ SQLCODE,tCount ] public { New SQLCODE,tCount 
 Set tCount = 0
  ;---&sql(SELECT COUNT(*) INTO :tCount FROM User_MessageVolume.StarIsError)
   ;--- ** SQL PUBLIC Variables: SQLCODE, tCount
 try { d $classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEEtY8fgh53ZSkvnmMyosK2UfImv","%New") } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEEtY8fgh53ZSkvnmMyosK2UfImv")||($ze["<ZSQLU>") { d %0dsqlF } else { throw } }
 Quit tCount }
%0dsqlF	n %xxsql
	s %xxsql("S",1)="SELECT COUNT ( * ) INTO :tCount FROM User_MessageVolume . StarIsError"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("I","%DeepSee")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")=""
	s %xxsql("NS")="DEMONSTRATION"
	d BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","User.MessageVolume",0,"",),,"User.MessageVolume.StarIsError.CLS")
	q
%DeleteData(id,concurrency) public {
	Quit:id="" $$Error^%apiOBJ(5812)
	set $Ztrap="DeleteDataERR" set lockok=0,sc=""
	If concurrency {
		Lock +(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E"):$zu(115,4)
		Set lockok=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0))
		Set:lockok=2&&($tlevel) %0CacheLock($classname(),"E")=1
		If 'lockok {
			Quit $$Error^%apiOBJ(5803,$classname())
		}
	}
	If ($Data(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id))) {
		Set bsv0N1=^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)
		Set bsv0N2=$zu(28,$listget(bsv0N1,2),7,32768)
		If concurrency, ('$g(%0CacheLock($classname(),"E"))) {
			Lock +^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",bsv0N2):$zu(115,4)
			If $test {
				Lock -^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",bsv0N2)
			} Else {
				Set sc = $$Error^%apiOBJ(5803,$classname())
				Goto DeleteDataEXIT
			}
		}
		If $data(^oddEXTR($classname())) {
			Set fc=""
			For {
				Set fc=$order(^rINDEXEXT("F",$classname(),"%1","f",fc))
				Quit:fc=""
				Set fk=""
				For {
					Set fk=$order(^rINDEXEXT("F",$classname(),"%1","f",fc,fk))
					Quit:fk=""
					Set sc=$classmethod(fc,fk_"Delete",id)
					If ('sc) { Goto DeleteDataEXIT }
				}
			}
			Set fc=""
			For {
				Set fc=$order(^rINDEXEXT("F",$classname(),"IDKEY","f",fc))
				Quit:fc=""
				Set fk=""
				For {
					Set fk=$order(^rINDEXEXT("F",$classname(),"IDKEY","f",fc,fk))
					Quit:fk=""
					Set sc=$classmethod(fc,fk_"Delete",id)
					If ('sc) { Goto DeleteDataEXIT }
				}
			}
			Set fc=""
			For {
				Set fc=$order(^rINDEXEXT("F",$classname(),"Primary","f",fc))
				Quit:fc=""
				Set fk=""
				For {
					Set fk=$order(^rINDEXEXT("F",$classname(),"Primary","f",fc,fk))
					Quit:fk=""
					Set sc=$classmethod(fc,fk_"Delete",$listget(bsv0N1,2))
					If ('sc) { Goto DeleteDataEXIT }
				}
			}
		}
		Set bsv0N3=$zu(28,$listget(bsv0N1,2),7,32768)
		Kill ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",bsv0N3,id)
		Kill ^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)
		Set sc=1
	}
	Else { Set sc=$$Error^%apiOBJ(5810,$classname(),id) }
DeleteDataEXIT
	If concurrency,lockok {
		Lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E")
	}
DeleteDataRET	Set $Ztrap = ""
	QUIT sc
DeleteDataERR	Set $Ztrap = "DeleteDataRET"
	Set sc = $$Error^%apiOBJ(5002,$ZE)
	Goto DeleteDataEXIT }
%Exists(oid="") public {
	Quit ..%ExistsId($listget(oid)) }
%ExistsId(id) public {
	Try { set tExists = $s(id="":0,$d(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)):1,1:0) } catch tException { set tExists = 0 if '(tException.%IsA("%Exception.SystemException")) { throw tException } elseif tException.Name'="<SUBSCRIPT>" { ZT $ZE } } quit tExists }
%FileIndices(id,pIndexHandle=0) public {
	Set $ZTrap="CatchError",sc=1
	Set bsv0N2=$Get(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id))
	Set bsv0N3=$listget(bsv0N2,1)
	If bsv0N3'="" {
		Set bsv0N1=$piece(bsv0N3,$extract(bsv0N3),*-1)
		Set:bsv0N1'["." bsv0N1="User."_bsv0N1
		If bsv0N1'="" {
			Quit $classmethod(bsv0N1,"%FileIndices",id,.pIndexHandle)
		}
	}
	If ('pIndexHandle)||($Ascii($Get(pIndexHandle("User.MessageVolume.StarIsError")),1)=1) {
		Set bsv0N4=$zu(28,$listget(bsv0N2,2),7,32768)
		Set ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",bsv0N4,id)=$listget(bsv0N2,1)
	}
	QUIT 1
CatchError	s $ZTrap="" i $ZE'="" { s sc = $$Error^%apiOBJ(5002,$ZE) } q sc }
%GetDimensionProperty(pProp,pID,pFormat,pType) [ SQLCODE,pID,tValue ] public { New SQLCODE,tValue 
 Set pProp = $zu(28,pProp,5)
 Set tValue=""
 Set pFormat=""
 If (pProp="DXISERROR") {
   ;---&sql(SELECT DxIsError INTO :tValue FROM User_MessageVolume.StarIsError WHERE %ID = :pID)
    ;--- ** SQL PUBLIC Variables: SQLCODE, pID, tValue
  try { d $classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEFgrFH8lWIJYGGUdVFUHQFTljsD","%New") } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEFgrFH8lWIJYGGUdVFUHQFTljsD")||($ze["<ZSQLU>") { d %0dsqlH } else { throw } }
  Set pType="%Library.Boolean"
 }
 Quit tValue }
%0dsqlH	n %xxsql
	s %xxsql("S",1)="SELECT DxIsError INTO :tValue FROM User_MessageVolume . StarIsError WHERE %ID = :pID"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("I","%DeepSee")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")=""
	s %xxsql("NS")="DEMONSTRATION"
	d BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","User.MessageVolume",0,"",),,"User.MessageVolume.StarIsError.CLS")
	q
%GetMemberSpec(pMemberId,pCubeName,pDimNo,pHierNo,pLevelNo) public {
 Set tSpec = ""
 Set:pMemberId'="" tSpec = "&["_$Replace(..DxIsErrorGetStored(pMemberId),"]","]]")_"]"
 Quit tSpec }
%InsertBatch(objects,concurrency=0,useTransactions=0) public {
	try {
		set numerrs=0,errs="",cnt=0,ptr=0
		while $listnext(objects,ptr,data) {
			set cnt=cnt+1
			set lock=0,locku=$c(0)
			if (useTransactions) tstart
			set id=$i(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR"))
			set zzc14v1=$zu(28,$listget(data,2),7,32768)
			try {
				set tInnerException = ""
				;
				if concurrency { lock +(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E"):$zu(115,4) set lock=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:lock=2&&($tlevel) %0CacheLock($classname(),"E")=1 if 'lock { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				if (concurrency)&&('$g(%0CacheLock($classname(),"E"))) { l +^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc14v1):$zu(115,4) if $Test { Set $Extract(locku,1)=$c(1) } Else { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } } If $data(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc14v1)) { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5808,$classname()_":Primary:"_$zreference)) }
				set ^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)=data
				set ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc14v1,id)=$listget(data,1)
				if (useTransactions) { tcommit }
			}
			catch tInnerException {
				set newerr=$lb(cnt,tInnerException.AsStatus())
				if '($length(errs)+$length(newerr)>32767) { set numerrs=numerrs+1, errs=errs_newerr }
				if (useTransactions) && ($Tlevel) trollback
			}
			lock:$Ascii($Extract(locku,1)) -^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc14v1)#"D"
			if lock lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E")
		}
	}
	catch tException {
		set newerr=$lb($g(cnt),tException.AsStatus())
		if '($length(errs)+$length(newerr)>32767) { set numerrs=numerrs+1, errs=errs_newerr }
	}
	QUIT ($lb(numerrs))_errs }
%KillExtentData(killstreams=0)
	If killstreams Kill ^DeepSee.DimensionS("USER.MESSAGEVOLUME.STARISERROR")
	Kill ^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR")
	Quit 1
%LoadData(id) public {
	New %s1
	set $ZTrap="CatchError",locked=0,userze=$ze,$ze=""
	If i%%Concurrency=4 {
		Lock +(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E"):$zu(115,4)
		if '$t do init s i%%Concurrency=0 s:$ze="" $ze=userze return $$Error^%apiOBJ(5803,$classname())
	} ElseIf i%%Concurrency>1 {
		Lock +(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"SE"):$zu(115,4)
		if '$t do init s i%%Concurrency=0 s:$ze="" $ze=userze return $$Error^%apiOBJ(5804,$classname())
		set locked = 1
	}
	If $d(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id),%s1)#2 {
		If i%%Concurrency=2 { Lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"SIE") }
		S i%DxIsError=$lg(%s1,2)
		s:$ze="" $ze=userze
		Quit 1
	} Else {
		If i%%Concurrency=2 { Lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"SIE") }
		do init
		set sc = $$Error^%apiOBJ(5809,$classname(),id) goto CatchError
	}
CatchError	set $ZTrap = "" if $ZE'="" { s sc = $$Error^%apiOBJ(5002,$ZE) }
	If ($get(locked))&&(i%%Concurrency<3) { Lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"SIE") }
	if '('sc) { set sc=$$Error^%apiOBJ(5809,$classname(),id) }
	s:$ze="" $ze=userze
	return sc
init	Set i%DxIsError=""
	quit }
%LoadDataFromMemory(id,objstate,obj) public {
	New %s1
	If $d(objstate("USER.MESSAGEVOLUME.STARISERROR",id)) {
		Set %s1=$g(objstate("USER.MESSAGEVOLUME.STARISERROR",id))
		S i%DxIsError=$lg(%s1,2)
		Quit 1
	} Else {
		Set i%DxIsError=""
		Quit $$Error^%apiOBJ(5809,$classname(),id)
	} }
%LockExtent(shared=0) public {
	If shared {
		Lock +(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR")#"S"):$zu(115,4) Quit:$t 1
		Quit $$Error^%apiOBJ(5799,$classname())
	}
	Lock +(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR")):$zu(115,4) Quit:$t 1
	Quit $$Error^%apiOBJ(5798,$classname()) }
%LockId(id,shared=0,timeout) public { s:'($d(timeout)#2) timeout=$zu(115,4)
	If id="" { Quit $$Error^%apiOBJ(5812) }
	Set sc=1
	If 'shared {
		Lock +(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E"):timeout Quit:$t 1
		Quit $$Error^%apiOBJ(5803,id_":"_$classname())
	}
	Lock +(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"SE"):timeout Quit:$t 1
	Quit $$Error^%apiOBJ(5804,id_":"_$classname()) }
%NormalizeObject() public {
	If '$system.CLS.GetModified() Quit 1
	If m%DxIsError Set:i%DxIsError'="" i%DxIsError=(..DxIsErrorNormalize(i%DxIsError))
	Quit 1 }
%OnDetermineClass(oid,class) public {
	Set id=$listget($get(oid))
	Quit:id="" $$Error^%apiOBJ(5812)
	Set idclass=$lg($get(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)),1)
	If idclass="" { Set class="User.MessageVolume.StarIsError" Quit 1 }
	Set class=$piece(idclass,$extract(idclass),*-1)
	Set:class'["." class="User."_class
	QUIT 1 }
%PhysicalAddress(id,paddr)
	if $Get(id)="" Quit $$Error^%apiOBJ(5813,$classname())
	if (id="") { quit $$Error^%apiOBJ(5832,$classname(),id) }
	s paddr(1)=$lb($Name(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)),$classname(),"IDKEY","listnode",id)
	s paddr=1
	Quit 1
%PurgeIndices(idxlist="",lockExtent=0,pIgnoreIndexList="") public {
	Set locked=0,sc=1
	Try {
		if ($listlength(idxlist)=1)&&($listget(idxlist,1)="") { return 1 }
		Set tPtr=0
		While $listnext(idxlist,tPtr,tIndex) {
			continue:tIndex=""
			If '($d(^oddCOM($classname(),"i",tIndex))) {
				Set sc=$select(+sc:$$Error^%apiOBJ(5066,$classname()_"::"_tIndex),1:$$AppendStatus^%occSystem(sc,$$Error^%apiOBJ(5066,$classname()_"::"_tIndex)))
			}
		}
		If ('sc) { Return sc }
		If lockExtent {
			Set sc=..%LockExtent(0)
			If ('sc) { Return sc }
			Set locked=1
		}
		If $system.CLS.IsMthd("%OnBeforePurgeIndices") {
			Set sc=..%OnBeforePurgeIndices(.idxlist)
			If (('sc))||(($listlength(idxlist)=1)&&($listget(idxlist,1)="")) {
				If locked {
					Do ..%SQLReleaseTableLock(0)
				}
				Return sc
			}
		}
		if ((idxlist="")||($listfind(idxlist,"Primary"))),'$listfind(pIgnoreIndexList,"Primary") {
			kill ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary")
		}
		Set sc=1
		If $system.CLS.IsMthd("%OnAfterPurgeIndices") { Set sc=..%OnAfterPurgeIndices(.idxlist) }
	} Catch tException {
		Set sc=tException.AsStatus(),$ZE=""
	}
	If locked { Do ..%UnlockExtent(0) }
	Quit sc }
%SQLAcquireLock(%rowid,s=0,unlockref=0)
	new %d,gotlock
	set %d(1)=%rowid set s=$e("E",'unlockref)_$e("S",s)
	lock +^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1))#s:$zu(115,4) set gotlock=$t
	if gotlock,'unlockref { set:$case($SYSTEM.Lock.ReturnCode(),2:1,4:1,:0)&&($tlevel) %0CacheLock("User.MessageVolume.StarIsError","E")=1 }
	set:gotlock&&unlockref unlockref=unlockref+1,unlockref(unlockref)=$lb($name(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1))),"User.MessageVolume.StarIsError",s_"D")
	QUIT gotlock
%SQLAcquireTableLock(s=0,SQLCODE,to="")
	set s=$e("S",s) set:to="" to=$zu(115,4) lock +^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR")#s:to QUIT:$t 1 set SQLCODE=-110 if s="S" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler35",,"User_MessageVolume"_"."_"StarIsError") } else { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler36",,"User_MessageVolume"_"."_"StarIsError") } QUIT 0
	Return
%SQLBuildIndices(pIndices="",pLockFlag=0,pStartID="",pEndID="",pIgnoreIndexList="")
	QUIT ..%BuildIndices(pIndices,,pLockFlag,,pStartID,pEndID,pIgnoreIndexList)
%SQLBuildPurgeIndexForRow(pIndices="",pActions="BP",pLockRow=1,%d,%e,pIgnoreIndexList="")
	// Purge and build index nodes for a single row using given values, return Status Code
	new sn,tSC,tLock set tSC=1,pActions=$zcvt(pActions,"U")
	try {
		if $g(%d(1))="" { set tSC=$select(+tSC:$$Error^%apiOBJ(5521,-108,"RowID value must be specified in %d(1) when calling %SQLBuildPurgeIndexForRow for table 'User_MessageVolume.StarIsError'"),1:$$AppendStatus^%occSystem(tSC,$$Error^%apiOBJ(5521,-108,"RowID value must be specified in %d(1) when calling %SQLBuildPurgeIndexForRow for table 'User_MessageVolume.StarIsError'"))) RETURN tSC }
		if pLockRow { if '..%SQLAcquireLock(%d(1)) { set tSC=$select(+tSC:$$Error^%apiOBJ(5521,-114,"Unable to lock row in table 'User_MessageVolume.StarIsError' with %ID = '"_%d(1)_"'"),1:$$AppendStatus^%occSystem(tSC,$$Error^%apiOBJ(5521,-114,"Unable to lock row in table 'User_MessageVolume.StarIsError' with %ID = '"_%d(1)_"'"))) RETURN tSC  } else { set tLock=1 }}
		if ((pIndices="")||($lf(pIndices,"Primary"))),'$listfind(pIgnoreIndexList,"Primary") {
			if pActions["P" {
				set sn(1)=$zu(28,%e(2),7) set sn(2)=%d(1) k ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",sn(1),sn(2))
			}
			if pActions["B" {
				set sn(1)=$zu(28,%d(2),7) set sn(2)=%d(1) set ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",sn(1),sn(2))=%d(3)
			}
		}
		if pLockRow { do ..%SQLReleaseLock(%d(1),0,0) set tLock=0 }
	}
	catch {
		if $g(tLock) { do ..%SQLReleaseLock(%d(1),0,0) }
		set tSC=$select(+tSC:$$Error^%apiOBJ(5594,$ze),1:$$AppendStatus^%occSystem(tSC,$$Error^%apiOBJ(5594,$ze)))
	}
	QUIT tSC
%SQLCopyIcolIntoName()
	if %oper="DELETE" {
		set:$d(%d(1)) %f("ID")=%d(1)
		QUIT
	}
	set:$d(%d(1)) %f("ID")=%d(1) set:$a(%e,2)&&$d(%d(2)) %f("DxIsError")=%d(2) set:$a(%e,3)&&$d(%d(3)) %f("x__classname")=%d(3)
	QUIT
%SQLDefineiDjVars(%d,subs,master)
	QUIT
%SQLDelete(%rowid,%check,%tstart=1,%mv=0,%polymorphic=0)
	// SQL DELETE method for table User_MessageVolume.StarIsError
	new bva,ce,%d,dc,%e,%ele,%itm,%key,%l,%nc,omcall,%oper,%pos,%s,sn,sqlcode,subs set %oper="DELETE",sqlcode=0,%ROWID=%rowid,%d(1)=%rowid,%e(1)=%rowid,%l=$c(0)
	if '$d(%0CacheSQLRA) { new %0CacheSQLRA set omcall=1 }
	if '$a(%check,2) {
		new %ls lock +^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1))#"E":$zu(115,4) set %ls=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,4:2,2:2,1:3,:""))
		set:%ls=2 $e(%check,2)=$c(1) set:%ls=2&&($tlevel) %0CacheLock("User.MessageVolume.StarIsError","E")=1 set:$case(%ls,1:1,2:1,:0) $e(%l)=$c(1)
		if '%ls||(%ls=3) { set SQLCODE=-110,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer",$s('%ls:"SQLFiler40",1:"SQLFiler55"),,%oper,"User_MessageVolume"_"."_"StarIsError",$g(%d(1))) RETURN  }
	}
	if %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  }
	set $zt="ERRORDelete"
	do ..%SQLGetOld(%rowid,.%d,.%e,.sqlcode) if sqlcode { set SQLCODE=-106,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler58",,"User_MessageVolume"_"."_"StarIsError",%rowid) do ..%SQLEExit() QUIT  }
	if %e(3)'="" { set sn=$p(%e(3),$e(%e(3)),$l(%e(3),$e(%e(3)))-1) if "User.MessageVolume.StarIsError"'=sn { new %f do ..%SQLCopyIcolIntoName() do $classmethod(sn,"%SQLDelete",%rowid,%check,%tstart,%mv,1) QUIT  }}
	if '$a(%check),'$zu(115,7) do  if sqlcode set SQLCODE=sqlcode do ..%SQLEExit() QUIT  
	. new %fk,%k,%p,%st,%t,%z set %k="",%p("%1")="%d(1),",%p("IDKEY")="%d(1),",%p("Primary")="%e(2),"
	. for  quit:sqlcode<0  set %k=$o(^rINDEXEXT("F","User.MessageVolume.StarIsError",%k)) quit:%k=""  set %t="" for  set %t=$o(^rINDEXEXT("F","User.MessageVolume.StarIsError",%k,"f",%t)) quit:%t=""  set %st=(%t="User.MessageVolume.StarIsError") set %fk="" for  set %fk=$o(^rINDEXEXT("F","User.MessageVolume.StarIsError",%k,"f",%t,%fk)) quit:%fk=""  x "set %z=$classmethod(%t,%fk_""SQLFKeyRefAction"",%st,%k,$a(%check,2),"_%p(%k)_")" if %z set sqlcode=-124 quit  
	if '($a(%check,2)#2),'$g(%0CacheLock("User.MessageVolume.StarIsError","E")) {
		lock +^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",$zu(28,%e(2),7))#"S":$zu(115,4) if $t { lock -^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",$zu(28,%e(2),7))#"S" } else { do ..%SQLUnlockError("Primary") set SQLCODE=sqlcode do ..%SQLEExit() QUIT }
	}
	set ce="" for  { set ce=$order(^oddSQL("User_MessageVolume","StarIsError","DC",ce)) quit:ce=""   do $classmethod(ce,"%SQLDeleteChildren",%d(1),%check,.sqlcode) quit:sqlcode<0  } if sqlcode<0 { set SQLCODE=sqlcode do ..%SQLEExit() QUIT } // Delete any children
	if '$a(%check,3) {
		set sn(1)=$zu(28,%e(2),7) set sn(2)=%d(1) k ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",sn(1),sn(2))
	}
	k ^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1))
	do ..%SQLUnlock() TCOMMIT:%tstart&&($zu(115,1)=1)
	set SQLCODE=0 kill:$g(omcall) %0CacheSQLRA
	QUIT
ERRORDelete	set $zt="",SQLCODE=-415,%msg=$s($g(%msg)'="":%msg_" -- ",1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler51",,%oper,"User_MessageVolume"_"."_"StarIsError",$ze) if $ze["<FRAMESTACK>" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler52",,$ze,%oper,"User_MessageVolume"_"."_"StarIsError") do ##Class(%SYS.System).WriteToConsoleLog(%msg) if ($zu(67,10,$j)=1)||($zu(67,10,$j)=3) { write !,%msg h 3 } HALT  } do ..%SQLEExit() QUIT
	Return
%SQLDeleteTempStreams()
	// Delete all temporary streams
	QUIT
%SQLEExit()
	do:%oper'="DELETE" ..%SQLUnlock2() do ..%SQLUnlock() 
	if %tstart,$zu(115,1)=1,$TLEVEL { set %tstart=0 TROLLBACK 1 } kill:$g(omcall) %0CacheSQLRA QUIT  
	Return
%SQLExists(pLockOnly=0,pUnlockRef,%pVal...)
	// SQL Foreign Key validation entry point for Key %1.  Called by FKeys that reference this Key to see if the row is defined
	new id set id=%pVal(1)
	if pLockOnly>=0 { if '..%SQLGetLock(id,1,.pUnlockRef) { set sqlcode=-114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler39",,"User_MessageVolume"_"."_"StarIsError"_":"_"%1") QUIT 0 } }
	if pLockOnly<1 {
		new qv set qv=$d(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%pVal(1))) QUIT:pLockOnly=-1 qv
		do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) quit qv
	}
	else { do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) QUIT 1 }
	Return
%SQLGetLock(pRowId,pShared=0,pUnlockRef)
	QUIT ..%SQLAcquireLock(pRowId,pShared,.pUnlockRef)
%SQLGetOld(%rowid,%d,%e,sqlcode)
	new s set %d(1)=%rowid,s="" if '$d(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1)),s) { set sqlcode=100 quit  }
	 S %e(3)=$lg(s),%e(2)=$lg(s,2)
	QUIT
%SQLGetOldAll()
	new s set %d(1)=%rowid,s="" if '$d(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1)),s) { set sqlcode=100 quit  }
	 S %e(3)=$lg(s),%e(2)=$lg(s,2)
	QUIT
%SQLGetOldIndex(%rowid,%d,pF=0,sqlcode)
	try {
		new tClass,tF,tOid,tSC
		set tOid=..%ComposeOid(%rowid)
		if ''..%OnDetermineClass(tOid,.tClass),tClass'=$classname() {
			set tF=1 do $classmethod(tClass,"%SQLGetOldIndex",%rowid,,.tF,.sqlcode)
			set:$d(tF("DxIsError")) %d(2)=tF("DxIsError") set:$d(tF("x__classname")) %d(3)=tF("x__classname") 
			RETURN
		}
	}
	catch { }
	new s set %d(1)=%rowid,s="" if '$d(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1)),s) { set sqlcode=100 quit  }
	 S %e(3)=$lg(s),%e(2)=$lg(s,2)
	if pF { set:$d(%d(2)) pF("DxIsError")=%d(2) set:$d(%d(3)) pF("x__classname")=%d(3)  }
	set sqlcode=0
	QUIT
%SQLInsert(%d,%check,%inssel,%vco,%tstart=1,%mv=0)
	// SQL INSERT method for table User_MessageVolume.StarIsError
	new bva,%ele,%itm,%key,%f,%l,%n,%nc,%oper,%pos,%s,sqlcode,sn,subs,icol set %oper="INSERT",sqlcode=0,%l=$c(0,0,0,0)
	if $a(%check,7) { new %diu merge %diu=%d }
	if $d(%d(1)),'$zu(115,11) { if %d(1)'="" { set SQLCODE=-111,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler6",,"ID","User_MessageVolume"_"."_"StarIsError") RETURN ""  } kill %d(1) } 
	if '$a(%check),'..%SQLValidateFields(.sqlcode) { set SQLCODE=sqlcode RETURN "" }
	if %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  } set $zt="ERRORInsert"
	if '$a(%check) {
		do {
			if $g(%vco)'="" { d @%vco quit:sqlcode<0  }
			do:$g(%d(2))="" ..%SQLnBuild():'$d(%n),..%SQLMissing($lg(%n,3)) 
			quit:sqlcode<0		// A required field was missing
				// Constraint Primary
				if '$a(%check,2) { lock +^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",$zu(28,%d(2),7)):$zu(115,4) if $t { set $e(%l,3)=$c(1) } else { do ..%SQLUnlockError("Primary") quit  } }
				if '$a(%check,7) { if $d(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",$zu(28,%d(2),7))) { set sqlcode=-119,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler10",,"User_MessageVolume"_"."_"StarIsError","Primary","DxIsError"_"="_$$quoter^%apiSQL($g(%d(2)))) quit  }} // INSERT
				else { new tID set tID=..PrimarySQLFindRowIDByConstraint($lb(%d(2)),1) if tID'="" { kill %d merge %d=%diu kill %diu do ..%SQLUpdate(tID,%check,.%d),..%SQLUnlock2() set $e(%check,7)=$c(2) quit  }} // INSERT OR UPDATE
		} while 0
		QUIT:$a(%check,7)=2 $s('SQLCODE:tID,1:"")				// INSERT became UPDATE
		if sqlcode<0 { set SQLCODE=sqlcode do ..%SQLEExit() RETURN "" }		// A constraint failed
	}
	if '$d(%d(1)) { set %d(1)=$i(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR")) } elseif %d(1)>$g(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR")) { if $i(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR"),$zabs(%d(1)-$g(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR")))) {}} elseif $d(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1))) { set SQLCODE=-119,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler33",,"ID",%d(1),"User_MessageVolume"_"."_"StarIsError"_"."_"ID") do ..%SQLEExit() RETURN "" }
	set:'($d(%d(3))#2) %d(3)="" set:'($d(%d(2))#2) %d(2)=""
	if '$a(%check,2) {
		new %ls lock +^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1))#"E":$zu(115,4) set %ls=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,4:2,2:2,1:3,:""))
		set:%ls=2 $e(%check,2)=$c(1) set:%ls=2&&($tlevel) %0CacheLock("User.MessageVolume.StarIsError","E")=1 set:$case(%ls,1:1,2:1,:0) $e(%l)=$c(1)
		if '%ls||(%ls=3) { set SQLCODE=-110,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer",$s('%ls:"SQLFiler40",1:"SQLFiler55"),,%oper,"User_MessageVolume"_"."_"StarIsError",$g(%d(1))) do ..%SQLEExit() RETURN ""  }
	}
	set ^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1))=$lb(%d(3),%d(2))
	if '$a(%check,3) {
		set sn(1)=$zu(28,%d(2),7) set sn(2)=%d(1) set ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",sn(1),sn(2))=%d(3)
	}
	lock:$a(%l,3) -^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",$zu(28,%d(2),7))#"D" 
	lock:$a(%l) -^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1))#"E"
	TCOMMIT:%tstart&&($zu(115,1)=1)
	set SQLCODE=0
	QUIT %d(1) 			// %SQLInsert
ERRORInsert	set $zt="",SQLCODE=-415,%msg=$s($g(%msg)'="":%msg_" -- ",1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler51",,%oper,"User_MessageVolume"_"."_"StarIsError",$ze)
	if $ze["<FRAMESTACK>" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler52",,$ze,%oper,"User_MessageVolume"_"."_"StarIsError") do ##Class(%SYS.System).WriteToConsoleLog(%msg) if ($zu(67,10,$j)=1)||($zu(67,10,$j)=3) { write !,%msg h 3 } HALT  }
	do ..%SQLEExit()
	RETURN ""
%SQLInvalid(pIcol,pVal) public {
	set:$l($g(pVal))>40 pVal=$e(pVal,1,40)_"..." do:'$d(%n) ..%SQLnBuild() set %msg=$s($g(%msg)'="":%msg_$c(13,10),1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler37",,"User_MessageVolume"_"."_"StarIsError"_"."_$lg(%n,pIcol),$s($g(pVal)'="":$s(pVal="":"<NULL>",pVal=$c(0):"<EMPTY STRING>",1:"'"_pVal_"'"),1:"")),sqlcode=$s(%oper="INSERT":-104,1:-105)
	QUIT sqlcode }
%SQLMissing(fname)
	set sqlcode=-108,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler47",,fname,"User_MessageVolume"_"."_"StarIsError") quit
%SQLPurgeIndices(pIndices="",pLockExtent=0,pIgnoreIndexList="")
	QUIT ..%PurgeIndices(pIndices,pLockExtent,pIgnoreIndexList)
%SQLQuickLoad(%rowid,%nolock=0,pkey=0,qq=0)
	// Get fields from row where SQLRowID=%rowid
	new d,i,il,subs set:%nolock=2 %nolock=1
	if %nolock=0 { if '..%SQLAcquireLock(%rowid) { set %qrc=114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler45",,"User_MessageVolume"_"."_"StarIsError",%rowid),%ROWCOUNT=0 QUIT  } set:$zu(115,2) il=$zu(115,2,0) }
	new s,ul set ul=0,d(1)=%rowid if $zu(115,2)=1 { lock +^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",d(1))#"S":$zu(115,4) if $t { set ul=1 } else { set %qrc=114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler46",,"User_MessageVolume"_"."_"StarIsError",%rowid),%ROWCOUNT=0 quit  } }
	if '$d(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",d(1)),s) { set SQLCODE=100,%qrc=100 if %nolock=0 { do:$g(il) $zu(115,2,il) }} else { set SQLCODE=0
	if qq { set d(3)=$lg(s) if d(3)'="" { new sn set sn=$p(d(3),$e(d(3)),$l(d(3),$e(d(3)))-1) if "User.MessageVolume.StarIsError"'=sn { if %nolock=0 { do ..%SQLReleaseLock(%rowid,0,1) do:$g(il) $zu(115,2,il) } kill d set:sn'["." sn="User."_sn do $classmethod(sn,"%SQLQuickLoad",%rowid,%nolock,0,1) QUIT  }}}
	set d(2)=$lg(s,2) set d(3)=$lg(s)  }
	do ..%SQLQuickLogicalToOdbc(.d)
	if SQLCODE set %ROWCOUNT=0 set:SQLCODE<0 SQLCODE=-SQLCODE lock:ul -^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",d(1))#"SI" set %qrc=SQLCODE QUIT
	set:qq d=$zobjexport("User.MessageVolume.StarIsError",18),d=$zobjexport(3,18) set i=-1 for  { set i=$o(d(i)) quit:i=""  set d=$zobjexport(d(i),18) } set %qrc=0,%ROWCOUNT=1 lock:ul -^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",d(1))#"SI" if %nolock=0 { do ..%SQLReleaseLock(%rowid,0,0) do:$g(il) $zu(115,2,il) } QUIT
	Return
%SQLReleaseLock(%rowid,s=0,i=0,e="")
	new %d
	set:e="" e=1 set %d(1)=%rowid set s=$e("E",e)_$e("S",s)_$e("D",i)
	lock -^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1))#s
	QUIT
%SQLReleaseTableLock(s=0,i=0)
	set s=$e("S",s)_$e("D",i) lock -^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR")#s QUIT 1
	Return
%SQLUnlock()
	lock:$a(%l) -^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1))#"E"
	QUIT
%SQLUnlock2()
	lock:$a(%l,3) -^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",$zu(28,%d(2),7))#"D" QUIT
%SQLUnlockError(cname)
	set sqlcode=-110 if %oper="DELETE" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler48",,"User_MessageVolume"_"."_"StarIsError",cname) } else { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler49",,"User_MessageVolume"_"."_"StarIsError",cname) } quit
	Return
%SQLUpdate(%rowid,%check,%d,%vco,%tstart=1,%mv=0,%polymorphic=0,%soid)
	// SQL UPDATE method for table User_MessageVolume.StarIsError
	new %e,bva,%ele,%itm,%key,%f,%l,%n,%nc,%oper,%pos,%s,icol,omcall,s,sn,sqlcode,subs,t set %oper="UPDATE",sqlcode=0,%ROWID=%rowid,$e(%e,1)=$c(0),%l=$c(0,0,0,0)
	if '$d(%0CacheSQLRA) { new %0CacheSQLRA set omcall=1 }
	if '$a(%check,7) {
		if '$a(%check),'..%SQLValidateFields(.sqlcode) { set SQLCODE=sqlcode QUIT  }
	}
	if $d(%d(1)),%d(1)'=%rowid { set SQLCODE=-107,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler16",,"ID","User_MessageVolume"_"."_"StarIsError") QUIT  }
	for icol=2:1:3 { set $e(%e,icol)=$c($d(%d(icol))) }
	set %d(1)=%rowid,%e(1)=%rowid
	if '$a(%check,2) {
		new %ls lock +^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1))#"E":$zu(115,4) set %ls=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,4:2,2:2,1:3,:""))
		set:%ls=2 $e(%check,2)=$c(1) set:%ls=2&&($tlevel) %0CacheLock("User.MessageVolume.StarIsError","E")=1 set:$case(%ls,1:1,2:1,:0) $e(%l)=$c(1)
		if '%ls||(%ls=3) { set SQLCODE=-110,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer",$s('%ls:"SQLFiler40",1:"SQLFiler55"),,%oper,"User_MessageVolume"_"."_"StarIsError",$g(%d(1))) RETURN  }
	}
	if %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  }
	set $zt="ERRORUpdate"
	if $g(%vco)="" { do ..%SQLGetOld(%rowid,.%d,.%e,.sqlcode) i sqlcode { s SQLCODE=-109,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler59",,"User_MessageVolume"_"."_"StarIsError",%rowid) do ..%SQLEExit() QUIT  } for icol=3,2 { set:'$d(%d(icol)) %d(icol)=%e(icol) set:%d(icol)=%e(icol) $e(%e,icol)=$c(0) }} else { do ..%SQLGetOldAll() if sqlcode { set SQLCODE=-109,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler59",,"User_MessageVolume"_"."_"StarIsError",%rowid) do ..%SQLEExit() QUIT  } for icol=2,3 { set:'$d(%d(icol)) %d(icol)=%e(icol) set:%d(icol)=%e(icol) $e(%e,icol)=$c(0) }}
	if %e(3)'="" set sn=$p(%e(3),$e(%e(3)),$l(%e(3),$e(%e(3)))-1) if "User.MessageVolume.StarIsError"'=sn new %f do ..%SQLCopyIcolIntoName() do $classmethod(sn,"%SQLUpdate",%rowid,%check,.%d,$g(%vco),%tstart,%mv,1) QUIT
	if '$a(%check) {
		do {
			if $g(%vco)'="" { d @%vco quit:sqlcode<0  }
			if $a(%e,2),$g(%d(2))="" { do ..%SQLnBuild():'$d(%n),..%SQLMissing($lg(%n,3)) }
			quit:sqlcode
			if ($a(%e,2)) {	// UNIQUE constraint Primary
				if '($a(%check,2)#2),'$g(%0CacheLock("User.MessageVolume.StarIsError","E")) {
					lock +^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",$zu(28,%d(2),7)):$zu(115,4) if $t { set $e(%l,3)=$c(1) } else { do ..%SQLUnlockError("Primary") quit  } 
					lock +^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",$zu(28,%e(2),7)):$zu(115,4) if $t { lock -^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",$zu(28,%e(2),7)) } else { do ..%SQLUnlockError("Primary") quit  }
				}
				if $d(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",$zu(28,%d(2),7))),'$d(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",$zu(28,%d(2),7),%d(1))) { set sqlcode=-120,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler10",,"User_MessageVolume"_"."_"StarIsError","Primary","DxIsError"_"="_$$quoter^%apiSQL($g(%d(2)))) quit  }
			}
			new %fk,%st,%t,%y
			if ($a(%e,2)),'$zu(115,7) {
				set %t="" for  { set %t=$o(^rINDEXEXT("F","User.MessageVolume.StarIsError","Primary","f",%t)) quit:%t=""  set %st=(%t="User.MessageVolume.StarIsError") s %fk="" for  { set %fk=$o(^rINDEXEXT("F","User.MessageVolume.StarIsError","Primary","f",%t,%fk)) quit:%fk=""  x "set %y=$classmethod(%t,%fk_""SQLFKeyRefAction"",%st,""Primary"",$a(%check,2),%e(2),%d(2))" if %y { set sqlcode=-123 quit  }}}
			}
		} while 0
		if sqlcode { set SQLCODE=sqlcode do ..%SQLEExit() QUIT  }
	}
	if $a(%e,2)||$a(%e,3) {
		set ^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1))=$listupdate($g(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%d(1))),1,$a(%e,3):%d(3),$a(%e,2):%d(2))
	}
	if '$a(%check,3) { 
		if $a(%e,2)||$a(%e,3) {	// Primary index map
			if $a(%e,2) { set sn(1)=$zu(28,%e(2),7) set sn(2)=%d(1) k ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",sn(1),sn(2)) }
			set sn(1)=$zu(28,%d(2),7) set sn(2)=%d(1) set ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",sn(1),sn(2))=%d(3)
		}
	}
	do ..%SQLUnlock2()
	do ..%SQLUnlock() TCOMMIT:%tstart&&($zu(115,1)=1)
	set SQLCODE=0 kill:$g(omcall) %0CacheSQLRA
	QUIT
ERRORUpdate	set $zt="",SQLCODE=-415,%msg=$s($g(%msg)'="":%msg_" -- ",1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler51",,%oper,"User_MessageVolume"_"."_"StarIsError",$ze) if $ze["<FRAMESTACK>" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler52",,$ze,%oper,"User_MessageVolume"_"."_"StarIsError") do ##Class(%SYS.System).WriteToConsoleLog(%msg) if ($zu(67,10,$j)=1)||($zu(67,10,$j)=3) { write !,%msg h 3 } HALT  } do ..%SQLEExit() QUIT  
	Return
%SQLValidateFields(sqlcode)
	if $g(%d(2))'="",'($$ValidateField2(%d(2))) { set sqlcode=..%SQLInvalid(2+1,%d(2)) } 
	QUIT 'sqlcode
ValidateField2(pArg) { Quit ##class(%DeepSee.DimensionTable).%ValidateKEY(pArg)
}
	Return
%SQLnBuild() public {
	set %n=$lb(,"ID","DxIsError","x__classname")
	QUIT }
%SaveData(id) public {
	try {
		set id=$listget(i%"%%OID") if id'="" { set insert=0,idassigned=1 } else { set insert=1,idassigned=0 }
		set lock=0,lockok=0,tSharedLock=0,locku=$c(0)
		if 'idassigned { set id=$i(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR")) do ..%IdSet(id) set:$g(%objtxSTATUS)=2 %objtxOIDASSIGNED(+$this)="" }
		set zzc10v1=$zu(28,i%DxIsError,7,32768)
		try {
			set tInnerException = ""
			;
			if 'insert {
				if (i%%Concurrency<4)&&(i%%Concurrency) { lock +(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E"):$zu(115,4) set lockok=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:lockok=2&&($tlevel) %0CacheLock($classname(),"E")=1 if lockok { set lock=1 } else { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				if ('$Data(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id))) {
					set insert=1
					if lock { lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E") set (lock,lockok) = 0 }
				}
			}
			if insert {
				if ('lockok&&..%Concurrency&&$tlevel)||(i%%Concurrency=4) {  lock +(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E"):$zu(115,4) set lockok=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:(lockok=2&&(i%%Concurrency'=4)) %0CacheLock($classname(),"E")=1 set:lockok lock=1 if 'lockok { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				if i%%Concurrency=3 { lock +(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"ES") set tSharedLock=1 }
				if (i%%Concurrency)&&('$g(%0CacheLock($classname(),"E"))) { l +^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1):$zu(115,4) if $Test { Set $Extract(locku,1)=$c(1) } Else { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } } If $data(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1)) { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5808,$classname()_":Primary:"_$zreference)) }
				set ^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)=$lb("",i%DxIsError)
				set ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1,id)=""
			}
			else {
				set zzc31v1=$listget(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id),2)
				set zzc31v2=$zu(28,zzc31v1,7,32768)
				if i%DxIsError'=zzc31v1 { if (i%%Concurrency)&&('$g(%0CacheLock($classname(),"E"))) { lock +^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1):$zu(115,4) if $Test { Set $Extract(locku,1)=$c(1) } else { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } l +^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc31v2):$zu(115,4) if $t { l -^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc31v2) } Else { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) }} If ($data(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1)))&&('$data(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1,id))) { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5808,$classname()_":Primary:"_$zreference)) } }
				if (i%DxIsError'=zzc31v1) {
					kill ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc31v2,id)
					if i%DxIsError'=zzc31v1{ n %fk,%fc s %fc="" f  s %fc=$o(^rINDEXEXT("F",$classname(),"Primary","f",%fc)) q:%fc=""  s %fk="" f  s %fk=$o(^rINDEXEXT("F",$classname(),"Primary","f",%fc,%fk)) q:%fk=""  s tStatus=$classmethod(%fc,%fk_"Update",zzc31v1,i%DxIsError) i ('tStatus) Throw ##class(%Exception.StatusException).ThrowIfInterrupt(tStatus) }
					set ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1,id)=""
				}
				set ^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)=$lb("",i%DxIsError)
			}
			set tStatus = 1
		}
		catch tInnerException {
			if ('idassigned) { Set $zobjoid("",$listget(i%"%%OID"))="",i%"%%OID"="" kill:$g(%objtxSTATUS)=2 %objtxOIDASSIGNED(+$this) }
			if (tSharedLock) {  lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"ES") } elseif (lockok=1)&&(insert)&&(i%%Concurrency=4) {  lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)) }
		}
		lock:$Ascii($Extract(locku,1)) -^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1)#"D"
		if lock lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E")
		if $Isobject(tInnerException) { throw tInnerException }
	}
	catch tException {
		set tStatus = tException.AsStatus()
	}
	quit tStatus }
%SaveDirect(id="",idList="",data,concurrency=-1) public {
	try {
		set zzc5v1=$listget(data,2)
		set zzc5v2=$listget(data,1)
		if concurrency=-1 { set concurrency=$zu(115,10) }
		if id'="" { set insert=0,idassigned=1 } else { set insert=1,idassigned=0 }
		set lock=0,tSharedLock=0,locku=$c(0)
		if 'idassigned { set id=$i(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR")) }
		set zzc10v1=$zu(28,zzc5v1,7,32768)
		try {
			set tInnerException = ""
			;
			if 'insert {
				if concurrency { lock +(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E"):$zu(115,4) set lock=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:lock=2&&($tlevel) %0CacheLock($classname(),"E")=1 if 'lock { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				if ('$Data(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id))) {
					set insert=1
					if lock { lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E") set (lock,lockok) = 0 }
				}
			}
			if insert {
				if concurrency { lock +(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E"):$zu(115,4) set lock=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:lock=2&&($tlevel) %0CacheLock($classname(),"E")=1 if 'lock { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				if (concurrency)&&('$g(%0CacheLock($classname(),"E"))) { l +^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1):$zu(115,4) if $Test { Set $Extract(locku,1)=$c(1) } Else { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } } If $data(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1)) { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5808,$classname()_":Primary:"_$zreference)) }
				set ^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)=data
				set ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1,id)=zzc5v2
			}
			else {
				set zzc31v1=$lg(idList,1)
				set zzc31v2=$listget(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",zzc31v1),2)
				set zzc31v3=$zu(28,zzc31v2,7,32768)
				if zzc5v1'=zzc31v2 { if (concurrency)&&('$g(%0CacheLock($classname(),"E"))) { lock +^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1):$zu(115,4) if $Test { Set $Extract(locku,1)=$c(1) } else { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } l +^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc31v3):$zu(115,4) if $t { l -^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc31v3) } Else { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) }} If ($data(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1)))&&('$data(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1,id))) { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5808,$classname()_":Primary:"_$zreference)) } }
				if (zzc5v1'=zzc31v2) {
					kill ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc31v3,zzc31v1)
					if zzc5v1'=zzc31v2{ n %fk,%fc s %fc="" f  s %fc=$o(^rINDEXEXT("F",$classname(),"Primary","f",%fc)) q:%fc=""  s %fk="" f  s %fk=$o(^rINDEXEXT("F",$classname(),"Primary","f",%fc,%fk)) q:%fk=""  s tStatus=$classmethod(%fc,%fk_"Update",zzc31v2,zzc5v1) i ('tStatus) Throw ##class(%Exception.StatusException).ThrowIfInterrupt(tStatus) }
					set ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1,id)=zzc5v2
				}
				set ^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)=data
			}
			set tStatus = 1
		}
		catch tInnerException {
		}
		lock:$Ascii($Extract(locku,1)) -^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",zzc10v1)#"D"
		if lock lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E")
		if $Isobject(tInnerException) { throw tInnerException }
	}
	catch tException {
		set tStatus = tException.AsStatus()
	}
	quit tStatus }
%SaveIndices(pStartId="",pEndId="",lockExtent=0) public {
	If lockExtent {
		Set sc=..%LockExtent(0)
		Quit:('sc) sc
	}
	s id=$order(^DeepSee.Dimension(pStartId),-1),tEndId=$S(pEndId'="":pEndId,1:pStartId)
BSLoop	s id=$O(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)) g:(id="")||(id]]tEndId) BSLoopDun
	Set bsv0N1=$Get(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id))
	Set bsv0N2=$zu(28,$listget(bsv0N1,2),7,32768)
	Set ^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",bsv0N2,id)=$listget(bsv0N1,1)
	g BSLoop
BSLoopDun
	If lockExtent { Do ..%UnlockExtent(0) }
	Quit 1
CatchError	Set $ZTrap=""
	If $ZE'="" {
		Set sc = $$Error^%apiOBJ(5002,$ZE)
	}
	If lockExtent { Do ..%UnlockExtent(0) }
	Quit sc }
%SortBegin(idxlist="",excludeunique=0)
	if 'excludeunique,$select(idxlist="":1,$listfind(idxlist,"Primary"):1,1:0) If $SortBegin(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary"))
	Quit 1
%SortEnd(idxlist="",commit=1,excludeunique=0) public {
	if 'excludeunique,$select(idxlist="":1,$listfind(idxlist,"Primary"):1,1:0) If $SortEnd(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary"),commit)
	Quit 1 }
%UnlockExtent(shared=0,immediate=0) public {
	If 'shared {
		If 'immediate {
			Lock -^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR")
			 Quit 1
		}
		Lock -^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR")#"I"
		Quit 1
	}
	If 'immediate {
		Lock -^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR")#"S"
		Quit 1
	}
	Lock -^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR")#"SI"
	Quit 1 }
%UnlockId(id,shared=0,immediate=0) public {
	If 'shared {
		If 'immediate {
			Lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"E")
			Quit 1
		}
		Lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"IE")
		Quit 1
	}
	If 'immediate {
		Lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"SE")
		Quit 1
	}
	Lock -(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)#"SIE")
	Quit 1 }
%ValidateIndices(idxList="",autoCorrect=0,lockOption=1,multiProcess=1,mapList,verbose=1,errors)
	if '$listvalid(idxList) { QUIT $$Error^%apiOBJ(5591,"##class(User.MessageVolume.StarIsError).%ValidateIndices()","idxList",""""" or a $list of index names") }
	if $case(autoCorrect,1:0,0:0,:1) { QUIT $$Error^%apiOBJ(5591,"##class(User.MessageVolume.StarIsError).%ValidateIndices()","autoCorrect","'0' or '1'") }
	if $case(lockOption,2:0,1:0,0:0,:1) { QUIT $$Error^%apiOBJ(5591,"##class(User.MessageVolume.StarIsError).%ValidateIndices()","lockOption","'0', '1' or '2'") }
	if $case(multiProcess,1:0,0:0,:1) { QUIT $$Error^%apiOBJ(5591,"##class(User.MessageVolume.StarIsError).%ValidateIndices()","multiProcess","'0' or '1'") }
	if $case(verbose,1:0,0:0,:1) { QUIT $$Error^%apiOBJ(5591,"##class(User.MessageVolume.StarIsError).%ValidateIndices()","verbose","'0' or '1'") }
	new mapList QUIT $$ValidateIndices^%SYS.SECURITY("User.MessageVolume.StarIsError",idxList,autoCorrect,lockOption,multiProcess,,verbose,.errors)
%ValidateObject(unused=0,checkserial=1) public {
	set sc=1
	If '$system.CLS.GetModified() Quit sc
	Set iv=..DxIsError If iv="" Set rc=$$Error^%apiOBJ(5659,$classname()_"::DxIsError("_$this_",ID="_..%Id()_")"),sc=$select(+sc:rc,1:$$AppendStatus^%occSystem(sc,rc))
	If m%DxIsError Set rc=(..DxIsErrorIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"DxIsError",iv)
	Quit sc }
zDxIsErrorIsValid(pArg) public {
 Quit ##class(%DeepSee.DimensionTable).%ValidateKEY(pArg)
}
zDxIsErrorGetStored(id) public {
	Quit $Select(id'="":$listget($g(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",id)),2),1:"") }
zExtentClose(%qHandle) [ SQLCODE ] public {
	New SQLCODE
	Do %qHandle.%Destruct() Kill %qHandle
	If SQLCODE { Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.%Message=$g(%msg) Set sc=$$Error^%apiOBJ(5540,SQLCODE,$get(%msg)) } Else { Set sc=1 }
	Quit sc }
zExtentExecute(%qHandle) [ SQLCODE ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE 
	Set sc=1
	 ;---&sql(DECLARE QExtent CURSOR FOR
 	 ;---		 SELECT ID FROM User_MessageVolume.StarIsError)
 	 ;--- ** SQL PUBLIC Variables: SQLCODE
	 
	 ;---&sql(OPEN QExtent)
	try { if $g(%qHandle)'="" { s SQLCODE=-101 } else { s %qHandle=$classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEubMhNMOFGSWfJC2EHPeoAQlAzf","%New") if '$isobject(%qHandle) s %qHandle=$$%0dsqlJ() } } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEubMhNMOFGSWfJC2EHPeoAQlAzf")||($ze["<ZSQLU>") { s %qHandle=$$%0dsqlJ() } else { throw } }
	If SQLCODE { Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.%Message=$g(%msg) Set sc=$$Error^%apiOBJ(5821,"SQLCODE = "_SQLCODE) } Else { Set sc=1 }
	Quit sc }
zExtentFetch(%qHandle,Row,AtEnd=0) [ SQLCODE ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE 
	Set Row="",AtEnd=0
	 ;---&sql(FETCH QExtent INTO :c1)
 	 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
	if $isobject($g(%qHandle))'=1 { s SQLCODE=-102 } else { do %qHandle.FET() if SQLCODE=0 { s c1=%qHandle.sqlcol1 } }
	If 'SQLCODE { Set Row=$lb(c1) Set sc=1 }
	ElseIf SQLCODE=100 { Set AtEnd=1,sc=1 Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.%ROWCOUNT=$g(%ROWCOUNT) }
	Else { Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.Message=$g(%msg) Set AtEnd=1,sc=$$Error^%apiOBJ(5540,SQLCODE,$get(%msg)) }
	QUIT sc }
zExtentFetchRows(%qHandle,FetchCount=0,RowSet,ReturnCount,AtEnd) [ SQLCODE ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE 
	Set RowSet="",ReturnCount=0,AtEnd=0
	For {
		 ;---&sql(FETCH QExtent INTO :c1)
 		 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
		if $isobject($g(%qHandle))'=1 { s SQLCODE=-102 } else { do %qHandle.FET() if SQLCODE=0 { s c1=%qHandle.sqlcol1 } }
		If 'SQLCODE { Set RowSet=RowSet_$lb(c1),ReturnCount=ReturnCount+1 Quit:(ReturnCount=FetchCount)||(($l(RowSet)+($l(RowSet)\ReturnCount))>24000) } Else { Set AtEnd=1 Quit }
	}
	If 'SQLCODE { Set sc=1 } ElseIf SQLCODE=100 { Set sc=1 Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.%ROWCOUNT=$g(%ROWCOUNT) } Else { Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.Message=$g(%msg) Set sc=$$Error^%apiOBJ(5540,SQLCODE,$get(%msg)) }
	Quit sc }
zExtentSendODBC(%qHandle,array,qacn,%qrc,piece,ColumnCount) [ SQLCODE ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE 
	set %qrc=0,piece=0
	for {
		set rc=..ExtentFetch(.%qHandle,.row,.atend)
		if ('rc) { set %qrc=-400 set:$isobject($get(%sqlcontext)) %sqlcontext.SQLCode=-400,%sqlcontext.Message=$g(%msg) do ProcessError^%ourProcedure(rc,$get(%sqlcontext),.%qrc,.%msg),Logerr^%SYS.SQLSRV(%qrc,"","SP",.%msg) RETURN  }
		if row="" { set %qrc=100 set:$isobject($get(%sqlcontext)) %sqlcontext.SQLCode=100 RETURN  }
		if $g(%protocol)>50 { RETURN:$zobjexport(row,60) }
		else {
			if %protocol>46 { for piece=1:1:ColumnCount { goto:$zobjexport($lg(row,piece),50) SPDone } }
			else { for piece=1:1:ColumnCount { goto:$zobjexport($lg(row,piece),7) SPDone } }
		}
	}
	QUIT
SPDone	set:%protocol>46 piece=piece+1
	kill array(qacn)
	for i=piece:1:ColumnCount { set array(qacn,i)=$lg(row,i) }
	QUIT }
 q
%0dsqlJ()	n %xxsql
	s %xxsql("S",1)="DECLARE QExtent CURSOR FOR SELECT ID "
	s %xxsql("S",2)="INTO  :i%sqlcol1"
	s %xxsql("S",3)="FROM User_MessageVolume . StarIsError"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("I","%DeepSee")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")=""
	s %xxsql("NS")="DEMONSTRATION"
	return $$BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Runtime","","","User.MessageVolume",0,"",),",1,QExtent,","User.MessageVolume.StarIsError.CLS",1)
zExtentFunc() public {
	try {
		set tSchemaPath = ##class(%SQL.Statement).%ClassPath($classname())
			set tStatement = ##class(%SQL.Statement).%New(,tSchemaPath)
			do tStatement.prepare(" SELECT ID FROM User_MessageVolume . StarIsError")
		set tResult = tStatement.%Execute()
	}
	catch tException { if '$Isobject($Get(tResult)) { set tResult = ##class(%SQL.StatementResult).%New() } set tResult.%SQLCODE=tException.AsSQLCODE(),tResult.%Message=tException.AsSQLMessage() }
	Quit tResult }
zExtentGetInfo(colinfo,parminfo,idinfo,%qHandle,extoption=0,extinfo) public {
 s parminfo=""
	s:'($d(^oddCOM($classname(),"q","Extent",21),clientinfo)#2)&&'$s($d(^(2),clientinfo)#2&&(clientinfo'=$classname()):$d(^oddCOM(clientinfo,"q","Extent",21),clientinfo)#2||($d(^oddDEF(clientinfo,"q","Extent",21),clientinfo)#2),1:$d(^oddDEF($classname(),"q","Extent",21),clientinfo)#2) clientinfo=""
	Set:extoption extinfo=$s($d(^oddCOM($classname(),"q","Extent",38))#2:^(38),$d(^oddCOM($g(^(2),$classname()),"q","Extent",38))#2:^(38),1:$s($d(^oddDEF($g(^oddCOM($classname(),"q","Extent",2),$classname()),"q","Extent",38))#2:^(38),1:""))
	If clientinfo'="" Set colinfo=$listget(clientinfo,1),parminfo=$listget(clientinfo,2),idinfo=$listget(clientinfo,3) Quit 1
	Set colinfo="",parminfo="",idinfo=$listbuild(0)
	Set sc=$$externaltype^%apiOLE("%Library.Integer",.exttypes,"0")
	Quit:('sc) sc
	s:'($d(^oddCOM($classname(),"q","Extent",23),names)#2)&&'$s($d(^(2),names)#2&&(names'=$classname()):$d(^oddCOM(names,"q","Extent",23),names)#2||($d(^oddDEF(names,"q","Extent",23),names)#2),1:$d(^oddDEF($classname(),"q","Extent",23),names)#2) names=""
	s:'($d(^oddCOM($classname(),"q","Extent",22),captions)#2)&&'$s($d(^(2),captions)#2&&(captions'=$classname()):$d(^oddCOM(captions,"q","Extent",22),captions)#2||($d(^oddDEF(captions,"q","Extent",22),captions)#2),1:$d(^oddDEF($classname(),"q","Extent",22),captions)#2) captions=""
	For i=1:1:1 Set colinfo=colinfo_$listbuild($listbuild($listget(names,i),$piece(exttypes,",",i),$listget(captions,i)))
	Set idinfo=$listbuild(1,$classname())
	s ^oddCOM($classname(),"q","Extent",21)=$listbuild(colinfo,parminfo,idinfo)
	Quit 1 }
zExtentGetODBCInfo(colinfo,parminfo,qHandle) public {
	set version = $Select($Get(%protocol,41)>40:4,1:3)
	Set metadata=$lb(1,1,"ID",4,10,0,2,"ID","StarIsError","User_MessageVolume","",$c(0,0,0,0,0,0,0,0,0,0,0,1),0)
	Set colcount=$li(metadata,2),cmdlen=colcount*10,parmcount=$li(metadata,3+cmdlen),pmdlen=parmcount*6,parminfo=$li(metadata,cmdlen+3,cmdlen+pmdlen+3)
	If version=4 {
		Set colinfo=$li(metadata,2,2+cmdlen)
	} Else {
		Set colinfo=$li(metadata,2,2)
		For i=0:1:colcount-1 Set colinfo=colinfo_$list(metadata,3+(i*10),11+(i*10))
	}
	Quit 1 }
zPrimaryCheckUnique(id="",pValue...) [ SQLCODE,id,pValue ] public { New SQLCODE 
	if $Get(pValue(1))'="" {
		 ;---&sql(SELECT 1 as _PassFail FROM User_MessageVolume.StarIsError WHERE DxIsError = :pValue(1) AND %ID <> :id)
 		 ;--- ** SQL PUBLIC Variables: SQLCODE, id, pValue
		try { d $classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEjOmoQyRO19my3Tg4Qyk2NnrNgn","%New") } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEjOmoQyRO19my3Tg4Qyk2NnrNgn")||($ze["<ZSQLU>") { d %0dsqlN } else { throw } }
		Quit SQLCODE=100
	} else { quit 1 } }
 q
%0dsqlN	n %xxsql
	s %xxsql("S",1)="SELECT 1 AS _PassFail FROM User_MessageVolume . StarIsError WHERE DxIsError = :pValue(1) AND %ID <> :id"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("I","%DeepSee")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")=""
	s %xxsql("NS")="DEMONSTRATION"
	d BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","User.MessageVolume",0,"",),,"User.MessageVolume.StarIsError.CLS")
	q
zIDKEYCheck(K1,lockonly=0,concurrency=-1) public {
	s id=K1,exists=..%ExistsId(id) q:'exists $s('lockonly:$$Error^%apiOBJ(5797,$classname(),"IDKEY",id),1:1) s:concurrency=-1 concurrency=$select(..#DEFAULTCONCURRENCY="$zu(115,10)":$zu(115,10),1:$xecute("q "_..#DEFAULTCONCURRENCY)) if concurrency { s status=..%LockId(id,1) q:('status) status } if 'lockonly { s exists=..%ExistsId(id) d:concurrency ..%UnlockId(id,1,0) quit $s('exists:$$Error^%apiOBJ(5797,$classname(),"IDKEY",id),1:1) } else { d:concurrency ..%UnlockId(id,1,0) q 1 }
}
zIDKEYDelete(K1,concurrency=-1) public {
	Quit ..%DeleteId(.K1,concurrency) }
zIDKEYExists(K1,id="") public {
	s id=K1 q ..%ExistsId(K1) }
zIDKEYOpen(K1,concurrency=-1,sc) public { s:'($d(sc)#2) sc=1
	Quit ..%OpenId(.K1,concurrency,.sc) }
zIDKEYSQLCheckUnique(pFromOrig=0,%pID,%pVals...)
 QUIT $$Error^%apiOBJ(5758,"%Persistent::IDKEYSQLCheckUnique")
zIDKEYSQLExists(pLockOnly=0,pUnlockRef,%pVal...)
	// SQL Foreign Key validation entry point for Key IDKEY.  Called by FKeys that reference this Key to see if the row is defined
	new id set id=%pVal(1)
	if pLockOnly>=0 { if '..%SQLGetLock(id,1,.pUnlockRef) { set sqlcode=-114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler39",,"User_MessageVolume"_"."_"StarIsError"_":"_"IDKEY") QUIT 0 } }
	if pLockOnly<1 {
		new qv set qv=$d(^DeepSee.Dimension("USER.MESSAGEVOLUME.STARISERROR",%pVal(1))) QUIT:pLockOnly=-1 qv
		do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) quit qv
	}
	else { do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) QUIT 1 }
	Return
zIDKEYSQLFindPKeyByConstraint(%con)
 QUIT $$Error^%apiOBJ(5758,"%Persistent::IDKEYSQLFindPKeyByConstraint")
zIDKEYSQLFindRowIDByConstraint(%con,pInternal=0)
 QUIT $$Error^%apiOBJ(5758,"%Persistent::IDKEYSQLFindRowIDByConstraint")
zPrimaryCheck(K1,lockonly=0,concurrency=-1) public {
	s exists=..PrimaryExists(K1,.id) q:'exists $s('lockonly:$$Error^%apiOBJ(5797,$classname(),"Primary",K1),1:1) s:concurrency=-1 concurrency=$select(..#DEFAULTCONCURRENCY="$zu(115,10)":$zu(115,10),1:$xecute("q "_..#DEFAULTCONCURRENCY)) if concurrency { s status=..%LockId(id,1) q:('status) status } if 'lockonly { s exists=..PrimaryExists(K1,.idcheck) d:concurrency ..%UnlockId(id,1,0) quit $s(('exists)||(id'=idcheck):$$Error^%apiOBJ(5797,$classname(),"Primary",K1),1:1) } else { d:concurrency ..%UnlockId(id,1,0) q 1 }
}
zPrimaryDelete(K1,concurrency=-1) public {
	i ..PrimaryExists(K1,.id){ s sc=..%DeleteId(id,concurrency) } Else { s sc=$$Error^%apiOBJ(5771,"Primary",K1) }
	QUIT sc }
zPrimaryExists(K1,id="") [ K1,SQLCODE,id ] public { New SQLCODE 
	 ;---&sql(SELECT %ID INTO :id FROM User_MessageVolume.StarIsError WHERE (:K1 is not null and DxIsError = :K1) OR (:K1 IS NULL AND DxIsError IS NULL))
 	 ;--- ** SQL PUBLIC Variables: K1, SQLCODE, id
	try { d $classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEZEKM1aDahziB908eEZfqqrqiDZ","%New") } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEZEKM1aDahziB908eEZfqqrqiDZ")||($ze["<ZSQLU>") { d %0dsqlP } else { throw } }
	Quit $select('SQLCODE:1,1:0) }
 q
%0dsqlP	n %xxsql
	s %xxsql("S",1)="SELECT %ID INTO :id FROM User_MessageVolume . StarIsError WHERE ( :K1 IS NOT NULL AND DxIsError = :K1 ) OR ( :K1 IS NULL AND DxIsError IS NULL )"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("I","%DeepSee")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")=""
	s %xxsql("NS")="DEMONSTRATION"
	d BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","User.MessageVolume",0,"",),,"User.MessageVolume.StarIsError.CLS")
	q
zPrimaryOpen(K1,concurrency=-1,sc) public { s:'($d(sc)#2) sc=1
 i ..PrimaryExists(K1,.id){ s return=..%OpenId(id,concurrency,.sc) } Else { s sc=$$Error^%apiOBJ(5770,"Primary",K1),return="" }
 QUIT return }
zPrimarySQLCheckUnique(pFromOrig=0,%pID,%pVals...)
 QUIT $$Error^%apiOBJ(5758,"%Persistent::PrimarySQLCheckUnique")
zPrimarySQLExists(pLockOnly=0,pUnlockRef,%pVal...)
	// SQL Foreign Key validation entry point for Key Primary.  Called by FKeys that reference this Key to see if the row is defined
	new id set id=..PrimarySQLFindRowIDByConstraint($lb(%pVal(1)),1) QUIT:SQLCODE $s('pLockOnly:0,1:1)
	if pLockOnly>=0 { if '..%SQLGetLock(id,1,.pUnlockRef) { set sqlcode=-114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler39",,"User_MessageVolume"_"."_"StarIsError"_":"_"Primary") QUIT 0 } }
	if pLockOnly<1 {
		new qv set qv=$d(^DeepSee.DimensionI("USER.MESSAGEVOLUME.STARISERROR","Primary",$zu(28,%pVal(1),7))) QUIT:pLockOnly=-1 qv
		do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) quit qv
	}
	else { do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) QUIT 1 }
	Return
zPrimarySQLFindPKeyByConstraint(%con)
 QUIT $$Error^%apiOBJ(5758,"%Persistent::PrimarySQLFindPKeyByConstraint")
zPrimarySQLFindRowIDByConstrain(%con,pInternal=0)
	// Get ROWID value for UNIQUE Key Primary value given in %con
	new %d,id,rtm set rtm=$zu(115,5,$s(pInternal:0,1:1)) set %d(2)=$lg(%con,1)
	set %ROWCOUNT=0 set:'pInternal %qrc=0
	 ;---&sql(SELECT %ID INTO :id FROM User_MessageVolume.StarIsError WHERE DxIsError = :%d(2))
 	 ;--- ** SQL PUBLIC Variables: %d, SQLCODE, id
	try { d $classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEkNVkv9SF94sG8FApg4KlZ8XRoX","%New") } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEkNVkv9SF94sG8FApg4KlZ8XRoX")||($ze["<ZSQLU>") { d %0dsqlR } else { throw } }
	do $zu(115,5,rtm)
	if pInternal { QUIT:'SQLCODE $g(id) RETURN "" }
	if SQLCODE { set:SQLCODE<0 %qrc=-SQLCODE set:'%ROWCOUNT&&(SQLCODE=100) id="",%qrc=0 } set d=$zobjexport(id,18) QUIT
	Return
 q
%0dsqlR	n %xxsql
	s %xxsql("S",1)="SELECT %ID INTO :id FROM User_MessageVolume . StarIsError WHERE DxIsError = :%d(2)"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("I","%DeepSee")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")=""
	s %xxsql("NS")="DEMONSTRATION"
	d BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Runtime","","","User.MessageVolume",0,"",),,"User.MessageVolume.StarIsError.CLS")
	q